
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТМЦ") Тогда
		// Заполнение шапки
		Автомашина = ДанныеЗаполнения.Автомашина;
		Автор = ДанныеЗаполнения.Автор;
		ДатаВходящегоДокумента = ДанныеЗаполнения.ДатаВходящегоДокумента;
		ДатаДоверенности = ДанныеЗаполнения.ДатаДоверенности;
		Договор = ДанныеЗаполнения.Договор;
		Источник = ДанныеЗаполнения.Источник;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Контрагент = ДанныеЗаполнения.Контрагент;
		НомерВходящегоДокумента = ДанныеЗаполнения.НомерВходящегоДокумента;
		НомерДоверенности = ДанныеЗаполнения.НомерДоверенности;
		НомерТТН = ДанныеЗаполнения.НомерТТН;
		Организация = ДанныеЗаполнения.Организация;
		Проект = ДанныеЗаполнения.Проект;
		Склад = ДанныеЗаполнения.Склад;
		Основание = ДанныеЗаполнения.Ссылка;
		СтавкаНДС = ДанныеЗаполнения.СтавкаНДС;
		Сумма = ДанныеЗаполнения.Сумма;
		ТранспортныеРасходы = ДанныеЗаполнения.ТранспортныеРасходы;
		УчетПоСальдо = ДанныеЗаполнения.УчетПоСальдо;
		Экспедитор = ДанныеЗаполнения.Экспедитор;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Вес = ТекСтрокаТовары.Вес;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Объем = ТекСтрокаТовары.Объем;
			НоваяСтрока.СтавкаНДС = ТекСтрокаТовары.СтавкаНДС;
			НоваяСтрока.СуммаБазовая = ТекСтрокаТовары.СуммаБазовая;
			НоваяСтрока.СуммаНДС = ТекСтрокаТовары.СуммаНДС;
			НоваяСтрока.СуммаПродажная = ТекСтрокаТовары.СуммаПродажная;
			НоваяСтрока.Товар = ТекСтрокаТовары.Товар;
			НоваяСтрока.ЦенаБазовая = ТекСтрокаТовары.ЦенаБазовая;
			НоваяСтрока.ЦенаПродажная = ТекСтрокаТовары.ЦенаПродажная;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// Подготовка регистров накопления
	Движения.Остатки.Записывать = Истина;
	Движения.Сальдо.Записывать = Истина;
	Движения.СальдоПоТаре.Записывать = Истина;;
	
	// Обработка товаров
	Для Каждого Строка Из Товары Цикл
		Если Строка.Товар.ВидТовара.ТипТовара = Перечисления.ТипыТовара.ТараПродажная ИЛИ Строка.Товар.ВидТовара.ТипТовара = Перечисления.ТипыТовара.ТараВозвратная ИЛИ Строка.Товар.ВидТовара.ТипТовара = Перечисления.ТипыТовара.Материал Тогда
			// Расход сальдо по таре
			Движение = Движения.СальдоПоТаре.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Товар = Строка.Товар;
			Движение.Контрагент = Контрагент;
			Движение.Количество = Строка.Количество;
			Движение.Сумма = Строка.Количество * Строка.ЦенаБазовая;
		КонецЕсли;
		
		Если Строка.Товар.ВидТовара.ТипТовара = Перечисления.ТипыТовара.Товар ИЛИ Строка.Товар.ВидТовара.ТипТовара = Перечисления.ТипыТовара.Материал Тогда
			// Расход товаров
			Движение = Движения.Остатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Склад = Склад;
			Движение.Товар = Строка.Товар;
			Движение.Порожняя = (Строка.Товар.ВидТовара.ТипТовара <> Перечисления.ТипыТовара.Товар);
			Движение.Примечание = глНайтиПримечания(Комментарий);
			Движение.Количество = Строка.Количество;
			Движение.Сумма = Строка.СуммаБазовая;
		ИначеЕсли Строка.Товар.ВидТовара.ТипТовара = Перечисления.ТипыТовара.ТараПродажная ИЛИ Строка.Товар.ВидТовара.ТипТовара = Перечисления.ТипыТовара.ТараВозвратная Тогда
			// Расход пустой тары
			Движение = Движения.Остатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Склад = Склад;
			Движение.Товар = Строка.Товар;
			Движение.Порожняя = Истина;
			Движение.Примечание = глНайтиПримечания(Комментарий);
			Движение.Количество = Строка.Количество;
			Движение.Сумма = Строка.Количество * Строка.ЦенаБазовая;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.Товар.Тара) Тогда
			// Расход сальдо по таре
			Движение = Движения.СальдоПоТаре.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Товар = Строка.Товар.Тара;
			Движение.Контрагент = Контрагент;
			Движение.Количество = Строка.Количество;
			Движение.Сумма = 0;
			
			// Расход тары
			Движение = Движения.Остатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Склад = Склад;
			Движение.Товар = Строка.Товар.Тара;
			Движение.Порожняя = Ложь;
			Движение.Примечание = глНайтиПримечания(Комментарий);
			Движение.Количество = Строка.Количество;
			Движение.Сумма = 0;
		КонецЕсли;
	КонецЦикла;
	
	// Сальдо
	Если УчетПоСальдо Тогда
		Движение = Движения.Сальдо.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Безнал;
		Движение.Контрагент = Контрагент;
		Движение.Примечание = глНайтиПримечания(Комментарий);
		Движение.Сумма = Товары.Итог("СуммаПродажная") + ТранспортныеРасходы;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Для Каждого Строка Из Товары Цикл
			Если Строка.СуммаОтпускная = 0 Тогда
				Строка.СуммаОтпускная = Строка.ЦенаОтпускная * Строка.Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Итоги
	Сумма = Товары.Итог("СуммаПродажная") + ТранспортныеРасходы;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидРеализации", Объект.ВидРеализации));
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад", Объект.Склад));
	
	Обновить();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если Объект.Проведен Тогда
		Элементы.Дата.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Отгрузка) И Объект.Отгрузка.Проведен И Объект.Отгрузка.Статус <> Перечисления.СтатусыОтгрузки.Оформлен Тогда
		//ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.Товары.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    НастроитьФорму();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Обновить();
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ВидРеализацииПриИзменении(Элемент)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидРеализации", Объект.ВидРеализации));
	
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	НастроитьФорму(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад", Объект.Склад));
	Объект.СкладНакопления = ОбщийМодульСервер.ПолучитьЗначениеРеквизита(Объект.Склад, "Накопитель");
КонецПроцедуры

&НаСервере
Процедура НаценкаПриИзмененииНаСервере()
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Наценка = Объект.Наценка;
		
		ТоварыПересчитатьСтроку(Строка.ПолучитьИдентификатор(), "ТоварыНаценка");
	КонецЦикла;
	
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура НаценкаПриИзменении(Элемент)
	Если Объект.Товары.Количество() > 0 И Вопрос("Хотите установить новую наценку для всех товаров?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ТоварыНаценка;
		
		НаценкаПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкидкаПриИзмененииНаСервере()
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Скидка = Объект.Скидка;
		
		ТоварыПересчитатьСтроку(Строка.ПолучитьИдентификатор(), "ТоварыСкидка");
	КонецЦикла;
	
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СкидкаПриИзменении(Элемент)
	Если Объект.Товары.Количество() > 0 И Вопрос("Хотите установить новую скидку для всех товаров?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ТоварыСкидка;
		
		СкидкаПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОкруглениеПриИзменении(Элемент)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОкруглениеНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОкругленитьИтоговуюСумму();
	
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура АвтоОкруглениеПриИзменении(Элемент)
	ОкругленитьИтоговуюСумму();
	
	Обновить();
КонецПроцедуры


&НаКлиенте
Процедура КомандаСформироватьСчетФактуру(Кнопка)
	Если ЭтаФорма.Модифицированность Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		Если ОбщийМодульСервер.ПолучитьЗначениеРеквизита(Объект.ВидРеализации, "ТипВзаиморасчета") = ПредопределенноеЗначение("Перечисление.ТипыВзаиморасчета.Безнал") Тогда
			ФактурыКлиент.СформироватьСчетФактуру(Объект);
		Иначе
			ФактурыКлиент.СформироватьСчетФактуруДляАгента(Объект);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСформироватьАктСверкиДляТары(Кнопка)
	Если ЭтаФорма.Модифицированность Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		ФактурыКлиент.СформироватьАктСверкиДляТары(Объект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КомандаТоварыЗаполнитьНаСервере()
	РаботаСТоварами.Заполнить(Объект, "Товары", Ложь);
	
	Для Каждого Строка Из Объект.Товары Цикл
		ТоварыПересчитатьСтроку(Строка.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаТоварыЗаполнить(Кнопка)
	КомандаТоварыЗаполнитьНаСервере();
	
	ЭтаФорма.Модифицированность = Истина;
	
	Обновить();
КонецПроцедуры

&НаСервере
Процедура КомандаТоварыОбновитьНаСервере()
	РаботаСТоварами.Заполнить(Объект, "Товары", Истина);
	
	Для Каждого Строка Из Объект.Товары Цикл
		ТоварыПересчитатьСтроку(Строка.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаТоварыОбновить(Кнопка)
	КомандаТоварыОбновитьНаСервере();
	
	ЭтаФорма.Модифицированность = Истина;
	
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура КомандаТоварыУдалитьПС(Команда)
	ПустыеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Количество", 0)); 
	Для Каждого Строка Из ПустыеСтроки Цикл 
		Объект.Товары.Удалить(Строка); 
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ТоварыТоварПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоУпаковокПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыБонусКоличествоПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаБазоваяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаБазоваяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНаценкаПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаСНаценкойПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаСНаценкойПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПродажнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПродажнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаОтпускнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаОтпускнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(Объект);
	
	ПараметрыФормы = Новый Структура("РежимВыбора,Дата,Склад,Организация,Контрагент", Истина, Момент, Объект.Склад, Объект.Организация, Объект.Контрагент);
	
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"ПодборРеализации");
	
	ОткрытьФорму("Справочник.Товары.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор,,, ОбработкаВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТоварыПересчитатьНагрузки(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
	
	// TODO
	//ОкругленитьИтоговуюСумму();
	
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	ТоварыПересчитатьБонусы(Неопределено);
	
	ТоварыПересчитатьНагрузки();
	
	Обновить();
КонецПроцедуры

&НаСервере
Процедура ТоварыПересчитатьСтроку(ИдентификаторСтроки, Колонка = Неопределено)
	Если ИдентификаторСтроки <> Неопределено Тогда
		Строка = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Строка.Количество = Макс(Строка.Количество, Строка.БонусКоличество);
		
		Если Колонка = "ТоварыКоличество" ИЛИ Строка.КоличествоУпаковок = 0 Тогда
			Строка.КоличествоУпаковок = Строка.Количество / Строка.Товар.ВместимостьУпаковки;
		ИначеЕсли Колонка = "ТоварыКоличествоУпаковок" Тогда
			Строка.Количество = Строка.КоличествоУпаковок * Строка.Товар.ВместимостьУпаковки;
		КонецЕсли;
		
		Если Колонка = "ТоварыТовар" Тогда
			Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(Объект);
			Строка.ОстатокДо = РаботаСТоварами.Остаток(Объект.Склад, Строка.Товар, Момент);
			Строка.СтавкаНДС = ИсторияРеквизитов.Получить(Строка.Товар, "СтавкаНДС", Момент, Справочники.СтавкиНДС.БезНДС);
			
			Строка.ЦенаБазовая = РаботаСТоварами.Цена(Строка.Товар, "ЦенаБазовая", Момент);
			
			Строка.ЦенаПродажная = РаботаСТоварами.Цена(Строка.Товар, "ЦенаПродажная", Момент);
			
			Строка.ЦенаСНаценкой = АрифметическиеФункции.ВычитатьНаценку(Строка.ЦенаПродажная, Строка.СтавкаНДС);
			Строка.Наценка = АрифметическиеФункции.ОпределитьНаценку(Строка.ЦенаСНаценкой, Строка.ЦенаБазовая);
			
			Строка.Скидка = РаботаСТоварами.Скидка(Строка.Товар, Момент, Строка.Скидка);
			
			Строка.ЦенаОтпускная = Окр(Строка.ЦенаПродажная * (100 - Строка.Скидка) / 100, 2);
			
			Строка = РаботаСТоварами.ПересчитатьРеализацию(Строка, "ТоварыКоличество");
		Иначе
			Строка = РаботаСТоварами.ПересчитатьРеализацию(Строка, Колонка);
		КонецЕсли;
		
		Строка.ОстатокПосле = Строка.ОстатокДо - Строка.Количество;
	КонецЕсли;
	
	ТоварыПересчитатьБонусы(ИдентификаторСтроки);
КонецПроцедуры

&НаСервере
Процедура ТоварыПересчитатьБонусы(ИдентификаторСтроки)
	Бонусы.Пересчитать(Объект, ИдентификаторСтроки);
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		Строка = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		Если Строка.БонусКоличество > Строка.Количество Тогда
			Строка.Количество = Строка.БонусКоличество;
			
			Строка = РаботаСТоварами.ПересчитатьРеализацию(Строка, "ТоварыКоличество");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТоварыПересчитатьНагрузки(ИдентификаторСтроки = Неопределено, Колонка = Неопределено)
	Нагрузки.Обновить(Объект, ИдентификаторСтроки, Колонка);
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка = РаботаСТоварами.ПересчитатьРеализацию(Строка, "ТоварыКоличество");
	КонецЦикла;
КонецПроцедуры

//
&НаКлиенте
Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Товары.ТекущиеДанные.Товар = Значение;
	
	Элементы.Товары.ТекущиеДанные.Скидка = Объект.Скидка;
	
	Элементы.Товары.ТекущийЭлемент = Элементы.ТоварыКоличество;
	
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, "ТоварыТовар");
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму(Обновить = Ложь)
	Если Обновить Тогда
		Объект.Договор = Объект.Контрагент.ОсновнойДоговор;
		Объект.БанковскийСчет = Объект.Контрагент.ОсновнойБанковскийСчет;
		Объект.Агент = Объект.Контрагент.Агент;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОкругленитьИтоговуюСумму()
	РезультатВопроса = Вопрос("Округлить в большую сторону?", РежимДиалогаВопрос.ДаНетОтмена, 0, КодВозвратаДиалога.Да, "Округление");
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		РассчитанноеОкругление = АрифметическиеФункции.Округлить(Объект.Товары.Итог("СуммаОтпускная") - Объект.Товары.Итог("БонусСумма"), Ложь);
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		РассчитанноеОкругление = АрифметическиеФункции.Округлить(Объект.Товары.Итог("СуммаОтпускная") - Объект.Товары.Итог("БонусСумма"), Истина);
	КонецЕсли;
	
	Если Объект.Округление <> РассчитанноеОкругление Тогда
		Объект.Округление = РассчитанноеОкругление;
		
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Обновить()
    ЭтаФорма.ТоварыСредняяНаценка = АрифметическиеФункции.ОпределитьНаценку(Объект.Товары.Итог("СуммаСНаценкой"), Объект.Товары.Итог("СуммаБазовая"));
	ЭтаФорма.Сумма = Объект.Товары.Итог("СуммаОтпускная") - Объект.Товары.Итог("БонусСумма") + Объект.Округление;
КонецПроцедуры

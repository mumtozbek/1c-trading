
Процедура ЗаполнитьТовары(Коллекция, Обновление = Ложь) Экспорт
	ТаблицаЗначений = Коллекция.Выгрузить();
	
	Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(ЭтотОбъект);
	
	Параметры = Новый Структура("Склад,ВыбранныеТовары,ТипТовара,ВидДокумента", Склад, ТаблицаЗначений.ВыгрузитьКолонку("Товар"), Перечисления.ТипыТовара.Товар, "ЗаказАгента");
	
	Остатки = РаботаСТоварами.ПолучитьТаблицуОстатков(Момент, Параметры, Обновление);
	Для Каждого Позиция Из Остатки Цикл
		ТекущиеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Товар", Позиция.Товар));
		
		Если ТекущиеСтроки.Количество() = 0 И Обновление = Ложь Тогда
			Строка = ТаблицаЗначений.Добавить();
			Строка.Товар = Позиция.Товар;
			Строка.Скидка = Позиция.Скидка;
			
			ТекущиеСтроки = ТаблицаЗначений.НайтиСтроки(Новый Структура("Товар", Позиция.Товар));
		КонецЕсли;
		
		Остаток = Позиция.КоличествоОстаток;
		
		Для Каждого Строка Из ТекущиеСтроки Цикл
			Строка.Остаток = Позиция.КоличествоОстаток;
			
			Строка.ЦенаПродажная = Позиция.ЦенаПродажная;
			
			Строка.ЦенаОтпускная = Окр(Строка.ЦенаПродажная * (100 - Строка.Скидка) / 100, 2);
			
			Остаток = Остаток - Строка.Количество;
		КонецЦикла;
	КонецЦикла;
	
	Коллекция.Загрузить(ТаблицаЗначений);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Неопределено") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Склад = ПараметрыСеанса.Пользователь.Склад;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТМЦ") Тогда
		Организация = ДанныеЗаполнения.Организация;
		Филиал = ДанныеЗаполнения.Филиал;
		Проект = ДанныеЗаполнения.Проект;
		ВидРеализации = ДанныеЗаполнения.ВидРеализации;
		Склад = ДанныеЗаполнения.Склад;
		СкладНакопления = Склад.Накопитель;
		Агент = ДанныеЗаполнения.Агент;
		Контрагент = ДанныеЗаполнения.Контрагент;
		Округление = ДанныеЗаполнения.Округление;
		Комментарий = ДанныеЗаполнения.Комментарий;
		
		// Заполнение таблицы товаров
		Для Каждого Строка Из ДанныеЗаполнения.Товары Цикл
			ТекСтрока = Товары.Добавить();
			ТекСтрока.Товар = Строка.Товар;
			ТекСтрока.Количество = Строка.Количество;
			ТекСтрока.ЦенаПродажная = Строка.ЦенаПродажная;
			ТекСтрока.СуммаПродажная = Строка.СуммаПродажная;
			ТекСтрока.Объем = Строка.Объем;
			ТекСтрока.Вес = Строка.Вес;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовка регистров накопления
	Движения.Остатки.Записывать = Истина;
	Движения.ИсторияЗаказов.Записывать = Истина;
	
	//// Обработка товаров
	//Для Каждого Строка Из Товары Цикл
	//	Если Строка.Количество = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Если ЗначениеЗаполнено(Строка.Товар) = Ложь Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	// Контроль текущих остатков товара
	//	Если Склад.КонтрольОстатков И ПривилегированныйРежим() = Ложь Тогда
	//		Если (Строка.Остаток - Строка.Количество) < 0 Тогда
	//			Сообщить("Недостаточно товаров на складе: " + Строка.НомерСтроки + ". " + Строка.Товар.Наименование + " (" + Строка.Товар.Код + ")", СтатусСообщения.Важное);
	//			
	//			Отказ = Истина;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	
	//// TODO: переделать механизм бронирования
	//НакладнаяДок = Документы.РеализацияТМЦ.НайтиПоРеквизиту("Заказ", Ссылка);
	//Если ДополнительныеСвойства.Свойство("Подтвержден") = Ложь И ЗначениеЗаполнено(НакладнаяДок) = Ложь Тогда
	//	Для Каждого Строка ИЗ Товары Цикл
	//	 	Движение = Движения.Остатки.Добавить();
	//		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//		Движение.Период = Дата;
	//		Движение.Склад = Склад;
	//		Движение.Товар = Строка.Товар;
	//		Движение.Порожняя = Ложь;
	//		Движение.Бронь = Истина;
	//		Движение.Примечание = глНайтиПримечания(Комментарий);
	//		Движение.Количество = Строка.Количество;
	//	КонецЦикла;
	//КонецЕсли;
	
	Запись = Движения.ИсторияЗаказов.Добавить();
	Запись.Период = Дата;
	Запись.Заказ = Ссылка;
	Запись.Статус = Перечисления.СтатусыЗаказа.Новый;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Принудительное проведение при записи
	Если РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Если ПометкаУдаления = Ложь Тогда
			РежимЗаписи = РежимЗаписиДокумента.Проведение;
		КонецЕсли;
	КонецЕсли;
	
	Если Склад.Пустая() Тогда
		Склад = ПараметрыСеанса.Пользователь.Склад;
	КонецЕсли;
	
	Если Агент.Пустая() Тогда
		Агент = Контрагент.Агент;
	КонецЕсли;
	
	//ПустыеСтроки = Товары.НайтиСтроки(Новый Структура("Количество", 0)); 
	//Для Каждого Строка Из ПустыеСтроки Цикл 
	//	Товары.Удалить(Строка); 
	//КонецЦикла;
	
	Если ЭтоНовый() = Ложь Тогда
		Накладная = Документы.РеализацияТМЦ.НайтиПоРеквизиту("Заказ", Ссылка);
		Если ЗначениеЗаполнено(Накладная) Тогда
			Если Дата > Накладная.Дата Тогда
				Сообщить("Дата заказа (" + СокрЛП(Ссылка) + ") не может быть позднее даты реализации (" + СокрЛП(Накладная.Ссылка) + ").");
				
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Строка Из Товары Цикл
		Если Строка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.СуммаПродажная = 0 Тогда
			Строка.ЦенаПродажная = РаботаСТоварами.Цена(Строка.Товар, "ЦенаПродажная", Дата, Строка.ЦенаПродажная);
			Строка.СуммаПродажная = Строка.ЦенаПродажная * Строка.Количество;
		КонецЕсли;
		
		Если Строка.ЦенаОтпускная = 0 Тогда
			Строка.ЦенаОтпускная = Строка.ЦенаПродажная;
		КонецЕсли;
		
		Если Строка.СуммаОтпускная = 0 Тогда
            Строка.СуммаОтпускная = Строка.СуммаПродажная;
		КонецЕсли;
		
		Строка.Скидка = 100 - Строка.СуммаОтпускная / Строка.СуммаПродажная * 100;
		Строка.Объем = Строка.Количество * Строка.Товар.Объем;
		Строка.Вес = Строка.Количество * Строка.Товар.Вес;
	КонецЦикла;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьТовары(Товары, Истина);
	КонецЕсли;
	
	Объем = Товары.Итог("Объем");
	Вес = Товары.Итог("Вес");
	Сумма = Товары.Итог("СуммаОтпускная") - Товары.Итог("БонусСумма") + Округление;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Накладная = Документы.РеализацияТМЦ.НайтиПоРеквизиту("Заказ", Ссылка);
	Если глСсылкаСуществует(Накладная) Тогда
		Если Накладная.Проведен Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

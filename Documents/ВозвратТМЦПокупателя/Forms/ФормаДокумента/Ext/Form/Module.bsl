
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидРеализации", Объект.ВидРеализации));
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад", Объект.Склад));
	
	Обновить();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    НастроитьФорму();
	
	//ПолныйПриИзменении(Элементы.Полный);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Обновить();
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ПолныйПриИзменении(Элемент)
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ВидРеализацииПриИзменении(Элемент)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидРеализации", Объект.ВидРеализации));
	
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	НастроитьФорму(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад", Объект.Склад));
	Объект.СкладНакопления = ОбщийМодульСервер.ПолучитьЗначениеРеквизита(Объект.Склад, "Накопитель");
КонецПроцедуры

&НаКлиенте
Процедура КомандаСформироватьСчетФактуру(Кнопка)
	Если ЭтаФорма.Модифицированность Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		Если ОбщийМодульСервер.ПолучитьЗначениеРеквизита(Объект.ВидРеализации, "ТипВзаиморасчета") = ПредопределенноеЗначение("Перечисление.ТипыВзаиморасчета.Безнал") Тогда
			ФактурыКлиент.СформироватьСчетФактуру(Объект);
		Иначе
			ФактурыКлиент.СформироватьСчетФактуруДляАгента(Объект);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаТоварыУдалитьПС(Команда)
	ПустыеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Количество", 0)); 
	Для Каждого Строка Из ПустыеСтроки Цикл 
		Объект.Товары.Удалить(Строка); 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура КомандаТоварыВернутьНаСервере()
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Количество = Строка.КоличествоПродано;
		ТоварыПересчитатьСтроку(Строка.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаТоварыВернуть(Кнопка)
	КомандаТоварыВернутьНаСервере();
	
	ЭтаФорма.Модифицированность = Истина;
	
	Обновить();
КонецПроцедуры


&НаКлиенте
Процедура ТоварыТоварПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаБазоваяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаБазоваяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНаценкаПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаСНаценкойПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаСНаценкойПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПродажнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПродажнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаОтпускнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаОтпускнаяПриИзменении(Элемент)
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущийЭлемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(Объект);
	
	ПараметрыФормы = Новый Структура("РежимВыбора,Дата,Склад,Организация,Контрагент", Истина, Момент, Объект.Склад, Объект.Организация, Объект.Контрагент);
	
	ОбработкаВыбора = Новый ОписаниеОповещения("ПриЗакрытииФормыВыбора", ЭтаФорма,"ПодборРеализации");
	
	ОткрытьФорму("Справочник.Товары.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор,,, ОбработкаВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	Обновить();
КонецПроцедуры

&НаСервере
Процедура ТоварыПересчитатьСтроку(ИдентификаторСтроки, Колонка = Неопределено)
	Если ИдентификаторСтроки <> Неопределено Тогда
		Строка = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		Если Колонка = "ТоварыТовар" Тогда
			Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(Объект);
			Строка.ОстатокДо = РаботаСТоварами.Остаток(Объект.Склад, Строка.Товар, Момент);
			Строка.СтавкаНДС = ИсторияРеквизитов.Получить(Строка.Товар, "СтавкаНДС", Момент, Справочники.СтавкиНДС.БезНДС);
			
			Строка.ЦенаБазовая = РаботаСТоварами.Цена(Строка.Товар, "ЦенаБазовая", Момент);
			
			Строка.ЦенаПродажная = РаботаСТоварами.Цена(Строка.Товар, "ЦенаПродажная", Момент);
			
			Строка.ЦенаСНаценкой = АрифметическиеФункции.ВычитатьНаценку(Строка.ЦенаПродажная, Строка.СтавкаНДС);
			Строка.Наценка = АрифметическиеФункции.ОпределитьНаценку(Строка.ЦенаСНаценкой, Строка.ЦенаБазовая);
			
			Строка.Скидка = РаботаСТоварами.Скидка(Строка.Товар, Момент, Строка.Скидка);
			
			Строка.ЦенаОтпускная = Окр(Строка.ЦенаПродажная * (100 - Строка.Скидка) / 100, 2);
			
			Строка = РаботаСТоварами.ПересчитатьРеализацию(Строка, "ТоварыКоличество");
		Иначе
			Строка = РаботаСТоварами.ПересчитатьРеализацию(Строка, Колонка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//
&НаКлиенте
Процедура ПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Товары.ТекущиеДанные.Товар = Значение;
	
	Элементы.Товары.ТекущиеДанные.Скидка = Объект.Скидка;
	
	Элементы.Товары.ТекущийЭлемент = Элементы.ТоварыКоличество;
	
	ТоварыПересчитатьСтроку(Элементы.Товары.ТекущаяСтрока, "ТоварыТовар");
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму(Обновить = Ложь)
	Если Обновить Тогда
		Объект.Договор = Объект.Контрагент.ОсновнойДоговор;
		Объект.БанковскийСчет = Объект.Контрагент.ОсновнойБанковскийСчет;
		Объект.Агент = Объект.Контрагент.Агент;
	КонецЕсли;
	
	ЭтаФорма.Элементы.Товары.Видимость = НЕ Объект.Полный;
	ЭтаФорма.Элементы.ГруппаИтоги.Видимость = НЕ Объект.Полный;
	ЭтаФорма.Элементы.ГруппаПодвал.Видимость = НЕ Объект.Полный;
КонецПроцедуры

&НаСервере
Процедура Обновить()
    ЭтаФорма.ТоварыСредняяНаценка = АрифметическиеФункции.ОпределитьНаценку(Объект.Товары.Итог("СуммаСНаценкой"), Объект.Товары.Итог("СуммаБазовая"));
	ЭтаФорма.Сумма = Объект.Товары.Итог("СуммаОтпускная");
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Неопределено") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Склад = ПараметрыСеанса.Пользователь.Склад;
		ТипВозврата = Перечисления.ТипыВозврата.Приход;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТМЦ") Тогда
		Накладная = ДанныеЗаполнения.Ссылка;
	Иначе
		СтандартнаяОбработка = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// регистр Остатки
	Движения.Остатки.Записывать = Истина;
	
	// регистр Возвраты
	Движения.Возвраты.Записывать = Истина;
	
	// регистр Сальдо
	Движения.Сальдо.Записывать = Истина;
	
	// регистр СальдоПоТаре
	Движения.СальдоПоТаре.Записывать = Истина;
	
	// регистр ИсторияЗаказов
	Движения.ИсторияЗаказов.Записывать = Истина;
	
	Для Каждого Строка Из Товары Цикл
		// Приход / расход суммы товара
		Движение = Движения.Остатки.Добавить();
		Движение.ВидДвижения = ?(ТипВозврата = Перечисления.ТипыВозврата.Приход, ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Товар = Строка.Товар;
		Движение.Порожняя = Ложь;
		Движение.Примечание = глНайтиПримечания(Комментарий);
		Движение.Количество = Строка.Количество;
		Движение.Сумма = Строка.СуммаБазовая;
	КонецЦикла;

	Для Каждого Строка Из Тары Цикл
		// Приход / расход тары
		Движение = Движения.Остатки.Добавить();
		Движение.ВидДвижения = ?(ТипВозврата = Перечисления.ТипыВозврата.Приход, ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Товар = Строка.Товар;
		Движение.Порожняя = Истина;
		Движение.Примечание = глНайтиПримечания(Комментарий);
		Движение.Количество = Строка.Количество;
		Движение.Сумма = Строка.Сумма;
		
		// Приход / расход сальдо по таре
		Движение = Движения.СальдоПоТаре.Добавить();
		Движение.ВидДвижения = ?(ТипВозврата = Перечисления.ТипыВозврата.Приход, ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Товар = Строка.Товар;
		Движение.Контрагент = Контрагент;
		Движение.Примечание = глНайтиПримечания(Комментарий);
		Движение.Количество = Строка.Количество;
		Движение.Сумма = Строка.Сумма;
		
		Если ТипВозврата = Перечисления.ТипыВозврата.Приход Тогда
			// Возвраты доставщиков
		 	Движение = Движения.Возвраты.Добавить();
			Движение.Период = Дата;
			Движение.Сотрудник = Водитель;
			Движение.Товар = Строка.Товар;
			Движение.Примечание = глНайтиПримечания(Комментарий);
			Движение.Количество = Строка.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Если Товары.Итог("СуммаПродажная") <> 0 Тогда
		// Сальдо
		Движение = Движения.Сальдо.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Безнал;
		Движение.Контрагент = Контрагент;
		Движение.Примечание = глНайтиПримечания(Комментарий);
		Движение.Сумма = Товары.Итог("СуммаПродажная");
	КонецЕсли;
	
	Если Накладная.ВидРеализации.Заказываемый И ЗначениеЗаполнено(Накладная.Заказ) Тогда
		Запись = Движения.ИсторияЗаказов.Добавить();
		Запись.Период = Дата;
		Запись.Заказ = Накладная.Заказ;
		Запись.Статус = Перечисления.СтатусыЗаказа.ЧастичныйВозврат;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ТипВозврата = Перечисления.ТипыВозврата.Расход Тогда
		//Дата = КонецДня(Дата);
	КонецЕсли;
КонецПроцедуры

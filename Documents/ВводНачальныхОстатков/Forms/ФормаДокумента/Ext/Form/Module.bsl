
// Шапка
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

// Команды
&НаСервере
Процедура ТоварыЗаполнитьНаСервере(ТолькоОстатки)
	Если ТолькоОстатки Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Остатки.Склад КАК Склад,
			|	Остатки.Товар КАК Товар,
			|	Остатки.КоличествоОстаток КАК Количество,
			|	Остатки.СуммаОстаток КАК Сумма,
			|	ЦеныТоваров.Цена КАК ЦенаБазовая,
			|	ИсторияРеквизитов.Значение КАК СтавкаНДС
			|ИЗ
			|	РегистрНакопления.Остатки.Остатки(&Дата, Порожняя = Ложь И Бронь = Ложь) КАК Остатки
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(&Дата, Тип = ""ЦенаБазовая"") КАК ЦеныТоваров ПО ЦеныТоваров.Товар.Ссылка = Остатки.Товар.Ссылка
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРеквизитов.СрезПоследних(&Дата, Реквизит = ""СтавкаНДС"") КАК ИсторияРеквизитов ПО ИсторияРеквизитов.Ссылка.Ссылка = Остатки.Товар.Ссылка
			|ГДЕ
			|	(Остатки.КоличествоОстаток <> 0) И (Остатки.Товар.ВидТовара.ТипТовара = Значение(Перечисление.ТипыТовара.Продукция) ИЛИ Остатки.Товар.ВидТовара.ТипТовара = Значение(Перечисление.ТипыТовара.Товар))
			|УПОРЯДОЧИТЬ ПО
			|	Остатки.Товар.ПорядокСортировки
			|"
		);

		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		
		РезультатЗапроса = Запрос.Выполнить();

		ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаТовар.Следующий() Цикл
			ТекСтрока = Объект.Товары.Добавить();
			ТекСтрока.Склад = ВыборкаТовар.Склад;
			ТекСтрока.Товар = ВыборкаТовар.Товар;
			ТекСтрока.СтавкаНДС = ВыборкаТовар.СтавкаНДС;
			ТекСтрока.КоличествоОстаток = ВыборкаТовар.Количество;
			ТекСтрока.СуммаОстаток = ВыборкаТовар.Сумма;

			Если ЗначениеЗаполнено(ВыборкаТовар.ЦенаБазовая) Тогда
				ТекСтрока.ЦенаБазовая = ВыборкаТовар.ЦенаБазовая;
			Иначе
				ТекСтрока.ЦенаБазовая = ВыборкаТовар.Сумма / ВыборкаТовар.Количество;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Выборка = Справочники.Товары.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;
			
			ТекСтрока = Объект.Товары.Добавить();
			ТекСтрока.Склад = ПараметрыСеанса.Пользователь.Склад;
			ТекСтрока.Товар = Выборка.Ссылка;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЗаполнить(Кнопка)
	Объект.Товары.Очистить();
	
	ТоварыЗаполнитьНаСервере((Вопрос("Хотиете заполнить текущие остатки?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да));
	
	Для Каждого ТекСтрока Из Объект.Товары Цикл
		ТекСтрока.ЦенаБазовая = РаботаСТоварами.Цена(ТекСтрока.Товар, "ЦенаБазовая", Объект.Дата, ТекСтрока.ЦенаБазовая);
		ТекСтрока.ЦенаПродажная = РаботаСТоварами.Цена(ТекСтрока.Товар, "ЦенаПродажная", Объект.Дата, ТекСтрока.ЦенаПродажная);
		ТекСтрока.СтавкаНДС = ИсторияРеквизитов.Получить(ТекСтрока.Товар, "СтавкаНДС", Объект.Дата, ТекСтрока.СтавкаНДС);
		ТоварыПересчитатьСтроку(ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОбновить(Кнопка)
	Для Каждого ТекСтрока Из Объект.Товары Цикл
		ТекСтрока.ЦенаБазовая = РаботаСТоварами.Цена(ТекСтрока.Товар, "ЦенаБазовая", Объект.Дата, ТекСтрока.ЦенаБазовая);
		ТекСтрока.ЦенаПродажная = РаботаСТоварами.Цена(ТекСтрока.Товар, "ЦенаПродажная", Объект.Дата, ТекСтрока.ЦенаПродажная);
		ТекСтрока.СтавкаНДС = ИсторияРеквизитов.Получить(ТекСтрока.Товар, "СтавкаНДС", Объект.Дата, ТекСтрока.СтавкаНДС);
		ТоварыПересчитатьСтроку(ТекСтрока);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ТоварыУдалитьПСНаСервере()
	ПустыеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("КоличествоОстаток", 0)); 
	Для Каждого Строка Из ПустыеСтроки Цикл 
		Объект.Товары.Удалить(Строка); 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыУдалитьПС(Команда)
	ТоварыУдалитьПСНаСервере();
	
	ОбновитьИтоги();
КонецПроцедуры

&НаСервере
Процедура ТарыЗаполнитьНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Остатки.Склад КАК Склад,
	|	Остатки.Товар КАК Товар,
	|	Остатки.Порожняя КАК Порожняя,
	|	Остатки.КоличествоОстаток КАК Количество,
	|	Остатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.Остатки.Остатки(&Дата, Порожняя = Ложь И Бронь = Ложь) КАК Остатки
	|ГДЕ
	|	(Остатки.КоличествоОстаток <> 0) И (Остатки.Товар.ВидТовара.ТипТовара = Значение(Перечисление.ТипыТовара.Тара))");

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока ВыборкаТовар.Следующий() Цикл
		НоваяСтрока = Объект.Тары.Добавить();
		НоваяСтрока.Склад = ВыборкаТовар.Склад;
		НоваяСтрока.Товар = ВыборкаТовар.Товар;
		НоваяСтрока.Порожняя = ВыборкаТовар.Порожняя;
		НоваяСтрока.Количество = ВыборкаТовар.Количество;
		НоваяСтрока.Сумма = ВыборкаТовар.Сумма;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТарыЗаполнить(Кнопка)
	Объект.Тары.Очистить();
	
	ТарыЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СальдоЗаполнитьНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Сальдо.ТипВзаиморасчета КАК ТипВзаиморасчета,
	|	Сальдо.Контрагент КАК Контрагент,
	|	Сальдо.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.Сальдо.Остатки(&Дата) КАК Сальдо");

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока ВыборкаКонтрагент.Следующий() Цикл
		ТекСтрока = Объект.Взаиморасчеты.Добавить();
		ТекСтрока.ТипВзаиморасчета = ВыборкаКонтрагент.ТипВзаиморасчета;
		ТекСтрока.Контрагент = ВыборкаКонтрагент.Контрагент;
		ТекСтрока.Сальдо = ВыборкаКонтрагент.Сумма;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СальдоЗаполнить(Кнопка)
	Объект.Взаиморасчеты.Очистить();
	
	СальдоЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СальдоПоТареЗаполнитьНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	СальдоПоТаре.Товар КАК Товар,
	|	СальдоПоТаре.Контрагент КАК Контрагент,
	|	СальдоПоТаре.СуммаОстаток КАК Сумма,
	|	СальдоПоТаре.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.СальдоПоТаре.Остатки(&Дата) КАК СальдоПоТаре");

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ВзаиморасчетыПоТаре.Добавить();
		НоваяСтрока.Товар = Выборка.Товар;
		НоваяСтрока.Контрагент = Выборка.Контрагент;
		НоваяСтрока.Количество = Выборка.Количество;
		НоваяСтрока.Сумма = Выборка.Сумма;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СальдоПоТареЗаполнить(Кнопка)
	Объект.ВзаиморасчетыПоТаре.Очистить();
	
	СальдоПоТареЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КассыЗаполнитьНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегКассаОстатки.Касса КАК Касса,
	|	РегКассаОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.Касса.Остатки(&Дата) КАК РегКассаОстатки");

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Кассы.Добавить();
		НоваяСтрока.Касса = Выборка.Касса;
		НоваяСтрока.Остаток = Выборка.Сумма;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КассыЗаполнить(Кнопка)
	Объект.Кассы.Очистить();
	
	КассыЗаполнитьНаСервере();
КонецПроцедуры

// Товары
&НаКлиенте
Процедура ТоварыТоварПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТоварыОбновитьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.ЦенаПриходная = АрифметическиеФункции.ДобавитьНаценку(ТекСтрока.ЦенаБазовая, ТекСтрока.СтавкаНДС);
	ТоварыПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаБазоваяПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.ЦенаПриходная = АрифметическиеФункции.ДобавитьНаценку(ТекСтрока.ЦенаБазовая, ТекСтрока.СтавкаНДС);
	ТоварыПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриходнаяПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.ЦенаБазовая = АрифметическиеФункции.ВычитатьНаценку(ТекСтрока.ЦенаПриходная, ТекСтрока.СтавкаНДС);
	ТоварыПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТоварыПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ТекСтрока.ЦенаБазовая = ТекСтрока.СуммаОстаток / ТекСтрока.КоличествоОстаток;
	ТекСтрока.ЦенаПриходная = АрифметическиеФункции.ДобавитьНаценку(ТекСтрока.ЦенаБазовая, ТекСтрока.СтавкаНДС);
	ТоварыПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОбновитьСтроку(ТекСтрока)
	ТекСтрока.ЦенаБазовая = РаботаСТоварами.Цена(ТекСтрока.Товар, "ЦенаБазовая", Объект.Дата, ТекСтрока.ЦенаБазовая);
	ТекСтрока.ЦенаПродажная = РаботаСТоварами.Цена(ТекСтрока.Товар, "ЦенаПродажная", Объект.Дата, ТекСтрока.ЦенаПродажная);
	ТоварыПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПересчитатьСтроку(ТекСтрока)
	ТекСтрока.СуммаОстаток = ТекСтрока.КоличествоОстаток * ТекСтрока.ЦенаБазовая;
КонецПроцедуры

// Тары
&НаКлиенте
Процедура ТарыПослеУдаления(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ТарыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

// Взаиморасчеты
&НаКлиенте
Процедура ВзаиморасчетыПослеУдаления(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ВзаиморасчетыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

// ВзаиморасчетыПоТаре
&НаКлиенте
Процедура ВзаиморасчетыПоТареПослеУдаления(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ВзаиморасчетыПоТареПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

// Кассы
&НаКлиенте
Процедура КассыПослеУдаления(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура КассыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

// Вспомагательные
&НаКлиенте
Процедура ОбновитьИтоги()
	КоличествоТовара = Объект.Товары.Итог("Количество");
	СуммаТовара = Объект.Товары.Итог("СуммаОстаток");
	
	КоличествоТары = Объект.Тары.Итог("Количество");
	СуммаТары = Объект.Тары.Итог("СуммаОстаток");
	
	Сальдо = Объект.Взаиморасчеты.Итог("Сальдо");
	
	КоличествоСальдоПоТаре = Объект.ВзаиморасчетыПоТаре.Итог("Количество");
	СуммаСальдоПоТаре = Объект.ВзаиморасчетыПоТаре.Итог("Сумма");
КонецПроцедуры

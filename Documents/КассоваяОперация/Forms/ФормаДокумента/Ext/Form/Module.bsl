
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОборотыКонтрагентПриИзменении(Элемент)
	ТекСтрока = Элементы.Обороты.ТекущиеДанные;
	ТекСтрока.Сальдо = РаботаСКонтрагентами.Сальдо(ТекСтрока.Контрагент, ОбщийМодульСервер.ПолучитьЗначениеРеквизита(Объект.Касса, "ТипВзаиморасчета"), Объект.Дата);
КонецПроцедуры

&НаСервере
Процедура ОборотыЗаполнитьНаСервере()
	Если ЗначениеЗаполнено(Объект.Основание) Тогда
		Для Каждого Строка Из Объект.Основание.Накладные Цикл
			Если Строка.Накладная.ВидРеализации.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Нал Тогда
				СтарыеСтроки = Объект.Обороты.НайтиСтроки(Новый Структура("Накладная", Строка.Накладная));
				Если СтарыеСтроки.Количество() > 0 Тогда
					ТекСтрока = СтарыеСтроки[0];
				Иначе
					ТекСтрока = Объект.Обороты.Добавить();
				КонецЕсли;
				
				ТекСтрока.Накладная = Строка.Накладная;
				ТекСтрока.Контрагент = Строка.Накладная.Контрагент;
				ТекСтрока.Сальдо = РаботаСКонтрагентами.Сальдо(ТекСтрока.Контрагент, Объект.Касса.ТипВзаиморасчета, Строка.Накладная.Дата + 1);
				ТекСтрока.Приход = Строка.Накладная.Сумма;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(Объект);
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Сальдо.Контрагент КАК Контрагент,
			|	Сальдо.СуммаОстаток КАК Сумма
			|ИЗ
			|	РегистрНакопления.Сальдо.Остатки(&Дата, ТипВзаиморасчета = Значение(Перечисление.ТипыВзаиморасчета.Нал)) КАК Сальдо
			|ГДЕ
			|	Сальдо.Контрагент.Проект = &Проект
			|УПОРЯДОЧИТЬ ПО
			|	Сальдо.Контрагент.Наименование"
		);

		Запрос.УстановитьПараметр("Дата", Момент);
		Запрос.УстановитьПараметр("Проект", Объект.Проект);
	
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаКонтрагент.Следующий() Цикл
			СтарыеСтроки = Объект.Обороты.НайтиСтроки(Новый Структура("Контрагент", ВыборкаКонтрагент.Контрагент));
			Если СтарыеСтроки.Количество() > 0 Тогда
				ТекСтрока = СтарыеСтроки[0];
			Иначе
				ТекСтрока = Объект.Обороты.Добавить();
			КонецЕсли;
			
			ТекСтрока.Контрагент = ВыборкаКонтрагент.Контрагент;
			ТекСтрока.Сальдо = ВыборкаКонтрагент.Сумма;
		КонецЦикла;
	КонецЕсли;
	
	Объект.Обороты.Сортировать("Контрагент");
	
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОборотыЗаполнить(Кнопка)
	ОборотыЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОборотыОбновитьНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Сальдо.Контрагент КАК Контрагент,
	|	Сальдо.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.Сальдо.Остатки(&Дата, Контрагент В (&СписокКонтрагентов) И ТипВзаиморасчета = Значение(Перечисление.ТипыВзаиморасчета.Нал)) КАК Сальдо
	|ГДЕ
	|	ИСТИНА
	|УПОРЯДОЧИТЬ ПО
	|	Сальдо.Контрагент.Наименование");

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("СписокКонтрагентов", Объект.Обороты.Выгрузить().ВыгрузитьКолонку("Контрагент"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока ВыборкаКонтрагент.Следующий() Цикл
		СтарыеСтроки = Объект.Обороты.НайтиСтроки(Новый Структура("Контрагент", ВыборкаКонтрагент.Контрагент));
		Если СтарыеСтроки.Количество() > 0 Тогда
			ТекСтрока = СтарыеСтроки[0];
		Иначе
			ТекСтрока = Объект.Обороты.Добавить();
		КонецЕсли;
		
		ТекСтрока.Контрагент = ВыборкаКонтрагент.Контрагент;
		ТекСтрока.Сальдо = ВыборкаКонтрагент.Сумма;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОборотыОбновить(Кнопка)
	ОборотыОбновитьНаСервере();
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОборотыУдалитьПС(Кнопка)
	ПустыеСтроки = Объект.Обороты.НайтиСтроки(Новый Структура("Приход,Расход", 0, 0)); 
	Для Каждого Строка Из ПустыеСтроки Цикл 
		Объект.Обороты.Удалить(Строка); 
	КонецЦикла;
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОборотыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ЗначениеЗаполнено(Объект.Касса) = Ложь Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОборотыПослеУдаления(Элемент)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОборотыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОборотыПриАктивизацииСтроки(Элемент)
	Обновить();
КонецПроцедуры


&НаКлиенте
Процедура ДоходыПослеУдаления(Элемент)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ДоходыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ДоходыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ЗначениеЗаполнено(Объект.Касса) = Ложь Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура АвансыПослеУдаления(Элемент)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура АвансыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Обновить();
КонецПроцедуры

&НаКлиенте
Процедура АвансыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
		Если ЗначениеЗаполнено(Объект.Касса) = Ложь Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ВыбранноеЗначение) И ВыбранноеЗначение <> Объект.Основание Тогда
		Объект.Основание = ВыбранноеЗначение;
		
		ОборотыЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокОтгрузок = ПолучитьСписокОтгрузок();
	
	ДанныеВыбора = СписокОтгрузок;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокОтгрузок()
	СписокОтгрузок = Новый СписокЗначений;
	
	//Выборка = Документы.ОтгрузкаЗаказов.Выбрать(,, Новый Структура("Статус", Перечисления.СтатусыОтгрузки.Отгружен);
	//Пока Выборка.Следующий() Цикл
	//	СписокОтгрузок.Добавить(Выборка.Ссылка);
	//КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	ОтгрузкаЗаказов.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ОтгрузкаЗаказов КАК ОтгрузкаЗаказов
		|ГДЕ
		|	ОтгрузкаЗаказов.Статус = &Статус
		|	" + ?(ЗначениеЗаполнено(ПараметрыСеанса.Пользователь.Организация), "И ОтгрузкаЗаказов.Организация = &Организация", ""));
	
	Запрос.УстановитьПараметр("Организация", ПараметрыСеанса.Пользователь.Организация);
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыОтгрузки.Отгружен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокОтгрузок.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат СписокОтгрузок;
КонецФункции

&НаСервере
Процедура Обновить()
	ОстатокДо = РаботаСКассой.Остаток(Объект.Касса, Объект.Дата);
	СуммаПрихода = Объект.Обороты.Итог("Приход") + Объект.Доходы.Итог("Приход");
	СуммаРасхода = Объект.Обороты.Итог("Расход") + Объект.Доходы.Итог("Расход");
	ОстатокПосле = ОстатокДо + СуммаПрихода - СуммаРасхода;
	
	СуммаВыделений = 0;
	МассивВыделенныхСтрок = Элементы.Обороты.ВыделенныеСтроки;
	
	Для Каждого СтрокаМассива Из МассивВыделенныхСтрок Цикл
	    СтрокаТаблицы = Объект.Обороты.НайтиПоИдентификатору(СтрокаМассива);
	    СуммаВыделений = СуммаВыделений + СтрокаТаблицы.Приход - СтрокаТаблицы.Расход;
	КонецЦикла;
КонецПроцедуры

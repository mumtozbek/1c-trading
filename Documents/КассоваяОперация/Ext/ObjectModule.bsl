
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Неопределено") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Касса = ПараметрыСеанса.Пользователь.Организация.ОсновнаяКасса;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// регистр Касса
	Движения.Касса.Записывать = Истина;
	
	// регистр Сальдо
	Движения.Сальдо.Записывать = Истина;
	
	// регистр Доходы
	Движения.Доходы.Записывать = Истина;
	
	// регистр Зарплата
	Движения.Зарплата.Записывать = Истина;
	
	// История заказов
	Движения.ИсторияЗаказов.Записывать = Истина;
	
	Для Каждого Строка Из Обороты Цикл
		Если Строка.Приход > 0 Тогда
			// регистр Касса Приход
			Движение = Движения.Касса.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Касса = Касса;
			Движение.Статья = Справочники.СтатьиДвиженияДенежныхСредств.ОборотПриход;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Приход;
			
			// регистр Сальдо Приход
			Движение = Движения.Сальдо.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Контрагент = Строка.Контрагент;
			Движение.ТипВзаиморасчета = Касса.ТипВзаиморасчета;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Приход;
			
			Движения.Задолженности.Записывать = Истина;
			Запись = Движения.Задолженности.Добавить();
			Запись.Период = Дата;
			Запись.Контрагент = Строка.Контрагент;
			Запись.Идентификатор = Новый УникальныйИдентификатор;
			Запись.Оплата = Истина;
		КонецЕсли;
		
		Если Строка.Расход > 0 Тогда
			// регистр Касса Расход
			Движение = Движения.Касса.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Касса = Касса;
			Движение.Статья = Справочники.СтатьиДвиженияДенежныхСредств.ОборотРасход;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Расход;
			
			// регистр Сальдо Расход
			Движение = Движения.Сальдо.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Контрагент = Строка.Контрагент;
			Движение.ТипВзаиморасчета = Касса.ТипВзаиморасчета;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Расход;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Доходы Цикл
		Если Строка.Приход > 0 Тогда
			// регистр Касса Приход
			Движение = Движения.Касса.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Касса = Касса;
			Движение.Статья = Справочники.СтатьиДвиженияДенежныхСредств.Доход;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Приход;
			
			// регистр Доходы Приход
			Движение = Движения.Доходы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Статья = Строка.Статья;
			Движение.Уточнение = Строка.Уточнение;
			Движение.Исполнитель = Строка.Исполнитель;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Реализация = Ложь;
			Движение.Сумма = Строка.Приход;
		КонецЕсли;
		
		Если Строка.Расход > 0 Тогда
			// регистр Касса Расход
			Движение = Движения.Касса.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Касса = Касса;
			Движение.Статья = Справочники.СтатьиДвиженияДенежныхСредств.Расход;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Расход;
			
			// регистр Доходы Расход
			Движение = Движения.Доходы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Статья = Строка.Статья;
			Движение.Реализация = Ложь;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Расход;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Авансы Цикл
		Если Строка.Сумма > 0 Тогда
			// регистр Зарплата Расход
			Движение = Движения.Зарплата.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.ТипВзаиморасчета = Касса.ТипВзаиморасчета;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Сумма;
			
			// регистр Касса Расход
			Движение = Движения.Касса.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Касса = Касса;
			Движение.Статья = Справочники.СтатьиДвиженияДенежныхСредств.Зарплата;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Сумма;
			
			// регистр Доходы Расход
			Движение = Движения.Доходы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Статья = Справочники.СтатьиДоходовИРасходов.Зарплата;
			Движение.Реализация = Ложь;
			Движение.Примечание = глНайтиПримечания(Строка.Комментарий);
			Движение.Сумма = Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Основание) Тогда
		ОснованиеОбъект = Основание.ПолучитьОбъект();
		ОснованиеОбъект.Статус = Перечисления.СтатусыОтгрузки.Доставлен;
		ОснованиеОбъект.Записать();
		
		Если Основание.Дата > Дата Тогда
			Сообщить("Дата отгрузки (" + СокрЛП(Основание.Ссылка) + ") не может быть позднее даты кассовой операции (" + СокрЛП(Ссылка) + ").");
			
			Отказ = Истина;
		КонецЕсли;
		
		Для Каждого Строка Из Основание.Накладные Цикл
			Если ЗначениеЗаполнено(Строка.Накладная) = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.Накладная.Заказ) Тогда
				Запись = Движения.ИсторияЗаказов.Добавить();
				Запись.Период = Дата;
				Запись.Заказ = Строка.Накладная.Заказ;
				Запись.Статус = Перечисления.СтатусыЗаказа.Доставленный;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаПриход = Обороты.Итог("Приход") + Доходы.Итог("Приход");
	СуммаРасход = Обороты.Итог("Расход") + Доходы.Итог("Расход") + Авансы.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если ЗначениеЗаполнено(Основание) Тогда
		ОснованиеОбъект = Основание.ПолучитьОбъект();
		ОснованиеОбъект.Статус = Перечисления.СтатусыОтгрузки.Отгружен;
		ОснованиеОбъект.Записать();
	КонецЕсли;
КонецПроцедуры

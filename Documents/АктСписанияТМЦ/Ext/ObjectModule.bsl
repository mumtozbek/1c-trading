
Процедура ЗаполнитьТовары(Коллекция, Склад, ТипТовара, Дата, Обновление = Ложь) Экспорт
	Таблица = Коллекция.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегОстатки.Товар КАК Товар,
	|	РегОстатки.КоличествоОстаток КАК Остаток,
	|	ИсторияРеквизитовСтавкаНДС.Значение КАК СтавкаНДС,
	|	ВЫБОР КОГДА РегОстатки.КоличествоОстаток <> 0 ТОГДА (РегОстатки.СуммаОстаток / РегОстатки.КоличествоОстаток) ИНАЧЕ РегЦенаБазовая.Цена КОНЕЦ КАК ЦенаБазовая
	|ИЗ
	|	РегистрНакопления.Остатки.Остатки(&Дата, Склад = &Склад И Порожняя = Ложь И Бронь = Ложь) КАК РегОстатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(&Дата, Тип = ""ЦенаБазовая"") КАК РегЦенаБазовая ПО РегЦенаБазовая.Товар.Ссылка = РегОстатки.Товар.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРеквизитов.СрезПоследних(&Дата, Реквизит = ""СтавкаНДС"") КАК ИсторияРеквизитовСтавкаНДС ПО ИсторияРеквизитовСтавкаНДС.Ссылка.Ссылка = РегОстатки.Товар.Ссылка
	|ГДЕ
	|	РегОстатки.КоличествоОстаток <> 0 И (РегОстатки.Товар.ВидТовара.ТипТовара В (&ТипТовара))");
	
	Если Обновление Тогда
		Запрос.Текст = Запрос.Текст + " И РегОстатки.Товар В (&МассивТоваров)";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|УПОРЯДОЧИТЬ ПО
	|	РегОстатки.Товар.Наименование";

	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТипТовара", ТипТовара);
	
	Если Обновление Тогда
		Запрос.УстановитьПараметр("МассивТоваров", Таблица.ВыгрузитьКолонку("Товар"));
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Для Каждого Строка из Таблица Цикл
		Строка.ОстатокДо = 0;
	КонецЦикла;

	ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока ВыборкаТовар.Следующий() Цикл
		ТекущиеСтроки = Таблица.НайтиСтроки(Новый Структура("Товар", ВыборкаТовар.Товар));
		
		Если ТекущиеСтроки.Количество() = 0 И Обновление = Ложь Тогда
			Строка = Таблица.Добавить();
			Строка.Товар = ВыборкаТовар.Товар;
			
			ТекущиеСтроки = Таблица.НайтиСтроки(Новый Структура("Товар", ВыборкаТовар.Товар));
		КонецЕсли;
		
		Остаток = ВыборкаТовар.Остаток;
		
		Для Каждого Строка Из ТекущиеСтроки Цикл
			Если Таблица.Колонки.Найти("ОстатокДо") <> Неопределено Тогда
				Строка.ОстатокДо = Остаток;
			КонецЕсли;
			
			Если Таблица.Колонки.Найти("ОстатокПосле") <> Неопределено Тогда
				Строка.ОстатокПосле = Остаток - Строка.Количество;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.СтавкаНДС) = Ложь Тогда
				Строка.СтавкаНДС = ВыборкаТовар.СтавкаНДС;
			КонецЕсли;
			
			Строка.ЦенаБазовая = ВыборкаТовар.ЦенаБазовая;
			
			Строка.СуммаБазовая = Строка.ЦенаБазовая * Строка.Количество;
			Строка.СуммаНДС = АрифметическиеФункции.РассчитатьНаценку(Строка.СуммаБазовая, Строка.СтавкаНДС);
			Строка.СуммаСНДС = Строка.ЦенаСНДС * Строка.Количество;
					
			Строка.Объем = Строка.Количество * ВыборкаТовар.Товар.Объем;
			Строка.Вес = Строка.Количество * ВыборкаТовар.Товар.Вес;
			
			Остаток = Остаток - Строка.Количество;
		КонецЦикла;
	КонецЦикла;
	
	Если (НЕ Обновление) Тогда
		Таблица.Сортировать("Товар");
	КонецЕсли;
	
	Коллекция.Загрузить(Таблица);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Неопределено") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Склад = ПараметрыСеанса.Пользователь.Склад;
	КонецЕсли;
	
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТМЦ") Тогда
		// Заполнение шапки
		Автор = ДанныеЗаполнения.Автор;
		Источник = ДанныеЗаполнения.Источник;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Организация = ДанныеЗаполнения.Организация;
		Склад = ДанныеЗаполнения.Склад;
		Сумма = ДанныеЗаполнения.Сумма;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Вес = ТекСтрокаТовары.Вес;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Объем = ТекСтрокаТовары.Объем;
			НоваяСтрока.ОстатокДо = ТекСтрокаТовары.ОстатокДо;
			НоваяСтрока.ОстатокПосле = ТекСтрокаТовары.ОстатокПосле;
			НоваяСтрока.СтавкаНДС = ТекСтрокаТовары.СтавкаНДС;
			НоваяСтрока.СуммаБазовая = ТекСтрокаТовары.СуммаБазовая;
			НоваяСтрока.СуммаНДС = ТекСтрокаТовары.СуммаНДС;
			НоваяСтрока.СуммаСНДС = ТекСтрокаТовары.СуммаСНДС;
			НоваяСтрока.Товар = ТекСтрокаТовары.Товар;
			НоваяСтрока.ЦенаБазовая = ТекСтрокаТовары.ЦенаБазовая;
			НоваяСтрока.ЦенаСНДС = ТекСтрокаТовары.ЦенаСНДС;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр Остатки Расход
	Движения.Остатки.Записывать = Истина;
	
	Для Каждого Строка Из Товары Цикл
		Если Строка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Контроль текущих остатков товара
		Если Склад.КонтрольОстатков И ПривилегированныйРежим() = Ложь Тогда
			Если (Строка.ОстатокДо - Строка.Количество) < 0 Тогда
				Сообщить("Недостаточно товаров на складе: " + Строка.НомерСтроки + ". " + Строка.Товар.Наименование + " (" + Строка.Товар.Код + ")", СтатусСообщения.ОченьВажное);
				
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		// Расход товара
		Если Склад.НеВестиУчет = Ложь Тогда
			Движение = Движения.Остатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Склад = Склад;
			Движение.Товар = Строка.Товар;
			Движение.Порожняя = Ложь;
			Движение.Примечание = глНайтиПримечания(Комментарий);
			Движение.Количество = Строка.Количество;
			Движение.Сумма = Строка.Количество * Строка.ЦенаБазовая;
			
			Движение = Движения.Остатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Склад = Склад.Накопитель;
			Движение.Товар = Строка.Товар;
			Движение.Порожняя = Ложь;
			Движение.Примечание = глНайтиПримечания(Комментарий);
			Движение.Количество = Строка.Количество;
			Движение.Сумма = Строка.Количество * Строка.ЦенаБазовая;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(Дата, Организация);
		
		Для Каждого Строка Из Товары Цикл
			Если Строка.СуммаБазовая = 0 Тогда
				Строка.СуммаБазовая = Строка.ЦенаБазовая * Строка.Количество;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.СтавкаНДС) = Ложь Тогда
				Строка.СтавкаНДС = УчетнаяПолитика.СтавкаНДС;
			КонецЕсли;
			Если Строка.ЦенаСНДС = 0 Тогда
				Строка.ЦенаСНДС = АрифметическиеФункции.ДобавитьНаценку(Строка.ЦенаБазовая, Строка.СтавкаНДС);
			КонецЕсли;
			Если Строка.СуммаСНДС = 0 Тогда
				Строка.СуммаСНДС = Строка.ЦенаСНДС * Строка.Количество;
			КонецЕсли;
		КонецЦикла;
		
		// Корректировка данных
		Если Константы.Реализация_ПересчетОстатковПриПроведенииДокумента.Получить() Тогда
			Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(ЭтотОбъект);
			ЗаполнитьТовары(Товары, Склад, Перечисления.ТипыТовара.Товар, Момент, Истина);
		КонецЕсли;
	КонецЕсли;
	
	Сумма = Товары.Итог("СуммаБазовая");
КонецПроцедуры

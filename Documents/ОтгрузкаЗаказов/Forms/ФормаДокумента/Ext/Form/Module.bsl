
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЭтаФорма.ТолькоПросмотр = (Объект.Статус = Перечисления.СтатусыОтгрузки.Отгружен ИЛИ Объект.Статус = Перечисления.СтатусыОтгрузки.Доставлен);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(ТекущийОбъект.Ссылка) = Ложь Тогда
		Для Каждого Строка Из Объект.Накладные Цикл
			Если Строка.Отгрузить Тогда
				Если Строка.Накладная.Дата > ТекущийОбъект.Дата Тогда
					ТекущийОбъект.Дата = Строка.Накладная.Дата + 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВодительПриИзменении(Элемент)
	Объект.Автомашина = ОбщийМодульСервер.ПолучитьЗначениеРеквизита(Объект.Водитель, "Автомашина");
КонецПроцедуры


&НаКлиенте
Процедура КомандаРаспечататьМассово(Команда)
	ТабДок = Новый ТабличныйДокумент;
	
	КоличествоКопий = ОбщийМодульСервер.ПолучитьЗначениеКонстанты("Реализация_КоличествоЭкземпляровВсего");
	
	Напечатать = ВвестиЧисло(КоличествоКопий, "Сколько копий напечатать?", 1, 0);
	
	КомандаРаспечататьМассовоНаСервере(ТабДок);
	
	ТабДок.КоличествоЭкземпляров = КоличествоКопий;
	
	Если Напечатать Тогда
		ТабДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	Иначе
		ТабДок.Показать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КомандаРаспечататьМассовоНаСервере(ТабДок)
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	
	Для Каждого Строка Из Объект.Накладные.Выгрузить() Цикл
		Если Строка.Отгрузить = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.Накладная.ВидРеализации.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Нал Тогда
			ФактурыСервер.СформироватьСчетФактуруДляАгента(Строка.Накладная, ТабДок);
		Иначе
			ФактурыСервер.СформироватьСчетФактуру(Строка.Накладная, ТабДок);
		КонецЕсли;
		
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.Защита = Ложь;
		ТабДок.ТолькоПросмотр = Ложь;
		ТабДок.ОтображатьЗаголовки = Ложь;
		ТабДок.АвтоМасштаб = Истина;
		ТабДок.ПолеСверху = 2;
		ТабДок.ПолеСправа = 2;
		ТабДок.ПолеСнизу = 2;
		ТабДок.ПолеСлева = 2;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура КомандаРаспечататьСписокТоваровНаСервере(ТабДок)
	УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(Объект.Дата, Объект.Организация);
	
	// Табличный документ
    ДокументОбъект = РеквизитФормыВЗначение("Объект");
    Макет = ДокументОбъект.ПолучитьМакет("СписокТоваров");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал"); 
	
	// Шапка документа
	Шапка = Новый Структура("Агент,Доставщик,Автомашина,ДанныеДокумента");
	
	// Строки документа
	СтрокиТовар = Новый ТаблицаЗначений;
	СтрокиТовар.Колонки.Добавить("Товар", Новый ОписаниеТипов("СправочникСсылка.Товары"));
	СтрокиТовар.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	СтрокиТовар.Колонки.Добавить("Объем", Новый ОписаниеТипов("Число"));
	СтрокиТовар.Колонки.Добавить("Вес", Новый ОписаниеТипов("Число"));
	СтрокиТовар.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));

	СтрокиТара = Новый ТаблицаЗначений;
	СтрокиТара.Колонки.Добавить("Товар", Новый ОписаниеТипов("СправочникСсылка.Товары"));
	СтрокиТара.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	СтрокиТара.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));
	
	// Заполнение данных
	Шапка.Агент = СокрЛП(Объект.Агент);
	Шапка.Доставщик = СокрЛП(Объект.Доставщик) + " / " + СокрЛП(Объект.Водитель);
	Шапка.Автомашина = СокрЛП(Объект.Автомашина);
	Шапка.ДанныеДокумента = "Отгрузка №" + СокрЛП(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") +  " (для зав. склада)";
	
	// Товары
	Для Каждого Заказ Из Объект.Накладные Цикл
		Если Заказ.Отгрузить Тогда
			Для Каждого Строка ИЗ Заказ.Накладная.Товары Цикл
				Если Строка.Количество > 0 Тогда
					ТекСтрока = СтрокиТовар.Добавить();
					ТекСтрока.Товар = Строка.Товар;
					ТекСтрока.Количество = Строка.Количество;
					ТекСтрока.Код = Строка.Товар.Код;
					ТекСтрока.Объем = Строка.Объем;
					ТекСтрока.Вес = Строка.Вес;
					
					Если ЗначениеЗаполнено(Строка.Товар.Тара) Тогда
						ТекСтрока = СтрокиТара.Добавить();
						ТекСтрока.Товар = Строка.Товар.Тара;
						ТекСтрока.Количество = Строка.Количество;
						ТекСтрока.Код = Строка.Товар.Тара.Код;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// Подготовка данных
	СтрокиТовар.Свернуть("Товар,Код", "Количество,Объем,Вес");
	СтрокиТовар.Сортировать("Товар");
	
	СтрокиТара.Свернуть("Товар,Код", "Количество");
	СтрокиТара.Сортировать("Товар");
	
	ВывестиQRКод(ОбластьШапка);
	
	// Вывод шапки
	ОбластьШапка.Параметры.Заполнить(Шапка);
	ОбластьШапка.Параметры.Количество = Объект.Накладные.Количество();
	ОбластьШапка.Параметры.ДатаРаспечатки = ТекущаяДата();
	ТабДок.Вывести(ОбластьШапка);
	
	// Товары
	НомерСтроки = 0;
	Для Каждого Строка Из СтрокиТовар Цикл
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.Наименование = Строка.Товар.Наименование;
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Товар.ЕдиницаИзмерения.Сокращение;
		ОбластьСтрока.Параметры.Количество = Строка.Количество;
		ОбластьСтрока.Параметры.Объем = Строка.Объем;
		ОбластьСтрока.Параметры.Вес = Строка.Вес;
		
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	// Итоги товара
	ОбластьИтого.Параметры.Количество = СтрокиТовар.Итог("Количество");
	ОбластьИтого.Параметры.Объем = СтрокиТовар.Итог("Объем");
	ОбластьИтого.Параметры.Вес = СтрокиТовар.Итог("Вес");
	ТабДок.Вывести(ОбластьИтого);
	
	// Тары
	Если СтрокиТара.Количество() > 0 Тогда
		ТабДок.Вывести(ОбластьПустаяСтрока);
		
		НомерСтроки = 0;
		Для Каждого Строка Из СтрокиТара Цикл
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
			ОбластьСтрока.Параметры.Наименование = Строка.Товар.Наименование;
			ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Товар.ЕдиницаИзмерения.Сокращение;
			ОбластьСтрока.Параметры.Количество = Строка.Количество;
			
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		// Итоги товара
		ОбластьИтого.Параметры.Количество = СтрокиТара.Итог("Количество");
		ТабДок.Вывести(ОбластьИтого);
	КонецЕсли;
	
	// Подвал
	ОбластьПодвал.Параметры.Заполнить(Шапка);
	ТабДок.Вывести(ОбластьПодвал);
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	//ТабДок.ПолеСверху = 2;
	//ТабДок.ПолеСправа = 2;
	//ТабДок.ПолеСнизу = 2;
	//ТабДок.ПолеСлева = 2;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
КонецПроцедуры

&НаСервере
Процедура ВывестиQRКод(ОбластьШапка)
	// Генерация и вывод QR кода
	Рисунок = ОбластьШапка.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	Рисунок.Лево = 0;
	Рисунок.Верх = 0;
	Рисунок.Ширина = 20;
	Рисунок.Высота = 20;
	Рисунок.Узор = ТипУзораТабличногоДокумента.БезУзора;
	Рисунок.Картинка = ПолучитьШтрихкод();
	Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	Рисунок.РазмерКартинки = РазмерКартинки.Пропорционально;
КонецПроцедуры

&НаКлиенте
Процедура КомандаРаспечататьСписокТоваров(Команда)
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	
	Если Объект.Проведен Тогда
		ТабДок = Новый ТабличныйДокумент;
		
		КомандаРаспечататьСписокТоваровНаСервере(ТабДок);
		
		КоличествоКопий = ОбщийМодульСервер.ПолучитьЗначениеКонстанты("Реализация_КоличествоЭкземпляровВсего");
		Если ВвестиЧисло(КоличествоКопий, "Сколько копий напечатать?", 1, 0) Тогда
			ТабДок.КоличествоЭкземпляров = КоличествоКопий;
			ТабДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		Иначе
			ТабДок.КоличествоЭкземпляров = КоличествоКопий;
			ТабДок.Показать("Отгрузка #" + СокрЛП(Объект.Номер));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КомандаРаспечататьСписокЗаказовНаСервере(ТабДок)
	УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(Объект.Дата, Объект.Организация);
	
	// Табличный документ
    ДокументОбъект = РеквизитФормыВЗначение("Объект");
    Макет = ДокументОбъект.ПолучитьМакет("СписокЗаказов");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	// Шапка документа
	Шапка = Новый Структура("Доставщик,Автомашина,ДанныеДокумента");
	
	// Строки документа
	Строки = Новый ТаблицаЗначений;
	Строки.Колонки.Добавить("Номер", Новый ОписаниеТипов("Строка"));
	Строки.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Строки.Колонки.Добавить("Адрес", Новый ОписаниеТипов("Строка"));
	Строки.Колонки.Добавить("ТипОплаты", Новый ОписаниеТипов("Строка"));
	Строки.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("Агент", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	// Заполнение данных
	Шапка.Доставщик = СокрЛП(Объект.Доставщик) + " / " + СокрЛП(Объект.Водитель);
	Шапка.Автомашина = СокрЛП(Объект.Автомашина);
	Шапка.ДанныеДокумента = "Отгрузка №" + СокрЛП(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") +  " (для доставщика)";
	
	// Заказы
	Для Каждого Заказ Из Объект.Накладные Цикл
		Если Заказ.Отгрузить Тогда
			ТекСтрока = Строки.Добавить();
			ТекСтрока.Номер = Заказ.Накладная.Номер;
			ТекСтрока.Контрагент = Заказ.Контрагент;
			ТекСтрока.Адрес = Заказ.Контрагент.Адрес;
			ТекСтрока.ТипОплаты = Заказ.Накладная.ВидРеализации;
			ТекСтрока.Количество = Заказ.Накладная.Товары.Итог("Количество");
			ТекСтрока.Сумма = Заказ.Сумма;
			ТекСтрока.Агент = Заказ.Накладная.Агент;
		КонецЕсли;
	КонецЦикла;
	
	// Вывод шапки
	ОбластьШапка.Параметры.Заполнить(Шапка);
	ОбластьШапка.Параметры.ДатаРаспечатки = ТекущаяДата();
	ОбластьШапка.Параметры.Количество = Объект.Накладные.Количество();
	ТабДок.Вывести(ОбластьШапка);
	
	// Строки
	НомерСтроки = 0;
	Для Каждого Строка Из Строки Цикл
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	// Итоги
	ОбластьИтого.Параметры.Количество = Строки.Итог("Количество");
	ОбластьИтого.Параметры.Сумма = Строки.Итог("Сумма");
	ТабДок.Вывести(ОбластьИтого);
	
	// Подвал
	ОбластьПодвал.Параметры.Заполнить(Шапка);
	ТабДок.Вывести(ОбластьПодвал);
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	//ТабДок.КоличествоЭкземпляров = Константы.Реализация_КоличествоЭкземпляровВсего.Получить();
	//ТабДок.ЭкземпляровНаСтранице = Константы.Реализация_КоличествоЭкземпляровНаОднойСтранице.Получить();
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСправа = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
КонецПроцедуры

&НаКлиенте
Процедура КомандаРаспечататьСписокЗаказов(Команда)
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	
	Если Объект.Проведен Тогда
		ТабДок = Новый ТабличныйДокумент;
		
		КомандаРаспечататьСписокЗаказовНаСервере(ТабДок);
		
		КоличествоКопий = ОбщийМодульСервер.ПолучитьЗначениеКонстанты("Реализация_КоличествоЭкземпляровВсего");
		Если ВвестиЧисло(КоличествоКопий, "Сколько копий напечатать?", 1, 0) Тогда
			ТабДок.КоличествоЭкземпляров = КоличествоКопий;
			ТабДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		Иначе
			ТабДок.КоличествоЭкземпляров = КоличествоКопий;
			ТабДок.Показать("Отгрузка #" + СокрЛП(Объект.Номер));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура НакладныеОтметитьВсе(Команда)
	Для Каждого Строка Из Объект.Накладные Цикл
		Строка.Отгрузить = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НакладныеСнятьВсе(Команда)
	Для Каждого Строка Из Объект.Накладные Цикл
		Строка.Отгрузить = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура НакладныеЗаполнитьНаСервере()
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РеализацияТМЦ.Ссылка КАК Накладная,
		|	ИсторияЗаказов.Статус КАК Статус
		|ИЗ
		|	Документ.РеализацияТМЦ КАК РеализацияТМЦ
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияЗаказов КАК ИсторияЗаказов
		|	ПО (ИсторияЗаказов.Регистратор = РеализацияТМЦ.Ссылка)
		|ГДЕ
		|	РеализацияТМЦ.Проведен
		|	И РеализацияТМЦ.Самовывоз = ЛОЖЬ
		|	И РеализацияТМЦ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РеализацияТМЦ.ВидРеализации.Активный
		|	И РеализацияТМЦ.Склад = &Склад
		|	И РеализацияТМЦ.Организация = &Организация
		|	" + ?(ЗначениеЗаполнено(Объект.Агент), "И РеализацияТМЦ.Агент = &Агент", "") + "
		|	И (РеализацияТМЦ.Отгрузка = ЗНАЧЕНИЕ(Документ.ОтгрузкаЗаказов.ПустаяСсылка) ИЛИ РеализацияТМЦ.Отгрузка = &Ссылка)
		|"
	);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Агент", Объект.Агент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтарыеСтроки = Объект.Накладные.НайтиСтроки(Новый Структура("Накладная", Выборка.Накладная));
		Если СтарыеСтроки.Количество() > 0 Тогда
			ТекСтрока = СтарыеСтроки[0];
		Иначе
			ТекСтрока = Объект.Накладные.Добавить();
		КонецЕсли;
		
		ТекСтрока.Накладная = Выборка.Накладная;
		ТекСтрока.Контрагент = ТекСтрока.Накладная.Контрагент;
		ТекСтрока.Сумма = ТекСтрока.Накладная.Сумма;
		ТекСтрока.Объем = ТекСтрока.Накладная.Товары.Итог("Объем");
		ТекСтрока.Вес = ТекСтрока.Накладная.Товары.Итог("Вес");
	КонецЦикла;
	
	Объект.Накладные.Сортировать("Накладная");
КонецПроцедуры

&НаКлиенте
Процедура НакладныеЗаполнить(Кнопка)
	НакладныеЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура НакладныеОбновитьНаСервере()
	Для Каждого ТекСтрока Из Объект.Накладные Цикл
		ТекСтрока.Контрагент = ТекСтрока.Накладная.Контрагент;
		ТекСтрока.Сумма = ТекСтрока.Накладная.Сумма;
		ТекСтрока.Вес = ТекСтрока.Накладная.Товары.Итог("Вес");
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НакладныеОбновить(Кнопка)
	НакладныеОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НакладныеУдалитьПС(Кнопка)
	ПустыеСтроки = Объект.Накладные.НайтиСтроки(Новый Структура("Отгрузить", Ложь)); 
	Для Каждого Строка Из ПустыеСтроки Цикл 
		Объект.Накладные.Удалить(Строка); 
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура НакладныеНакладнаяПриИзменении(Элемент)
	НакладныеОбновитьСтроку(Элементы.Накладные.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура НакладныеПослеУдаления(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура НакладныеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
КонецПроцедуры

&НаСервере
Процедура НакладныеОбновитьСтроку(ИдентификаторСтроки)
	ТекСтрока = Объект.Накладные.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекСтрока.Контрагент = ТекСтрока.Накладная.Контрагент;
	ТекСтрока.Сумма = ТекСтрока.Накладная.Сумма;
	ТекСтрока.Объем = ТекСтрока.Накладная.Товары.Итог("Объем");
	ТекСтрока.Вес = ТекСтрока.Накладная.Товары.Итог("Вес");
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьИтоги()
	Вес = Объект.Накладные.Итог("Вес");
	Сумма = Объект.Накладные.Итог("Сумма");
КонецПроцедуры

&НаСервере
Функция ПолучитьШтрихкод()
     ПараметрыШтрихкода = ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();
     ПараметрыШтрихкода.Ширина 			= 300;
     ПараметрыШтрихкода.Высота 			= 300;
     ПараметрыШтрихкода.ТипКода 		= 16;
     ПараметрыШтрихкода.УголПоворота 	= 0;
	 ПараметрыШтрихкода.Штрихкод 		= СокрЛП(Объект.Ссылка.УникальныйИдентификатор());
     ПараметрыШтрихкода.ПрозрачныйФон 	= Истина;
	 ПараметрыШтрихкода.ОтображатьТекст = Ложь;
	 ПараметрыШтрихкода.УбратьЛишнийФон = Истина;
	 
	 //ПараметрыШтрихкода.УровеньКоррекцииQR = 1;
	 //ПараметрыШтрихкода.Масштабировать = Истина;
	 //ПараметрыШтрихкода.СохранятьПропорции = Истина;
	 //ПараметрыШтрихкода.ВертикальноеВыравнивание = 1; 
	 //ПараметрыШтрихкода.GS1DatabarКоличествоСтрок = 2;
	 //ПараметрыШтрихкода.ТипВходныхДанных = 0;  // Тип входных данных (0-Строка, 1-Base64).
	 //ПараметрыШтрихкода.ЛоготипКартинка = Неопределено;
	 //ПараметрыШтрихкода.ЛоготипРазмерПроцентОтШК = Неопределено;
	 
	 РезультатШтрихкод = ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	 
	 Если НЕ РезультатШтрихкод.Результат Тогда
         ВызватьИсключение НСтр("ru='Ошибка генерации штрихкода.'");
	 КонецЕсли;
	 
     Возврат РезультатШтрихкод.Картинка;
КонецФункции

&НаСервере
Функция ПолучитьQRКод()
	ШтрихКодер = ГенерацияШтрихкода.ПолучитьКомпонентуШтрихКодирования();
	ШтрихКодер.Ширина			= 300;
	ШтрихКодер.Высота			= 300;
	ШтрихКодер.ТипКода			= 16;
	ШтрихКодер.УголПоворота		= 0;
	ШтрихКодер.ЗначениеКода		= СокрЛП(Объект.Ссылка.УникальныйИдентификатор());
	ШтрихКодер.ПрозрачныйФон	= Истина;
	ШтрихКодер.ОтображатьТекст	= Ложь;
	
	ДвоичныеДанные = ШтрихКодер.ПолучитьШтрихкод();
	
	Картинка = Новый Картинка(ДвоичныеДанные);
	
	Возврат Картинка;
КонецФункции

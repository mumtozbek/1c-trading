
Процедура Сформировать(ТабДок) Экспорт
	ТабДок.Очистить();
	
	Макет = ПолучитьМакет("Основной");

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьАгент = Макет.ПолучитьОбласть("Агент");
	ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	ОбластьГруппа = Макет.ПолучитьОбласть("Группа");
	ОбластьТовар = Макет.ПолучитьОбласть("Товар");
	ОбластьРегистратор = Макет.ПолучитьОбласть("Регистратор");
	ОбластьКомментарий = Макет.ПолучитьОбласть("Комментарий");
	
	ОбластьЗаголовок.Параметры.Период = ПредставлениеПериода(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания));
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегСальдоПоТареОстаткиИОбороты.Контрагент.Агент КАК Агент,
	|	РегСальдоПоТареОстаткиИОбороты.Контрагент КАК Контрагент,
	|	РегСальдоПоТареОстаткиИОбороты.Товар КАК Товар,
	|	РегСальдоПоТареОстаткиИОбороты.Регистратор КАК Регистратор,
	|	РегСальдоПоТареОстаткиИОбороты.Примечание КАК Примечание,
	|	СУММА(РегСальдоПоТареОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	|	СУММА(РегСальдоПоТареОстаткиИОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(РегСальдоПоТареОстаткиИОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	СУММА(РегСальдоПоТареОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.СальдоПоТаре.ОстаткиИОбороты(&Дата1, &Дата2, Регистратор, ДвиженияИГраницыПериода) КАК РегСальдоПоТареОстаткиИОбороты
	|ГДЕ
	|	ИСТИНА");
	
	Если НЕ Агент.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И Контрагент.Агент В ИЕРАРХИИ(&Агент)";
	КонецЕсли;
	
	Если НЕ Контрагент.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И Контрагент В ИЕРАРХИИ(&Контрагент)";
	КонецЕсли;
	
	Если НЕ Товар.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И Товар В ИЕРАРХИИ(&Товар)";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	РегСальдоПоТареОстаткиИОбороты.Контрагент.Агент,
	|	Контрагент,
	|	Товар,
	|	Регистратор,
	|	Примечание
	|УПОРЯДОЧИТЬ ПО
	|	ТипЗначения(Контрагент),
	|	РегСальдоПоТареОстаткиИОбороты.Контрагент.Агент.Наименование,
	|	Контрагент.Наименование,
	|	Товар.Наименование,
	|	Регистратор.Дата
	|ИТОГИ
	|	СУММА(КоличествоНачальныйОстаток),
	|	СУММА(КоличествоПриход),
	|	СУММА(КоличествоРасход),
	|	СУММА(КоличествоКонечныйОстаток)
	|ПО
	|	ОБЩИЕ,
	|	Агент,
	|	Контрагент" + ?(ПоГруппам, " ИЕРАРХИЯ", "") + ",
	|	Товар,
	|	Регистратор,
	|	Примечание";

	Запрос.УстановитьПараметр("Дата1", НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Период.ДатаОкончания));
	
	Запрос.УстановитьПараметр("Агент", Агент);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Товар", Товар);

	РезультатЗапроса = Запрос.Выполнить();

	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбщийИтог.Следующий() Цикл
		ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
		ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
		
		ВыборкаАгент = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаАгент.Следующий() Цикл
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("Агент", ВыборкаАгент.Агент);
			
			Если ЗначениеЗаполнено(ВыборкаАгент.Агент) Тогда
				ОбластьАгент.Параметры.Заполнить(ВыборкаАгент);
				ОбластьАгент.Параметры.Расшифровка = СтруктураРасшифровки;
				ТабДок.Вывести(ОбластьАгент, ВыборкаАгент.Уровень());
			КонецЕсли;
			
			ВыборкаКонтрагент = ВыборкаАгент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаКонтрагент.Следующий() Цикл
				СтруктураРасшифровки = Новый Структура;
				СтруктураРасшифровки.Вставить("Агент", ВыборкаКонтрагент.Агент);
				СтруктураРасшифровки.Вставить("Контрагент", ВыборкаКонтрагент.Контрагент);
				
				Если ВыборкаКонтрагент.Контрагент.ЭтоГруппа Тогда
					ОбластьГруппа.Параметры.Заполнить(ВыборкаКонтрагент);
					ОбластьГруппа.Параметры.Расшифровка = СтруктураРасшифровки;
					ТабДок.Вывести(ОбластьГруппа, ВыборкаКонтрагент.Уровень());
				Иначе
					ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагент);
					ОбластьКонтрагент.Параметры.Расшифровка = СтруктураРасшифровки;
					ОбластьКонтрагент.Параметры.АдресКонтрагента = ВыборкаКонтрагент.Контрагент.Адрес;
					ТабДок.Вывести(ОбластьКонтрагент, ВыборкаКонтрагент.Уровень());
					
					Если ПоТоварам Тогда
						ВыборкаТовар = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаТовар.Следующий() Цикл
							СтруктураРасшифровки = Новый Структура;
							СтруктураРасшифровки.Вставить("Агент", ВыборкаТовар.Агент);
							СтруктураРасшифровки.Вставить("Контрагент", ВыборкаТовар.Контрагент);
							СтруктураРасшифровки.Вставить("Товар", ВыборкаТовар.Товар);
							
							ОбластьТовар.Параметры.Заполнить(ВыборкаТовар);
							ОбластьТовар.Параметры.Расшифровка = СтруктураРасшифровки;
							ТабДок.Вывести(ОбластьТовар, ВыборкаТовар.Уровень());
							
							Если Подробно Тогда
								ВыборкаРегистратор = ВыборкаТовар.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаРегистратор.Следующий() Цикл
									Если ВыборкаРегистратор.Регистратор <> Неопределено И ВыборкаРегистратор.Регистратор.Дата >= НачалоДня(Период.ДатаНачала) И ВыборкаРегистратор.Регистратор.Дата <= КонецДня(Период.ДатаОкончания) Тогда
										ОбластьРегистратор.Параметры.Заполнить(ВыборкаРегистратор);
										ТабДок.Вывести(ОбластьРегистратор, ВыборкаРегистратор.Уровень());
										
										ВыборкаКомментарий = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										Пока ВыборкаКомментарий.Следующий() Цикл
											Если ЗначениеЗаполнено(ВыборкаАгент.Примечание) Тогда
												Если ЗначениеЗаполнено(ВыборкаКомментарий.КоличествоПриход) ИЛИ ЗначениеЗаполнено(ВыборкаКомментарий.КоличествоРасход) Тогда
													ОбластьКомментарий.Параметры.Заполнить(ВыборкаКомментарий);
													ТабДок.Вывести(ОбластьКомментарий, ВыборкаКомментарий.Уровень());
												КонецЕсли;
											КонецЕсли;
										КонецЦикла;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
КонецПроцедуры
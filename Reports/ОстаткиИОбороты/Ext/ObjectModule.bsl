
Процедура Сформировать(ТабДок) Экспорт
	ТабДок.Очистить();
	
	Макет = ПолучитьМакет("Основной");

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСклад = Макет.ПолучитьОбласть("Склад");
	ОбластьГруппа = Макет.ПолучитьОбласть("Группа");
	ОбластьТовар = Макет.ПолучитьОбласть("Товар");
	ОбластьРегистратор = Макет.ПолучитьОбласть("Регистратор");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	
	ОбластьЗаголовок.Параметры.Период = ПредставлениеПериода(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания));
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегОстаткиОстаткиИОбороты.Склад КАК Склад,
	|	РегОстаткиОстаткиИОбороты.Товар КАК Товар,
	|	РегОстаткиОстаткиИОбороты.Регистратор КАК Регистратор,
	|	СУММА(РегОстаткиОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(РегОстаткиОстаткиИОбороты.СуммаПриход) КАК СуммаПриход,
	|	СУММА(РегОстаткиОстаткиИОбороты.СуммаРасход) КАК СуммаРасход,
	|	СУММА(РегОстаткиОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
	|	СУММА(РегОстаткиОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	|	СУММА(РегОстаткиОстаткиИОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(РегОстаткиОстаткиИОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	СУММА(РегОстаткиОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.Остатки.ОстаткиИОбороты(&Дата1, &Дата2, Регистратор, ДвиженияИГраницыПериода, Порожняя = &Порожняя И Бронь = Ложь) КАК РегОстаткиОстаткиИОбороты
	|ГДЕ
	|	ИСТИНА");
	
	Если НЕ Склад.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И Склад = &Склад";
	КонецЕсли;
	
	Если НЕ Товар.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И (Товар = &Товар ИЛИ Товар В ИЕРАРХИИ (&Товар))";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	РегОстаткиОстаткиИОбороты.Склад,
	|	РегОстаткиОстаткиИОбороты.Товар,
	|	РегОстаткиОстаткиИОбороты.Регистратор
	|УПОРЯДОЧИТЬ ПО
	|	РегОстаткиОстаткиИОбороты.Склад.Наименование,
	|	РегОстаткиОстаткиИОбороты.Склад.Код,
	|	РегОстаткиОстаткиИОбороты.Товар.Наименование,
	|	РегОстаткиОстаткиИОбороты.Товар.Код,
	|	РегОстаткиОстаткиИОбороты.Регистратор.Дата
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстаток),
	|	СУММА(СуммаПриход),
	|	СУММА(СуммаРасход),
	|	СУММА(СуммаКонечныйОстаток),
	|	СУММА(КоличествоНачальныйОстаток),
	|	СУММА(КоличествоПриход),
	|	СУММА(КоличествоРасход),
	|	СУММА(КоличествоКонечныйОстаток)
	|ПО
	|	ОБЩИЕ,
	|	РегОстаткиОстаткиИОбороты.Склад,
	|	РегОстаткиОстаткиИОбороты.Товар" + ?(ПоГруппам, " ИЕРАРХИЯ", "") + ",
	|	РегОстаткиОстаткиИОбороты.Регистратор";

	Запрос.УстановитьПараметр("Дата1", НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Товар", Товар);
	Запрос.УстановитьПараметр("Порожняя", Порожняя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбщийИтог.Следующий() Цикл
		ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
		ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

		ВыборкаСклад = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСклад.Следующий() Цикл
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("Склад", ВыборкаСклад.Склад);
			
			ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
			ОбластьСклад.Параметры.Расшифровка = СтруктураРасшифровки;
			ТабДок.Вывести(ОбластьСклад, ВыборкаСклад.Уровень());
			
			Если ПоТоварам Тогда
				ВыборкаТовар = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаТовар.Следующий() Цикл
					СтруктураРасшифровки = Новый Структура;
					СтруктураРасшифровки.Вставить("Склад", ВыборкаТовар.Склад);
					СтруктураРасшифровки.Вставить("Товар", ВыборкаТовар.Товар);
					
					Если ВыборкаТовар.Товар.ЭтоГруппа Тогда
						ОбластьГруппа.Параметры.Заполнить(ВыборкаТовар);
						ОбластьГруппа.Параметры.ТоварКод = ВыборкаТовар.Товар.Код;
						ОбластьГруппа.Параметры.Расшифровка = СтруктураРасшифровки;
						ТабДок.Вывести(ОбластьГруппа, ВыборкаТовар.Уровень());
					Иначе
						ОбластьТовар.Параметры.Заполнить(ВыборкаТовар);
						ОбластьТовар.Параметры.ТоварКод = ВыборкаТовар.Товар.Код;
						ОбластьТовар.Параметры.ЦенаБазовая = РаботаСТоварами.Цена(ВыборкаТовар.Товар, "ЦенаБазовая", КонецДня(Период.ДатаОкончания));
						ОбластьТовар.Параметры.Расшифровка = СтруктураРасшифровки;
						ТабДок.Вывести(ОбластьТовар, ВыборкаТовар.Уровень());
					КонецЕсли;
					
					Если Подробно Тогда
						ВыборкаРегистратор = ВыборкаТовар.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаРегистратор.Следующий() Цикл
							Если ВыборкаРегистратор.Регистратор <> Неопределено И ВыборкаРегистратор.Регистратор.Дата >= НачалоДня(Период.ДатаНачала) И ВыборкаРегистратор.Регистратор.Дата <= КонецДня(Период.ДатаОкончания) Тогда
								ОбластьРегистратор.Параметры.Заполнить(ВыборкаРегистратор);
								
								Если ТипЗнч(ВыборкаРегистратор.Регистратор) = Тип("ДокументСсылка.ПоступлениеТМЦ") ИЛИ ТипЗнч(ВыборкаРегистратор.Регистратор) = Тип("ДокументСсылка.РеализацияТМЦ") Тогда
									ОбластьРегистратор.Параметры.Расшифровка = ВыборкаРегистратор.Регистратор.Контрагент;
								КонецЕсли;
								
								ТабДок.Вывести(ОбластьРегистратор, ВыборкаРегистратор.Уровень());
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
КонецПроцедуры
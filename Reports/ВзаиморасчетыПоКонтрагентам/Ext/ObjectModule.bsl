
Процедура Сформировать(ТабДок) Экспорт
	ТабДок.Очистить();
	
	Макет = ПолучитьМакет("Основной");

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьТипВзаиморасчета = Макет.ПолучитьОбласть("ТипВзаиморасчета");
	ОбластьАгент = Макет.ПолучитьОбласть("Агент");
	ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	ОбластьГруппа = Макет.ПолучитьОбласть("Группа");
	ОбластьРегистратор = Макет.ПолучитьОбласть("Регистратор");
	ОбластьКомментарий = Макет.ПолучитьОбласть("Комментарий");
	
	ОбластьЗаголовок.Параметры.Период = ПредставлениеПериода(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания));
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	РегСальдоОстаткиИОбороты.ТипВзаиморасчета КАК ТипВзаиморасчета,");
	
	Если ПоАгентам Тогда
		Запрос.Текст = Запрос.Текст + "РегСальдоОстаткиИОбороты.Контрагент.Агент КАК Агент,";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|	РегСальдоОстаткиИОбороты.Контрагент КАК Контрагент,
	|	РегСальдоОстаткиИОбороты.Контрагент.ПолноеНаименование КАК КонтрагентПолноеНаименование,
	|	РегСальдоОстаткиИОбороты.Регистратор КАК Регистратор,
	|	РегСальдоОстаткиИОбороты.Примечание КАК Примечание,
	|	СУММА(РегСальдоОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(РегСальдоОстаткиИОбороты.СуммаПриход) КАК СуммаПриход,
	|	СУММА(РегСальдоОстаткиИОбороты.СуммаРасход) КАК СуммаРасход,
	|	СУММА(РегСальдоОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.Сальдо.ОстаткиИОбороты(&Дата1, &Дата2, Регистратор, ДвиженияИГраницыПериода) КАК РегСальдоОстаткиИОбороты
	|ГДЕ
	|	ИСТИНА";
	
	Если НЕ ТипВзаиморасчета.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И РегСальдоОстаткиИОбороты.ТипВзаиморасчета = &ТипВзаиморасчета";
	КонецЕсли;
	
	Если НЕ Агент.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И РегСальдоОстаткиИОбороты.Контрагент.Агент = &Агент";
	КонецЕсли;
	
	Если НЕ Контрагент.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И РегСальдоОстаткиИОбороты.Контрагент В ИЕРАРХИИ(&Контрагент)";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	ТипЗначения(РегСальдоОстаткиИОбороты.Контрагент),
	|	РегСальдоОстаткиИОбороты.ТипВзаиморасчета,";
	
	Если ПоАгентам Тогда
		Запрос.Текст = Запрос.Текст + "РегСальдоОстаткиИОбороты.Контрагент.Агент,";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|	РегСальдоОстаткиИОбороты.Контрагент,
	|	РегСальдоОстаткиИОбороты.Регистратор,
	|	РегСальдоОстаткиИОбороты.Примечание
	|УПОРЯДОЧИТЬ ПО
	|	ТипЗначения(РегСальдоОстаткиИОбороты.Контрагент),
	|	РегСальдоОстаткиИОбороты.ТипВзаиморасчета,";
	
	Если ПоАгентам Тогда
		Запрос.Текст = Запрос.Текст + "РегСальдоОстаткиИОбороты.Контрагент.Агент.Наименование,";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|	РегСальдоОстаткиИОбороты.Контрагент.ПолноеНаименование,
	|	РегСальдоОстаткиИОбороты.Регистратор.Дата
	|ИТОГИ
	|	СУММА(СуммаНачальныйОстаток),
	|	СУММА(СуммаПриход),
	|	СУММА(СуммаРасход),
	|	СУММА(СуммаКонечныйОстаток)
	|ПО
	|	ОБЩИЕ,
	|	ТипВзаиморасчета,";
	
	Если ПоАгентам Тогда
		Запрос.Текст = Запрос.Текст + "Агент,";
	КонецЕсли;
	
	Если ПоКонтрагентам Тогда
		Запрос.Текст = Запрос.Текст + "Контрагент" + ?(ПоГруппам, " ИЕРАРХИЯ", "") + ",";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|	Регистратор,
	|	Примечание";

	Запрос.УстановитьПараметр("Дата1", НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("ТипВзаиморасчета", ТипВзаиморасчета);
	Запрос.УстановитьПараметр("Агент", Агент);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);

	РезультатЗапроса = Запрос.Выполнить();

	ТабДок.НачатьАвтогруппировкуСтрок();

	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбщийИтог.Следующий() Цикл
		ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
		ТабДок.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());

		ВыборкаТипВзаиморасчета = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаТипВзаиморасчета.Следующий() Цикл
			СтруктураРасшифровки = Новый Структура;
			СтруктураРасшифровки.Вставить("ТипВзаиморасчета", ВыборкаТипВзаиморасчета.ТипВзаиморасчета);
			
			ОбластьТипВзаиморасчета.Параметры.Заполнить(ВыборкаТипВзаиморасчета);
			ОбластьТипВзаиморасчета.Параметры.Расшифровка = СтруктураРасшифровки;
			ТабДок.Вывести(ОбластьТипВзаиморасчета, ВыборкаТипВзаиморасчета.Уровень());
			
			Если ПоАгентам Тогда
				ВыборкаАгент = ВыборкаТипВзаиморасчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаАгент.Следующий() Цикл
					СтруктураРасшифровки = Новый Структура;
					СтруктураРасшифровки.Вставить("ТипВзаиморасчета", ВыборкаАгент.ТипВзаиморасчета);
					СтруктураРасшифровки.Вставить("Агент", ВыборкаАгент.Агент);
					
					ОбластьАгент.Параметры.Заполнить(ВыборкаАгент);
					ОбластьАгент.Параметры.Расшифровка = СтруктураРасшифровки;
					ТабДок.Вывести(ОбластьАгент, ВыборкаАгент.Уровень());
					
					Если ПоКонтрагентам Тогда
						ВыборкаКонтрагент = ВыборкаАгент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаКонтрагент.Следующий() Цикл
							Если ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаНачальныйОстаток) = Ложь И ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаПриход) = Ложь И ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаРасход) = Ложь И ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаКонечныйОстаток) = Ложь Тогда
								Продолжить;
							КонецЕсли;
							
							СтруктураРасшифровки = Новый Структура;
							СтруктураРасшифровки.Вставить("ТипВзаиморасчета", ВыборкаКонтрагент.ТипВзаиморасчета);
							СтруктураРасшифровки.Вставить("Агент", ВыборкаКонтрагент.Агент);
							СтруктураРасшифровки.Вставить("Контрагент", ВыборкаКонтрагент.Контрагент);
							
							Если ВыборкаКонтрагент.Контрагент.ЭтоГруппа Тогда
								ОбластьГруппа.Параметры.Заполнить(ВыборкаКонтрагент);
								ОбластьГруппа.Параметры.Расшифровка = СтруктураРасшифровки;
								ТабДок.Вывести(ОбластьГруппа, ВыборкаКонтрагент.Уровень());
							Иначе
								ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагент);
								ОбластьКонтрагент.Параметры.Расшифровка = СтруктураРасшифровки;
								ОбластьКонтрагент.Параметры.Контрагент = ВыборкаКонтрагент.Контрагент.ПолноеНаименование;
								ТабДок.Вывести(ОбластьКонтрагент, ВыборкаКонтрагент.Уровень());
								
								Если Подробно Тогда
									ВыборкаРегистратор = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаРегистратор.Следующий() Цикл
										Если ВыборкаРегистратор.Регистратор <> Неопределено И ВыборкаРегистратор.Регистратор.Дата >= НачалоДня(Период.ДатаНачала) И ВыборкаРегистратор.Регистратор.Дата <= КонецДня(Период.ДатаОкончания) Тогда
											ОбластьРегистратор.Параметры.Заполнить(ВыборкаРегистратор);
											ТабДок.Вывести(ОбластьРегистратор, ВыборкаРегистратор.Уровень());
											
											ВыборкаКомментарий = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
											Пока ВыборкаКомментарий.Следующий() Цикл
												Если ЗначениеЗаполнено(ВыборкаКомментарий.Примечание) И (ЗначениеЗаполнено(ВыборкаКомментарий.СуммаПриход) ИЛИ ЗначениеЗаполнено(ВыборкаКомментарий.СуммаРасход)) Тогда
													ОбластьКомментарий.Параметры.Заполнить(ВыборкаКомментарий);
													ТабДок.Вывести(ОбластьКомментарий, ВыборкаКомментарий.Уровень());
												КонецЕсли;
											КонецЦикла;
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					Иначе
						Если Подробно Тогда
							ВыборкаРегистратор = ВыборкаАгент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаРегистратор.Следующий() Цикл
								Если ВыборкаРегистратор.Регистратор <> Неопределено И ВыборкаРегистратор.Регистратор.Дата >= НачалоДня(Период.ДатаНачала) И ВыборкаРегистратор.Регистратор.Дата <= КонецДня(Период.ДатаОкончания) Тогда
									ОбластьРегистратор.Параметры.Заполнить(ВыборкаРегистратор);
									ТабДок.Вывести(ОбластьРегистратор, ВыборкаРегистратор.Уровень());
									
									ВыборкаКомментарий = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаКомментарий.Следующий() Цикл
										Если ЗначениеЗаполнено(ВыборкаКомментарий.Примечание) И (ЗначениеЗаполнено(ВыборкаКомментарий.СуммаПриход) ИЛИ ЗначениеЗаполнено(ВыборкаКомментарий.СуммаРасход)) Тогда
											ОбластьКомментарий.Параметры.Заполнить(ВыборкаКомментарий);
											ТабДок.Вывести(ОбластьКомментарий, ВыборкаКомментарий.Уровень());
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если ПоКонтрагентам Тогда
					ВыборкаКонтрагент = ВыборкаТипВзаиморасчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаКонтрагент.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаНачальныйОстаток) = Ложь И ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаПриход) = Ложь И ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаРасход) = Ложь И ЗначениеЗаполнено(ВыборкаКонтрагент.СуммаКонечныйОстаток) = Ложь Тогда
							Продолжить;
						КонецЕсли;
						
						СтруктураРасшифровки = Новый Структура;
						СтруктураРасшифровки.Вставить("ТипВзаиморасчета", ВыборкаКонтрагент.ТипВзаиморасчета);
						СтруктураРасшифровки.Вставить("Контрагент", ВыборкаКонтрагент.Контрагент);
						
						Если ВыборкаКонтрагент.Контрагент.ЭтоГруппа Тогда
							ОбластьГруппа.Параметры.Заполнить(ВыборкаКонтрагент);
							ОбластьГруппа.Параметры.Расшифровка = СтруктураРасшифровки;
							ТабДок.Вывести(ОбластьГруппа, ВыборкаКонтрагент.Уровень());
						Иначе
							ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагент);
							ОбластьКонтрагент.Параметры.Расшифровка = СтруктураРасшифровки;
							ОбластьКонтрагент.Параметры.Контрагент = ВыборкаКонтрагент.Контрагент.ПолноеНаименование;
							ТабДок.Вывести(ОбластьКонтрагент, ВыборкаКонтрагент.Уровень());
							
							Если Подробно Тогда
								ВыборкаРегистратор = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаРегистратор.Следующий() Цикл
									Если ВыборкаРегистратор.Регистратор <> Неопределено И ВыборкаРегистратор.Регистратор.Дата >= НачалоДня(Период.ДатаНачала) И ВыборкаРегистратор.Регистратор.Дата <= КонецДня(Период.ДатаОкончания) Тогда
										ОбластьРегистратор.Параметры.Заполнить(ВыборкаРегистратор);
										ТабДок.Вывести(ОбластьРегистратор, ВыборкаРегистратор.Уровень());
										
										ВыборкаКомментарий = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										Пока ВыборкаКомментарий.Следующий() Цикл
											Если ЗначениеЗаполнено(ВыборкаКомментарий.Примечание) И (ЗначениеЗаполнено(ВыборкаКомментарий.СуммаПриход) ИЛИ ЗначениеЗаполнено(ВыборкаКомментарий.СуммаРасход)) Тогда
												ОбластьКомментарий.Параметры.Заполнить(ВыборкаКомментарий);
												ТабДок.Вывести(ОбластьКомментарий, ВыборкаКомментарий.Уровень());
											КонецЕсли;
										КонецЦикла;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Если Подробно Тогда
						ВыборкаРегистратор = ВыборкаТипВзаиморасчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаРегистратор.Следующий() Цикл
							Если ВыборкаРегистратор.Регистратор <> Неопределено И ВыборкаРегистратор.Регистратор.Дата >= НачалоДня(Период.ДатаНачала) И ВыборкаРегистратор.Регистратор.Дата <= КонецДня(Период.ДатаОкончания) Тогда
								ОбластьРегистратор.Параметры.Заполнить(ВыборкаРегистратор);
								ТабДок.Вывести(ОбластьРегистратор, ВыборкаРегистратор.Уровень());
								
								ВыборкаКомментарий = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаКомментарий.Следующий() Цикл
									Если ЗначениеЗаполнено(ВыборкаКомментарий.Примечание) И (ЗначениеЗаполнено(ВыборкаКомментарий.СуммаПриход) ИЛИ ЗначениеЗаполнено(ВыборкаКомментарий.СуммаРасход)) Тогда
										ОбластьКомментарий.Параметры.Заполнить(ВыборкаКомментарий);
										ТабДок.Вывести(ОбластьКомментарий, ВыборкаКомментарий.Уровень());
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
КонецПроцедуры
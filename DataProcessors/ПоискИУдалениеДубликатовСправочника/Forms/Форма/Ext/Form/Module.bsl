
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для Каждого ОбъектМетаданных Из Метаданные.Справочники Цикл
		Элементы.ИмяСправочника.СписокВыбора.Добавить(ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
	КонецЦикла;
	
	Строки = ХранилищеНастроекДанныхФорм.Загрузить("Обработка." + ЭтотОбъект.ИмяФормы, "Строки");
	Если ТипЗнч(Строки) = Тип("ТаблицаЗначений") Тогда
		Объект.Строки.Загрузить(Строки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда
		ИмяСправочникаПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИмяСправочникаПриИзмененииНаСервере()
	Элементы.ИмяРеквизита.СписокВыбора.Очистить();
	Для Каждого ОбъектМетаданных Из Метаданные.Справочники[Объект.ИмяСправочника].СтандартныеРеквизиты Цикл
		Элементы.ИмяРеквизита.СписокВыбора.Добавить(ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
	КонецЦикла;
	Для Каждого ОбъектМетаданных Из Метаданные.Справочники[Объект.ИмяСправочника].Реквизиты Цикл
		Элементы.ИмяРеквизита.СписокВыбора.Добавить(ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИмяСправочникаПриИзменении(Элемент)
	ИмяСправочникаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИмяРеквизитаПриИзменении(Элемент)
	Объект.Строки.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура СтрокиОсновнойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Элементы.Строки.ТекущиеДанные.Варианты;
КонецПроцедуры

&НаКлиенте
Процедура СтрокиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СтрокиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Дубликаты = Новый Массив;
	
	Объект.Строки.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Элементы.Ссылка) КАК Количество,
	|	Элементы." + Объект.ИмяРеквизита + " КАК Значение,
	|	Элементы.Ссылка КАК Вариант
	|ИЗ
	|	Справочник." + Объект.ИмяСправочника + " КАК Элементы
	|ГДЕ
	|	ИСТИНА
	|	" + ?(Метаданные.Справочники[Объект.ИмяСправочника].Иерархический И Метаданные.Справочники[Объект.ИмяСправочника].ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов , "И Элементы.ЭтоГруппа = ЛОЖЬ", "") + "
	|	И Элементы." + Объект.ИмяРеквизита + " <> """"
	|	" + ?(Объект.ПропускатьУдаленные, "И Элементы.ПометкаУдаления = ЛОЖЬ", "") + "
    |
	|СГРУППИРОВАТЬ ПО
	|	Элементы." + Объект.ИмяРеквизита + ",
	|	Элементы.Ссылка
	|ИТОГИ ПО
	|	Элементы." + Объект.ИмяРеквизита + ",
	|	Элементы.Ссылка
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗначение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗначение.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаЗначение.Значение) = Ложь Тогда
			Продолжить;
		КонецЕсли;
		Если ВыборкаЗначение.Количество > 1 Тогда
			ВыборкаСсылка = ВыборкаЗначение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСсылка.Следующий() Цикл
				Дубликаты.Добавить(ВыборкаСсылка.Вариант.Ссылка);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Нахождения = НайтиПоСсылкам(Дубликаты);
	
	ВыборкаЗначение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗначение.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаЗначение.Значение) = Ложь Тогда
			Продолжить;
		КонецЕсли;
		Если ВыборкаЗначение.Количество > 1 Тогда
			НоваяСтрока = Объект.Строки.Добавить();
			НоваяСтрока.Значение = ВыборкаЗначение.Значение;
			
			ВыборкаСсылка = ВыборкаЗначение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСсылка.Следующий() Цикл
				СвязиДубликата = Нахождения.НайтиСтроки(Новый Структура("Ссылка", ВыборкаСсылка.Вариант.Ссылка));
				НоваяСтрока.Варианты.Добавить(ВыборкаСсылка.Вариант.Ссылка, ВыборкаСсылка.Вариант.Наименование + " [СВЯЗЕЙ: " + СвязиДубликата.Количество() + "]" + " [" + ВыборкаСсылка.Вариант.Код + "]" + ?(Метаданные.Справочники[Объект.ИмяСправочника].Владельцы.Количество() > 0, " [" + ВыборкаСсылка.Вариант.Владелец.Наименование + "]", ""));
			КонецЦикла;
			
			Если НоваяСтрока.Варианты.Количество() = 1 Тогда
				Объект.Строки.Удалить(НоваяСтрока);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СтрокиЗаполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИсправитьНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ДокументыНаПроведение = Новый ТаблицаЗначений;
	ДокументыНаПроведение.Колонки.Добавить("Документ");
	ДокументыНаПроведение.Колонки.Добавить("Дата");
	
	ДанныеПоиска = Новый ТаблицаЗначений;
	ДанныеПоиска.Колонки.Добавить("Основной");
	ДанныеПоиска.Колонки.Добавить("Дубликат");
	
	Для Каждого Строка Из Объект.Строки Цикл
		Если ЗначениеЗаполнено(Строка.Основной) Тогда
			Для Каждого Вариант Из Строка.Варианты Цикл
				Если Вариант.Значение <> Строка.Основной Тогда
					НоваяСтрока = ДанныеПоиска.Добавить();
					НоваяСтрока.Основной = Строка.Основной;
					НоваяСтрока.Дубликат = Вариант.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	НачатьТранзакцию();
	
	// Заменить ссылок
	Нахождения = НайтиПоСсылкам(ДанныеПоиска.ВыгрузитьКолонку("Дубликат"));
	Для Каждого Нахождение Из Нахождения Цикл
		СтрокаДанных = ДанныеПоиска.Найти(Нахождение.Ссылка, "Дубликат");
		
		Если ЗначениеЗаполнено(СтрокаДанных) Тогда
			ИмяМетаданных = ОбработкаОбъект.ПолучитьТипОбъекта(Нахождение.Метаданные);
			Если ИмяМетаданных = "Справочник" ИЛИ ИмяМетаданных = "Документ" Тогда
				НахождениеОбъект = Нахождение.Данные.ПолучитьОбъект();
				
				Для Каждого Реквизит Из Нахождение.Метаданные.СтандартныеРеквизиты Цикл
					Если НахождениеОбъект[Реквизит.Имя] = Нахождение.Ссылка Тогда
						НахождениеОбъект[Реквизит.Имя] = СтрокаДанных.Основной;
					КонецЕсли;
				КонецЦикла;
				
				Для Каждого Реквизит Из Нахождение.Метаданные.Реквизиты Цикл
					Если НахождениеОбъект[Реквизит.Имя] = Нахождение.Ссылка Тогда
						НахождениеОбъект[Реквизит.Имя] = СтрокаДанных.Основной;
					КонецЕсли;
				КонецЦикла;
				
				Для Каждого Таблица Из Нахождение.Метаданные.ТабличныеЧасти Цикл
					Для Каждого Строка Из НахождениеОбъект[Таблица.Имя] Цикл
						Для Каждого Реквизит Из Таблица.Реквизиты Цикл
							Если Строка[Реквизит.Имя] = Нахождение.Ссылка Тогда
								Строка[Реквизит.Имя] = СтрокаДанных.Основной;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
				
				Если ОбработкаОбъект.ПолучитьТипОбъекта(Нахождение.Метаданные) = "Документ" Тогда
					НахождениеОбъект.Записать(РежимЗаписиДокумента.Запись);
					
					Если НахождениеОбъект.Проведен И Объект.Проведение Тогда
						ДокументНаПроведение = ДокументыНаПроведение.Добавить();
						ДокументНаПроведение.Документ = НахождениеОбъект.Ссылка;
						ДокументНаПроведение.Дата = НахождениеОбъект.Дата;
					КонецЕсли;
				Иначе
					НахождениеОбъект.Записать();
				КонецЕсли;
				
				Сообщить("Объект изменен: " + СокрЛП(НахождениеОбъект.Ссылка), СтатусСообщения.Информация);
			ИначеЕсли ИмяМетаданных = "РегистрСведений" Тогда
				Если Нахождение.Метаданные.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый Тогда
					Движение = РегистрыСведений[Нахождение.Метаданные.Имя].СоздатьМенеджерЗаписи();
					
					Для Каждого Реквизит Из Нахождение.Метаданные.Измерения Цикл
						Если Нахождение.Данные[Реквизит.Имя] = Нахождение.Ссылка Тогда
							Движение[Реквизит.Имя] = СтрокаДанных.Основной;
						Иначе
							Движение[Реквизит.Имя] = Нахождение.Данные[Реквизит.Имя];
						КонецЕсли;
					КонецЦикла;
					
					Для Каждого Реквизит Из Нахождение.Метаданные.Ресурсы Цикл
						Если Нахождение.Данные[Реквизит.Имя] = Нахождение.Ссылка Тогда
							Движение[Реквизит.Имя] = СтрокаДанных.Основной;
						Иначе
							Движение[Реквизит.Имя] = Нахождение.Данные[Реквизит.Имя];
						КонецЕсли;
					КонецЦикла;
					
					Для Каждого Реквизит Из Нахождение.Метаданные.Реквизиты Цикл
						Если Нахождение.Данные[Реквизит.Имя] = Нахождение.Ссылка Тогда
							Движение[Реквизит.Имя] = СтрокаДанных.Основной;
						Иначе
							Движение[Реквизит.Имя] = Нахождение.Данные[Реквизит.Имя];
						КонецЕсли;
					КонецЦикла;
					
					Движение.Записать(Истина);
					
					Сообщить("Регистр изменен: " + СокрЛП(Нахождение.Метаданные.Имя), СтатусСообщения.Информация);
				КонецЕсли;
			ИначеЕсли ИмяМетаданных = "РегистрНакопления" Тогда
				Сообщить(1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Объединение ссылок
	Для Каждого СтрокаДанных Из ДанныеПоиска Цикл
		Если Объект.Объединить Тогда
			ОсновнойОбъект = СтрокаДанных.Основной.ПолучитьОбъект();
			
			Для Каждого Реквизит Из ОсновнойОбъект.Метаданные().Реквизиты Цикл
				Если ЗначениеЗаполнено(ОсновнойОбъект[Реквизит.Имя]) = Ложь Тогда
					ОсновнойОбъект[Реквизит.Имя] = СтрокаДанных.Дубликат[Реквизит.Имя];
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого Таблица Из ОсновнойОбъект.Метаданные().ТабличныеЧасти Цикл
				Для Каждого Строка Из СтрокаДанных.Дубликат[Таблица.Имя] Цикл
					НоваяСтрока = ОсновнойОбъект[Таблица.Имя].Добавить();
					Для Каждого Реквизит Из Таблица.Реквизиты Цикл
						НоваяСтрока[Реквизит.Имя] = Строка[Реквизит.Имя];
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
			Если ОсновнойОбъект.Модифицированность() Тогда
				ОсновнойОбъект.Записать();
			КонецЕсли;
			
			//// Замена внешних идентификаторов
			//Если Метаданные.РегистрыСведений.Найти("ВнешниеИдентификаторы") <> Неопределено Тогда
			//	Набор = РегистрыСведений.ВнешниеИдентификаторы.СоздатьНаборЗаписей();
			//	Набор.Отбор.Элемент.Установить(СтрокаДанных.Дубликат);
			//	Набор.Прочитать();
			//	
			//	Для Каждого Запись Из Набор Цикл
			//		ВнешниеИдентификаторы.Установить(Запись.Источник, СтрокаДанных.Основной, Запись.Идентификатор, Истина);
			//		ВнешниеИдентификаторы.УдалитьСвязиЭлемента(Запись.Источник, СтрокаДанных.Дубликат);
			//	КонецЦикла;
			//КонецЕсли;
		КонецЕсли;
		
		Если Объект.Удалить Тогда
			ДубликатьОбъект = СтрокаДанных.Дубликат.ПолучитьОбъект();
			ДубликатьОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	КонецЦикла;
	
	ДокументыНаПроведение.Свернуть("Документ,Дата");
	ДокументыНаПроведение.Сортировать("Дата");
	
	Для Каждого ДокументНаПроведение Из ДокументыНаПроведение Цикл
		ДокументОбъект = ДокументНаПроведение.Документ.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура СтрокиИсправить(Команда)
	Если Вопрос("Вы действительно хотите выполнить эту операцию?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ИсправитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Объект.Строки.Количество() > 0 Тогда
		Если Вопрос("Вы действительно хотите закрыть форму?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ПередЗакрытиемНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	ХранилищеНастроекДанныхФорм.Сохранить("Обработка." + ЭтотОбъект.ИмяФормы, "Строки", Объект.Строки.Выгрузить());
КонецПроцедуры


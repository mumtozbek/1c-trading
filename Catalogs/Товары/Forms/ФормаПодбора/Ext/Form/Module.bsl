
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Дата") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Дата", Параметры.Дата);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Дата", ТекущаяДата());
	КонецЕсли;
	
	Если Параметры.Свойство("Склад") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Склад", Параметры.Склад);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Склад", Справочники.Склады.ПустаяСсылка());
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметры.Организация);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Организация", ПараметрыСеанса.Пользователь.Организация);
	КонецЕсли;
	
	Если Параметры.Свойство("Контрагент") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Контрагент", Параметры.Контрагент);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	КонецЕсли;
	
	//Если Параметры.Свойство("Заказ") Тогда
	//	Список.Параметры.УстановитьЗначениеПараметра("Заказ", Параметры.Заказ);
	//Иначе
	//	Список.Параметры.УстановитьЗначениеПараметра("Заказ", Ложь);
	//КонецЕсли;
	
    Если Параметры.Свойство("ТекущаяСтрока") И ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
		Если ТипЗнч(Параметры.ТекущаяСтрока) = Тип("СправочникСсылка.Товары") Тогда
			СтрокаПоиска = Параметры.ТекущаяСтрока;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("СтрокаПоиска") И ЗначениеЗаполнено(Параметры.СтрокаПоиска) Тогда
		СтрокаПоиска = Параметры.СтрокаПоиска;
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаПоиска) = Ложь Тогда
		ФильтрТоваровНаСервере(СтрокаПоиска);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	 РезультатСсылка = ВыбранноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ФильтрТоваров(Текст);
КонецПроцедуры

&НаКлиенте
Процедура ФильтрТоваров(ЗНАЧ Подстрока)
	ФильтрТоваровНаСервере(Подстрока);
	
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура ФильтрТоваровНаСервере(ЗНАЧ Текст)
	Подстрока = ОтформатироватьПодстроку(Текст);
	
	Подстроки = ПолучитьПодстрокиПоиска(Подстрока, ЭтаФорма.Паразиты);
    
	Список.Параметры.УстановитьЗначениеПараметра("Подстрока", Подстрока);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Товары.*,
	|
	|	ЕСТЬNULL(РегСтавкаНДС.Значение, ЕСТЬNULL(РегУчетнаяПолитика.СтавкаНДС, ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС))) КАК СтавкаНДС,
	|
	|	ЕСТЬNULL(РегОстатки.КоличествоОстаток, 0) КАК Остаток,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РегОстатки.КоличествоОстаток, 0) <> 0 И ЕСТЬNULL(РегОстатки.СуммаОстаток, 0) <> 0 ТОГДА
	|			ВЫБОР
	|				КОГДА (РегОстатки.СуммаОстаток / РегОстатки.КоличествоОстаток) > 0 ТОГДА
	|					(РегОстатки.СуммаОстаток / РегОстатки.КоличествоОстаток)
	|				ИНАЧЕ
	|					ЕСТЬNULL(РегЦенаПоследняя.Цена, ЕСТЬNULL(РегЦенаСледующая.Цена, 0))
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЕСТЬNULL(РегЦенаСледующая.Цена, ЕСТЬNULL(РегЦенаПоследняя.Цена, 0))
	|	КОНЕЦ КАК ЦенаБазовая,
	|	
	|	ЕСТЬNULL(РегЦенаСледующая.Цена, 0) КАК ЦенаСледующая,
	|
	|	ЕСТЬNULL(РегЦенаПродажная.Цена, 0) КАК ЦенаПродажная,
	|
	|	РегСкидкиТоваров.Скидка КАК Скидка
	|	
	|ИЗ
	|	Справочник.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Остатки.Остатки(&Дата, Склад В ИЕРАРХИИ (&Склад) И Порожняя = Ложь) КАК РегОстатки ПО (РегОстатки.Товар = Товары.Ссылка)
	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(&Дата, Тип = ""ЦенаБазовая"") КАК РегЦенаПоследняя ПО (РегЦенаПоследняя.Товар = Товары.Ссылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПервых(&Дата, Тип = ""ЦенаБазовая"") КАК РегЦенаСледующая ПО (РегЦенаСледующая.Товар = Товары.Ссылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(&Дата, Тип = ""ЦенаПродажная"") КАК РегЦенаПродажная ПО РегЦенаПродажная.Товар = Товары.Ссылка
	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРеквизитов.СрезПоследних(&Дата, Реквизит = ""СтавкаНДС"") КАК РегСтавкаНДС ПО (РегСтавкаНДС.Ссылка = Товары.Ссылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетныеПолитики.СрезПоследних(&Дата, Организация = &Организация) КАК РегУчетнаяПолитика ПО (РегУчетнаяПолитика.СтавкаНДС.Ставка > 0)
	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкидкиТоваров.СрезПоследних(&Дата, Контрагент = &Контрагент ИЛИ Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК РегСкидкиТоваров ПО (РегСкидкиТоваров.Товар = Товары.Ссылка)
	|ГДЕ
	|	Товары.ЭтоГруппа = ЛОЖЬ И Товары.ВидТовара.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТовара.Товар) И ((Товары.Наименование ПОДОБНО ""%" + Подстрока + "%"")";
	
	Для Каждого Поле Из Метаданные.Справочники.Товары.ВводПоСтроке Цикл
		ТекстЗапроса = ТекстЗапроса + " ИЛИ (Товары." + Поле.Имя + " ПОДОБНО ""%" + Подстрока + "%"")";
	КонецЦикла;
	
	Если Подстроки.Количество() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса + " ИЛИ (ИСТИНА ";
	КонецЕсли;
	
	Для Каждого Подстрока Из Подстроки Цикл
		ТекстЗапроса = ТекстЗапроса + " И (Товары.Наименование ПОДОБНО ""%" + Подстрока + "%"" ИЛИ Товары.ПолноеНаименование ПОДОБНО ""%" + Подстрока + "%"")";
	КонецЦикла;
	
	Если Подстроки.Количество() > 0 Тогда
		ТекстЗапроса = ТекстЗапроса + ")";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ")";
	
	Список.ПроизвольныйЗапрос = Истина;
	Список.ТекстЗапроса = ТекстЗапроса;
	
	СтрокаПоиска = Текст;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПодстрокиПоиска(ЗНАЧ Текст, Паразиты)
	
	Результат = Новый Массив;
	
	Если Паразиты.Количество() = 0 Тогда
		Паразиты.Добавить("гр");
		Паразиты.Добавить("gr");
		Паразиты.Добавить("мл");
		Паразиты.Добавить("ml");
		Паразиты.Добавить("по");
		Паразиты.Добавить("шт");
		Паразиты.Добавить("со");
		
		Паразиты.Добавить("кор");
		Паразиты.Добавить("упак");
		Паразиты.Добавить("штук");
		Паразиты.Добавить("упаков");
		Паразиты.Добавить("вкусом");
	КонецЕсли;
	
	Подстроки = СтрРазделить(Текст, " ", Ложь);
	Для Каждого Подстрока Из Подстроки Цикл
		Если СтрДлина(Подстрока) >= 2 И Паразиты.НайтиПоЗначению(Подстрока) = Неопределено Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

&НаСервереБезКонтекста
Функция ОтформатироватьПодстроку(Знач Текст)
	
	Подстрока = СокрЛП(Текст);
	Подстрока = СтрЗаменить(Подстрока, "¶", " ");
	Подстрока = СтрЗаменить(Подстрока, ".", " ");
	Подстрока = СтрЗаменить(Подстрока, ",", " ");
	Подстрока = СтрЗаменить(Подстрока, ",", " ");
	Подстрока = СтрЗаменить(Подстрока, "-", " ");
	Подстрока = СтрЗаменить(Подстрока, "+", " ");
	Подстрока = СтрЗаменить(Подстрока, "(", " ");
	Подстрока = СтрЗаменить(Подстрока, ")", " ");
	Подстрока = СтрЗаменить(Подстрока, """", " ");
	Подстрока = СтрЗаменить(Подстрока, "«", " ");
	Подстрока = СтрЗаменить(Подстрока, "»", " ");
	Подстрока = СтрЗаменить(Подстрока, "*", " ");
	Подстрока = СтрЗаменитьПоРегулярномуВыражению(Подстрока, "[^\w\d\s\.]", " ");
	
	Пока СтрЧислоВхождений(Подстрока, "  ") > 0 Цикл
		Подстрока = СтрЗаменить(Подстрока, "  ", " ");
	КонецЦикла;
	
	Подстрока = СокрЛП(Подстрока);
	
	Возврат Подстрока;

КонецФункции

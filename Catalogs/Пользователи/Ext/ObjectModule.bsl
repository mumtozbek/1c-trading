
Процедура ПередУдалением(Отказ)
	Если ДополнительныеСвойства.Свойство("Игнорировать") Тогда
		Возврат;
	КонецЕсли;
	
	ПользовательСистемы = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Ссылка.УникальныйИдентификатор());
	
	Если ПользовательСистемы <> Неопределено Тогда
		ПользовательСистемы.Удалить();
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ДополнительныеСвойства.Свойство("Игнорировать") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Проекты.Свернуть("Проект");
	Зоны.Свернуть("Зона");
	Роли.Свернуть("Роль");
	Товары.Свернуть("Товар");
	Доступы.Свернуть("Тип,Вид,Добавление,Изменение,Удаление");
	
	Для Каждого Строка Из Проекты Цикл
		Если глСсылкаСуществует(Строка.Проект) = Ложь Тогда
			Проекты.Удалить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Зоны Цикл
		Если глСсылкаСуществует(Строка.Зона) = Ложь Тогда
			Зоны.Удалить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Роли Цикл
		Если глСсылкаСуществует(Строка.Роль) = Ложь Тогда
			Роли.Удалить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Товары Цикл
		Если глСсылкаСуществует(Строка.Товар) = Ложь Тогда
			Товары.Удалить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыСеанса.Пользователь.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПользовательСистемы = ПользователиИнформационнойБазы.СоздатьПользователя();
	
	Если Ссылка = ПараметрыСеанса.Пользователь Тогда
		ПометкаУдаления = Ложь;
		Активность = Истина;
	КонецЕсли;
	
	Если Ссылка.ПометкаУдаления = ПометкаУдаления Тогда // Сохранение
		ПользовательСистемы = ПолучитьПользовательСистемы();
	ИначеЕсли Ссылка.ПометкаУдаления И ПометкаУдаления = Ложь Тогда // Снятие пометки на удаление
		ПользовательСистемы = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Ссылка.УникальныйИдентификатор());
	ИначеЕсли Ссылка.ПометкаУдаления = Ложь И ПометкаУдаления Тогда // Пометка на удаление
		ПользовательСистемы = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Ссылка.УникальныйИдентификатор());
	КонецЕсли;
	
	Если ПользовательСистемы = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ТекущийПользовательСистемы = ПользователиИнформационнойБазы.ТекущийПользователь();
	Если ТекущийПользовательСистемы.Роли.Содержит(Метаданные.Роли.Администратор) = Ложь И ТекущийПользовательСистемы.Роли.Содержит(Метаданные.Роли.Оператор) = Ложь Тогда
		Если ПользовательСистемы.УникальныйИдентификатор <> ТекущийПользовательСистемы.УникальныйИдентификатор Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Ссылка.Пустая() Тогда
		УстановитьСсылкуНового(Справочники.Пользователи.ПолучитьСсылку(ПользовательСистемы.УникальныйИдентификатор));
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

Функция ПолучитьПользовательСистемы()
	ПользовательСистемы = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Ссылка.УникальныйИдентификатор());
	
	Если Ссылка.Пустая() Тогда
		ПользовательСистемы = ПользователиИнформационнойБазы.СоздатьПользователя();
	КонецЕсли;

	ПользовательСистемы.Имя = Наименование;
	ПользовательСистемы.ПолноеИмя = Наименование;
	ПользовательСистемы.РежимЗапуска = РежимЗапускаКлиентскогоПриложения.Авто;
	ПользовательСистемы.ПоказыватьВСпискеВыбора = Видимость;
	
	Если Мобильный Тогда
		ПользовательСистемы.Роли.Добавить(Метаданные.Роли.Мобильный);
	Иначе
		ПользовательСистемы.Роли.Удалить(Метаданные.Роли.Мобильный);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Пароль) Тогда
		ПользовательСистемы.Пароль = Пароль;
	КонецЕсли;
	
	ПользовательСистемы.Записать();
	
	Возврат ПользовательСистемы;
КонецФункции


Процедура СформироватьСчетФактуру(Знач ДокументОбъект, ТабДок) Экспорт
	УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(ДокументОбъект.Дата, ДокументОбъект.Организация);
	
	// Табличный документ
	Макет = ПолучитьОбщийМакет("НакладнаяОптовая");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоПрописью = Макет.ПолучитьОбласть("ИтогоПрописью");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	// Шапка документа
	Шапка = Новый Структура("Номер,Дата,Организация,Поставщик,ПредставлениеПоставщика,АдресПоставщика,ИННПоставщика,РКПНДСПоставщика,Покупатель,ПредставлениеПокупателя,АдресПокупателя,ИННПокупателя,РКПНДСПокупателя,ДанныеДокумента,Основание,Руководитель,Бухгалтер,МОЛ,Получатель,Доверенность,Автомашина,СуммаСНаценкой,СуммаНДС,СуммаПродажная,СуммаОтпускная,Округление");
	
	// Строки документа
	Строки = Новый ТаблицаЗначений;
	Строки.Колонки.Добавить("Товар", Новый ОписаниеТипов("СправочникСсылка.Товары"));
	Строки.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("БонусКоличество", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("БонусСумма", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("ЦенаСНаценкой", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("СуммаСНаценкой", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС"));
	Строки.Колонки.Добавить("СуммаНДС", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("ЦенаПродажная", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("СуммаПродажная", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("ЦенаОтпускная", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("СуммаОтпускная", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("Объем", Новый ОписаниеТипов("Число"));
	Строки.Колонки.Добавить("Вес", Новый ОписаниеТипов("Число"));
	
	// Заполнение данных
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.РеализацияТМЦ") И ДокументОбъект.ВидРеализации.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Безнал Тогда
		Шапка.Номер = СокрЛП(ДокументОбъект.Номер);
		Шапка.Дата = ДокументОбъект.Дата;
		Шапка.Организация = ДокументОбъект.Организация;
		
		Шапка.ДанныеДокумента = "№" + СокрЛП(ДокументОбъект.Номер) + " от " + Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
		Шапка.Основание = "на основании договора № " + СокрЛП(ДокументОбъект.Договор.Номер) + " от " + Формат(ДокументОбъект.Договор.Дата, "ДФ=dd.MM.yyyy");
		
		Шапка.Поставщик = ДокументОбъект.Организация;
		Шапка.ПредставлениеПоставщика = ДокументОбъект.Организация.Наименование;
		Шапка.АдресПоставщика = ДокументОбъект.Организация.Адрес;
		Шапка.ИННПоставщика = ДокументОбъект.Организация.ИНН;
		Шапка.РКПНДСПоставщика = ДокументОбъект.Организация.КодПНДС;
		
		Шапка.Покупатель = ДокументОбъект.Контрагент;
		Шапка.ПредставлениеПокупателя = ДокументОбъект.Контрагент.ПолноеНаименование;
		Шапка.АдресПокупателя = ДокументОбъект.Контрагент.Адрес;
		Шапка.ИННПокупателя = ?(ПустаяСтрока(ДокументОбъект.Контрагент.ИНН), ДокументОбъект.Контрагент.ПИНФЛ, ДокументОбъект.Контрагент.ИНН);
		Шапка.РКПНДСПокупателя = ДокументОбъект.Контрагент.КодПНДС;
		
		Шапка.Руководитель = УчетнаяПолитика.Руководитель;
		Шапка.Бухгалтер = УчетнаяПолитика.Бухгалтер;
		Шапка.МОЛ = СокрЛП(ДокументОбъект.Склад.МОЛ);
		Шапка.Получатель = ДокументОбъект.Получатель;
		Шапка.Доверенность = "№" + ДокументОбъект.НомерДоверенности + " от " + ?(ЗначениеЗаполнено(ДокументОбъект.ДатаДоверенности), ДокументОбъект.ДатаДоверенности, "");
		Шапка.Автомашина = ДокументОбъект.Автомашина;
		
		Шапка.Округление = ДокументОбъект.Округление;
		
		// Товары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			Если (Строка.Количество - Строка.БонусКоличество) > 0 Тогда
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар;
				ТекСтрока.Количество = Строка.Количество - Строка.БонусКоличество;
				ТекСтрока.ЦенаСНаценкой = Строка.ЦенаСНаценкой;
				ТекСтрока.СуммаСНаценкой = Строка.СуммаСНаценкой;
				ТекСтрока.СтавкаНДС = Строка.СтавкаНДС;
				ТекСтрока.СуммаНДС = Строка.СуммаНДС;
				ТекСтрока.ЦенаПродажная = Строка.ЦенаПродажная;
				ТекСтрока.СуммаПродажная = Строка.СуммаПродажная;
				ТекСтрока.ЦенаОтпускная = Строка.ЦенаОтпускная;
				ТекСтрока.СуммаОтпускная = Строка.СуммаОтпускная;
				ТекСтрока.Объем = Строка.Объем;
				ТекСтрока.Вес = Строка.Вес;
			КонецЕсли;
			
			Если Строка.БонусКоличество > 0 Тогда
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар;
				ТекСтрока.Количество = Строка.БонусКоличество;
				ТекСтрока.ЦенаСуммаСНаценкой = 0;
				ТекСтрока.СуммаСуммаСНаценкой = 0;
				ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				ТекСтрока.СуммаНДС = 0;
				ТекСтрока.ЦенаПродажная = 0;
				ТекСтрока.СуммаПродажная = 0;
				ТекСтрока.ЦенаОтпускная = 0;
				ТекСтрока.СуммаОтпускная = 0;
				ТекСтрока.Объем = 0;
				ТекСтрока.Вес = 0;
			КонецЕсли;
		КонецЦикла;
		
		// Тары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			Если Строка.Товар.Тара.Пустая() = Ложь Тогда
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар.Тара;
				ТекСтрока.Количество = Строка.Количество;
				ТекСтрока.ЦенаСНаценкой = 0;
				ТекСтрока.СуммаСНаценкой = 0;
				ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				ТекСтрока.СуммаНДС = 0;
				ТекСтрока.ЦенаПродажная = 0;
				ТекСтрока.СуммаПродажная = 0;
				ТекСтрока.ЦенаОтпускная = 0;
				ТекСтрока.СуммаОтпускная = 0;
				ТекСтрока.Объем = Строка.Объем;
				ТекСтрока.Вес = Строка.Вес;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.РеализацияТМЦ") И ДокументОбъект.ВидРеализации.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Нал Тогда
		Шапка.Номер = СокрЛП(ДокументОбъект.Номер);
		Шапка.Дата = ДокументОбъект.Дата;
		Шапка.Организация = ДокументОбъект.Организация;
		
		Шапка.ДанныеДокумента = "№" + СокрЛП(ДокументОбъект.Номер) + " от " + Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
		Шапка.Основание = "на основании договора";
		
		Шапка.Поставщик = ДокументОбъект.Организация;
		Шапка.ПредставлениеПоставщика = ДокументОбъект.Организация.Наименование;
		Шапка.АдресПоставщика = ДокументОбъект.Организация.Адрес;
		Шапка.ИННПоставщика = ДокументОбъект.Организация.ИНН;
		Шапка.РКПНДСПоставщика = ДокументОбъект.Организация.КодПНДС;
		
		Шапка.Покупатель = ДокументОбъект.Контрагент;
		Шапка.ПредставлениеПокупателя = ДокументОбъект.Контрагент.ПолноеНаименование;
		Шапка.АдресПокупателя = ДокументОбъект.Контрагент.Адрес;
		Шапка.ИННПокупателя = ДокументОбъект.Контрагент.ИНН;
		Шапка.РКПНДСПокупателя = ДокументОбъект.Контрагент.КодПНДС;
		
		Шапка.Руководитель = УчетнаяПолитика.Руководитель;
		Шапка.Бухгалтер = УчетнаяПолитика.Бухгалтер;
		Шапка.МОЛ = СокрЛП(ДокументОбъект.Склад.МОЛ);
		Шапка.Получатель = ДокументОбъект.Получатель;
		Шапка.Доверенность = "№" + ДокументОбъект.НомерДоверенности + " от " + ?(ЗначениеЗаполнено(ДокументОбъект.ДатаДоверенности), ДокументОбъект.ДатаДоверенности, "");
		Шапка.Автомашина = ДокументОбъект.Автомашина;
		
		Шапка.Округление = ДокументОбъект.Округление;
		
		// Товары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			ТекСтрока = Строки.Добавить();
			ТекСтрока.Товар = Строка.Товар;
			ТекСтрока.Количество = Строка.Количество - Строка.БонусКоличество;
			ТекСтрока.ЦенаСНаценкой = Строка.ЦенаСНаценкой;
			ТекСтрока.СуммаСНаценкой = Строка.СуммаСНаценкой;
			ТекСтрока.СтавкаНДС = Строка.СтавкаНДС;
			ТекСтрока.СуммаНДС = Строка.СуммаНДС;
			ТекСтрока.ЦенаПродажная = Строка.ЦенаПродажная;
			ТекСтрока.СуммаПродажная = Строка.СуммаПродажная;
			ТекСтрока.ЦенаОтпускная = Строка.ЦенаОтпускная;
			ТекСтрока.СуммаОтпускная = Строка.СуммаОтпускная;
			ТекСтрока.Объем = Строка.Объем;
			ТекСтрока.Вес = Строка.Вес;
			
			Если Строка.БонусКоличество > 0 Тогда
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар;
				ТекСтрока.Количество = Строка.БонусКоличество;
				ТекСтрока.ЦенаСНаценкой = 0;
				ТекСтрока.СуммаСНаценкой = 0;
				ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				ТекСтрока.СуммаНДС = 0;
				ТекСтрока.ЦенаПродажная = 0;
				ТекСтрока.СуммаПродажная = 0;
				ТекСтрока.ЦенаОтпускная = 0;
				ТекСтрока.СуммаОтпускная = 0;
				ТекСтрока.Объем = 0;
				ТекСтрока.Вес = 0;
			КонецЕсли;
		КонецЦикла;
		
		// Тары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			Если Строка.Товар.Тара.Пустая() = Ложь Тогда
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар.Тара;
				ТекСтрока.Количество = Строка.Количество;
				ТекСтрока.ЦенаСНаценкой = 0;
				ТекСтрока.СуммаСНаценкой = 0;
				ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				ТекСтрока.СуммаНДС = 0;
				ТекСтрока.ЦенаПродажная = 0;
				ТекСтрока.СуммаПродажная = 0;
				ТекСтрока.ЦенаОтпускная = 0;
				ТекСтрока.СуммаОтпускная = 0;
				ТекСтрока.Объем = 0;
				ТекСтрока.Вес = 0;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ПеремещениеТМЦ") Тогда
		Шапка.Номер = СокрЛП(ДокументОбъект.Номер);
		Шапка.Дата = ДокументОбъект.Дата;
		Шапка.Организация = ДокументОбъект.Организация;
		
		Шапка.ДанныеДокумента = "№" + СокрЛП(ДокументОбъект.Номер) + " от " + Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
		Шапка.Основание = "на внутреннее перемещение";
		
		Шапка.Поставщик = ДокументОбъект.Организация;
		Шапка.ПредставлениеПоставщика = ДокументОбъект.Организация.Наименование;
		Шапка.АдресПоставщика = ДокументОбъект.Организация.Адрес;
		Шапка.ИННПоставщика = ДокументОбъект.Организация.ИНН;
		Шапка.РКПНДСПоставщика = ДокументОбъект.Организация.КодПНДС;
		
		Шапка.Покупатель = ДокументОбъект.Организация;
		Шапка.ПредставлениеПокупателя = ДокументОбъект.Организация.Наименование + ", " + ДокументОбъект.СкладПолучатель.Наименование;
		Шапка.АдресПокупателя = ДокументОбъект.СкладПолучатель.Адрес;
		Шапка.ИННПокупателя = ДокументОбъект.Организация.ИНН;
		Шапка.РКПНДСПокупателя = ДокументОбъект.Организация.КодПНДС;
		
		Шапка.Руководитель = УчетнаяПолитика.Руководитель;
		Шапка.Бухгалтер = УчетнаяПолитика.Бухгалтер;
		Шапка.МОЛ = СокрЛП(ДокументОбъект.Склад.МОЛ);
		Шапка.Получатель = ДокументОбъект.Получатель;
		Шапка.Доверенность = "№" + ДокументОбъект.НомерДоверенности + " от " + ?(ЗначениеЗаполнено(ДокументОбъект.ДатаДоверенности), ДокументОбъект.ДатаДоверенности, "");
		Шапка.Автомашина = ДокументОбъект.Автомашина;
		
		Шапка.Округление = 0;
		
		// Товары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			ТекСтрока = Строки.Добавить();
			ТекСтрока.Товар = Строка.Товар;
			ТекСтрока.Количество = Строка.Количество;
			ТекСтрока.ЦенаСНаценкой = Строка.ЦенаСНаценкой;
			ТекСтрока.СуммаСНаценкой = Строка.СуммаСНаценкой;
			ТекСтрока.СтавкаНДС = Строка.СтавкаНДС;
			ТекСтрока.СуммаНДС = Строка.СуммаНДС;
			ТекСтрока.ЦенаПродажная = Строка.ЦенаПродажная;
			ТекСтрока.СуммаПродажная = Строка.СуммаПродажная;
			ТекСтрока.ЦенаОтпускная = Строка.ЦенаОтпускная;
			ТекСтрока.СуммаОтпускная = Строка.СуммаОтпускная;
			ТекСтрока.Объем = Строка.Объем;
			ТекСтрока.Вес = Строка.Вес;
		КонецЦикла;
		
		// Тары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			Если Строка.Товар.Тара.Пустая() = Ложь Тогда
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар.Тара;
				ТекСтрока.Количество = Строка.Количество;
				ТекСтрока.ЦенаСНаценкой = Строка.ЦенаСНаценкой;
				ТекСтрока.СуммаСНаценкой = Строка.СуммаСНаценкой;
				ТекСтрока.СтавкаНДС = Строка.СтавкаНДС;
				ТекСтрока.СуммаНДС = Строка.СуммаНДС;
				ТекСтрока.ЦенаПродажная = Строка.ЦенаПродажная;
				ТекСтрока.СуммаПродажная = Строка.СуммаПродажная;
				ТекСтрока.ЦенаОтпускная = Строка.ЦенаОтпускная;
				ТекСтрока.СуммаОтпускная = Строка.СуммаОтпускная;
				ТекСтрока.Объем = Строка.Объем;
				ТекСтрока.Вес = Строка.Вес;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВозвратТМЦ") Тогда
		Шапка.Номер = СокрЛП(ДокументОбъект.Номер);
		Шапка.Дата = ДокументОбъект.Дата;
		Шапка.Организация = ДокументОбъект.Организация;
		
		Шапка.ДанныеДокумента = "№" + СокрЛП(ДокументОбъект.Номер) + " от " + Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
		Шапка.Основание = "на основании договора № " + СокрЛП(ДокументОбъект.Договор.Номер) + " от " + Формат(ДокументОбъект.Договор.Дата, "ДФ=dd.MM.yyyy");
		
		Шапка.Поставщик = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, ДокументОбъект.Организация, ДокументОбъект.Контрагент);
		Шапка.ПредставлениеПоставщика = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, ДокументОбъект.Организация.Наименование, ДокументОбъект.Контрагент.Наименование);
		Шапка.АдресПоставщика = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, ДокументОбъект.Организация.Адрес, ДокументОбъект.Контрагент.Адрес);
		Шапка.ИННПоставщика = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, ДокументОбъект.Организация.ИНН, ДокументОбъект.Контрагент.ИНН);
		Шапка.РКПНДСПоставщика = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, ДокументОбъект.Организация.КодПНДС, ДокументОбъект.Контрагент.КодПНДС);
		
		Шапка.Покупатель = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Приход, ДокументОбъект.Организация, ДокументОбъект.Контрагент);
		Шапка.ПредставлениеПокупателя = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Приход, ДокументОбъект.Организация.Наименование, ДокументОбъект.Контрагент.Наименование);
		Шапка.АдресПокупателя = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Приход, ДокументОбъект.Организация.Адрес, ДокументОбъект.Контрагент.Адрес);
		Шапка.ИННПокупателя = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Приход, ДокументОбъект.Организация.ИНН, ДокументОбъект.Контрагент.ИНН);
		Шапка.РКПНДСПокупателя = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Приход, ДокументОбъект.Организация.КодПНДС, ДокументОбъект.Контрагент.КодПНДС);
		
		Шапка.Руководитель = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, УчетнаяПолитика.Руководитель, ДокументОбъект.Контрагент.Руководитель);
		Шапка.Бухгалтер = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, УчетнаяПолитика.Бухгалтер, ДокументОбъект.Контрагент.Бухгалтер);
		Шапка.МОЛ = ?(ДокументОбъект.ТипВозврата = Перечисления.ТипыВозврата.Расход, СокрЛП(ДокументОбъект.Склад.МОЛ), "");
		Шапка.Получатель = "";
		Шапка.Доверенность = "";
		Шапка.Автомашина = ДокументОбъект.Автомашина;
		
		Шапка.Округление = 0;
		
		// Товары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			ТекСтрока = Строки.Добавить();
			ТекСтрока.Товар = Строка.Товар;
			ТекСтрока.Количество = Строка.Количество;
			ТекСтрока.ЦенаСНаценкой = АрифметическиеФункции.ВычитатьНаценку(Строка.ЦенаСНаценкой, ИсторияРеквизитов.Получить(Строка.Товар, "СтавкаНДС", ДокументОбъект.Дата, ПредопределенноеЗначение("Справочник.СтавкиНДС.БезНДС")).Ставка);
			ТекСтрока.СуммаСНаценкой = АрифметическиеФункции.ВычитатьНаценку(Строка.Сумма, ИсторияРеквизитов.Получить(Строка.Товар, "СтавкаНДС", ДокументОбъект.Дата, ПредопределенноеЗначение("Справочник.СтавкиНДС.БезНДС")).Ставка);
			ТекСтрока.СтавкаНДС = ИсторияРеквизитов.Получить(Строка.Товар, "СтавкаНДС", ДокументОбъект.Дата, ПредопределенноеЗначение("Справочник.СтавкиНДС.БезНДС"));
			ТекСтрока.СуммаНДС = АрифметическиеФункции.ВыделитьНаценку(Строка.Сумма, ИсторияРеквизитов.Получить(Строка.Товар, "СтавкаНДС", ДокументОбъект.Дата, ПредопределенноеЗначение("Справочник.СтавкиНДС.БезНДС")).Ставка);
			ТекСтрока.ЦенаПродажная = Строка.Цена;
			ТекСтрока.СуммаПродажная = Строка.Сумма;
			ТекСтрока.ЦенаОтпускная = Строка.Цена;
			ТекСтрока.СуммаОтпускная = Строка.Сумма;
			ТекСтрока.Объем = 0;
			ТекСтрока.Вес = 0;
		КонецЦикла;
		
		// Тары
		Для Каждого Строка ИЗ ДокументОбъект.Товары Цикл
			Если Строка.Товар.Тара.Пустая() = Ложь Тогда
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар.Тара;
				ТекСтрока.Количество = Строка.Количество;
				ТекСтрока.ЦенаСНаценкой = Строка.Цена;
				ТекСтрока.СуммаСНаценкой = Строка.Сумма;
				ТекСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
				ТекСтрока.СуммаНДС = 0;
				ТекСтрока.ЦенаПродажная = 0;
				ТекСтрока.СуммаПродажная = 0;
				ТекСтрока.ЦенаОтпускная = 0;
				ТекСтрока.СуммаОтпускная = 0;
				ТекСтрока.Объем = Строка.Объем;
				ТекСтрока.Вес = Строка.Вес;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтгрузкаЗаказов") Тогда
		Шапка.Номер = СокрЛП(ДокументОбъект.Номер);
		Шапка.Дата = ДокументОбъект.Дата;
		Шапка.Организация = ДокументОбъект.Организация;
		
		Шапка.ДанныеДокумента = "№" + СокрЛП(ДокументОбъект.Номер) + " от " + Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
		Шапка.Основание = "на основании договора № " + СокрЛП(ДокументОбъект.Договор.Номер) + " от " + Формат(ДокументОбъект.Договор.Дата, "ДФ=dd.MM.yyyy");
		
		Шапка.Поставщик = ДокументОбъект.Организация;
		Шапка.ПредставлениеПоставщика = ДокументОбъект.Организация.Наименование;
		Шапка.АдресПоставщика = ДокументОбъект.Организация.Адрес;
		Шапка.ИННПоставщика = ДокументОбъект.Организация.ИНН;
		Шапка.РКПНДСПоставщика = ДокументОбъект.Организация.КодПНДС;
		
		Шапка.Покупатель = ДокументОбъект.Контрагент;
		Шапка.ПредставлениеПокупателя = ДокументОбъект.Контрагент.Наименование;
		Шапка.АдресПокупателя = ДокументОбъект.Контрагент.Адрес;
		Шапка.ИННПокупателя = ДокументОбъект.Контрагент.ИНН;
		Шапка.РКПНДСПокупателя = ДокументОбъект.Контрагент.КодПНДС;
		
		Шапка.Руководитель = УчетнаяПолитика.Руководитель;
		Шапка.Бухгалтер = УчетнаяПолитика.Бухгалтер;
		Шапка.МОЛ = "";
		Шапка.Получатель = "";
		Шапка.Доверенность = "";
		Шапка.Автомашина = ДокументОбъект.Автомашина;
		
		Шапка.Округление = 0;
		
		// Товары
		Для Каждого Заказ Из ДокументОбъект.Накладные Цикл
			Для Каждого Строка ИЗ Заказ.Накладная.Товары Цикл
				ТекСтрока = Строки.Добавить();
				ТекСтрока.Товар = Строка.Товар;
				ТекСтрока.Количество = Строка.Количество;
				ТекСтрока.ЦенаСНаценкой = Строка.ЦенаСНаценкой;
				ТекСтрока.СуммаСНаценкой = Строка.СуммаСНаценкой;
				ТекСтрока.СтавкаНДС = Строка.СтавкаНДС;
				ТекСтрока.СуммаНДС = Строка.СуммаНДС;
				ТекСтрока.ЦенаПродажная = Строка.ЦенаПродажная;
				ТекСтрока.СуммаПродажная = Строка.СуммаПродажная;
				ТекСтрока.ЦенаОтпускная = Строка.ЦенаОтпускная;
				ТекСтрока.СуммаОтпускная = Строка.СуммаОтпускная;
				ТекСтрока.Объем = Строка.Объем;
				ТекСтрока.Вес = Строка.Вес;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	// Подготовка данных
	Строки.Свернуть("Товар,ЦенаСНаценкой,СтавкаНДС,ЦенаПродажная,ЦенаОтпускная", "Количество,БонусКоличество,БонусСумма,СуммаСНаценкой,СуммаНДС,СуммаПродажная,СуммаОтпускная,Объем,Вес");

	// Итоги таблиц
	Шапка.СуммаСНаценкой = Строки.Итог("СуммаСНаценкой");
	Шапка.СуммаНДС = Строки.Итог("СуммаНДС");
	Шапка.СуммаПродажная = Строки.Итог("СуммаПродажная");
	Шапка.СуммаОтпускная = Строки.Итог("СуммаОтпускная");
	
	// Вывод шапки
	ОбластьШапка.Параметры.Заполнить(Шапка);
	ОбластьШапка.Параметры.ДатаРаспечатки = ТекущаяДата();
	ТабДок.Вывести(ОбластьШапка);
	
	// Вывод заголовок
	ТабДок.Вывести(ОбластьЗаголовок);
	
	// Товар
	НомерСтроки = 0;
	Для Каждого Строка Из Строки Цикл
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.Наименование = Строка.Товар.Наименование;
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Товар.ЕдиницаИзмерения.Сокращение;
		ОбластьСтрока.Параметры.Количество = Строка.Количество;
		
		ОбластьСтрока.Параметры.ЦенаСНаценкой = Строка.ЦенаСНаценкой;
		ОбластьСтрока.Параметры.СуммаСНаценкой = Строка.СуммаСНаценкой;
		ОбластьСтрока.Параметры.СтавкаНДС = Строка.СтавкаНДС;
		ОбластьСтрока.Параметры.СуммаНДС = Строка.СуммаНДС;
		ОбластьСтрока.Параметры.ЦенаОтпускная = Строка.ЦенаОтпускная;
		ОбластьСтрока.Параметры.СуммаОтпускная = Строка.СуммаОтпускная;
		
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	// Итоги товара
	ОбластьИтого.Параметры.Название = "Всего товара:";
	ОбластьИтого.Параметры.Количество = Строки.Итог("Количество");
	ОбластьИтого.Параметры.СуммаСНаценкой = Строки.Итог("СуммаСНаценкой");
	ОбластьИтого.Параметры.СуммаНДС = Строки.Итог("СуммаНДС");
	ОбластьИтого.Параметры.Сумма = Шапка.СуммаПродажная;
	ТабДок.Вывести(ОбластьИтого);
	
	// Итоги скидка
	СуммаСкидка = Шапка.СуммаПродажная - Шапка.СуммаОтпускная;
	Если СуммаСкидка <> 0 Тогда
		ОбластьИтого.Параметры.Название = "Скидка:";
		ОбластьИтого.Параметры.СуммаСНаценкой = -АрифметическиеФункции.ВычитатьНаценку(СуммаСкидка, УчетнаяПолитика.СтавкаНДС.Ставка);
		ОбластьИтого.Параметры.СуммаНДС = -АрифметическиеФункции.ВыделитьНаценку(СуммаСкидка, УчетнаяПолитика.СтавкаНДС.Ставка);
		ОбластьИтого.Параметры.Сумма = -СуммаСкидка;
		ТабДок.Вывести(ОбластьИтого);
	КонецЕсли;
	
	// Итоги округление
	Если Шапка.Округление <> 0 Тогда
		ОбластьИтого.Параметры.Название = "Округление:";
		ОбластьИтого.Параметры.СуммаСНаценкой = АрифметическиеФункции.ВычитатьНаценку(Шапка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
		ОбластьИтого.Параметры.СуммаНДС = АрифметическиеФункции.ВыделитьНаценку(Шапка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
		ОбластьИтого.Параметры.Сумма = Шапка.Округление;
		ТабДок.Вывести(ОбластьИтого);
	КонецЕсли;
	
	// Итоги к оплате
	ОбластьИтого.Параметры.Название = "Всего к оплате:";
	ОбластьИтого.Параметры.СуммаСНаценкой = АрифметическиеФункции.ВычитатьНаценку(Строки.Итог("СуммаОтпускная") + Шапка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
	ОбластьИтого.Параметры.СуммаНДС = АрифметическиеФункции.ВыделитьНаценку(Строки.Итог("СуммаОтпускная") + Шапка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
	ОбластьИтого.Параметры.Сумма = Строки.Итог("СуммаОтпускная") + Шапка.Округление;
	ТабДок.Вывести(ОбластьИтого);
	
	// Итого с прописью
	ОбластьИтогоПрописью.Параметры.СуммаПрописью = ЧислоПрописью(Шапка.СуммаОтпускная + Шапка.Округление, "Л=ru_RU");
	ТабДок.Вывести(ОбластьИтогоПрописью);
	
	// Подвал
	ОбластьПодвал.Параметры.Заполнить(Шапка);
	ТабДок.Вывести(ОбластьПодвал);
	
	// Разрыв страницы
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Настройки
	ТабДок.ЭкземпляровНаСтранице = Константы.Реализация_КоличествоЭкземпляровНаОднойСтранице.Получить();
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
КонецПроцедуры

Процедура СформироватьСчетФактуруДляАгента(Знач ДокументОбъект, ТабДок) Экспорт
	Макет = ПолучитьОбщийМакет("НакладнаяРозничная");
	
	// Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ДанныеДокумента = "СЧЕТ-ФАКТУРА-НАКЛАДНАЯ № " + СокрЛП(ДокументОбъект.Номер) + " от " + Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy") + "";
	ОбластьЗаголовок.Параметры.Агент = ДокументОбъект.Агент.ПолноеНаименование;
	ОбластьЗаголовок.Параметры.Контрагент = ДокументОбъект.Контрагент.Наименование;
	ОбластьЗаголовок.Параметры.Ориентир = ДокументОбъект.Контрагент.Ориентир + ?(ПустаяСтрока(ДокументОбъект.Контрагент.Телефон), "", " (" + СокрЛП(ДокументОбъект.Контрагент.Телефон) + ")");
	ОбластьЗаголовок.Параметры.Сальдо = РаботаСКонтрагентами.Сальдо(ДокументОбъект.Контрагент, Перечисления.ТипыВзаиморасчета.Нал, ДокументОбъект.Дата);
	ОбластьЗаголовок.Параметры.ДатаРаспечатки = ТекущаяДата();
	ТабДок.Вывести(ОбластьЗаголовок);
	
	НомерСтроки = 0;
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	// Товары
	Для Каждого ТекСтрокаТовары Из ДокументОбъект.Товары Цикл
		Если (ТекСтрокаТовары.Количество - ТекСтрокаТовары.БонусКоличество) > 0 Тогда
			НомерСтроки = НомерСтроки + 1;
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
			ОбластьСтрока.Параметры.Наименование = ТекСтрокаТовары.Товар.Наименование;
			ОбластьСтрока.Параметры.ЕдиницаИзмерения = ТекСтрокаТовары.Товар.ЕдиницаИзмерения.Сокращение;
			ОбластьСтрока.Параметры.Количество = ТекСтрокаТовары.Количество - ТекСтрокаТовары.БонусКоличество;
			ОбластьСтрока.Параметры.Цена = ТекСтрокаТовары.СуммаОтпускная / ТекСтрокаТовары.Количество;
			ОбластьСтрока.Параметры.Сумма = ТекСтрокаТовары.СуммаОтпускная;
			ТабДок.Вывести(ОбластьСтрока);
		КонецЕсли;
		
		Если ТекСтрокаТовары.БонусКоличество > 0 Тогда
			НомерСтроки = НомерСтроки + 1;
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
			ОбластьСтрока.Параметры.Наименование = ТекСтрокаТовары.Товар.Наименование;
			ОбластьСтрока.Параметры.ЕдиницаИзмерения = ТекСтрокаТовары.Товар.ЕдиницаИзмерения.Сокращение;
			ОбластьСтрока.Параметры.Количество = ТекСтрокаТовары.БонусКоличество;
			ОбластьСтрока.Параметры.Цена = 0;
			ОбластьСтрока.Параметры.Сумма = 0;
			ТабДок.Вывести(ОбластьСтрока);
		КонецЕсли;
	КонецЦикла;

	// Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Количество = ДокументОбъект.Товары.Итог("Количество");
	ОбластьПодвал.Параметры.Скидка = ДокументОбъект.Товары.Итог("СуммаПродажная") - ДокументОбъект.Товары.Итог("СуммаОтпускная") + ДокументОбъект.Товары.Итог("БонусСумма");
	ОбластьПодвал.Параметры.Округление = ДокументОбъект.Округление;
	ОбластьПодвал.Параметры.Сумма = ДокументОбъект.Товары.Итог("СуммаОтпускная") - ДокументОбъект.Товары.Итог("БонусСумма") + ДокументОбъект.Округление;
	ОбластьПодвал.Параметры.ИтогоКОплатеСПрописью = ЧислоПрописью(ДокументОбъект.Товары.Итог("СуммаОтпускная") - ДокументОбъект.Товары.Итог("БонусСумма") + ДокументОбъект.Округление, "Л=ru_RU");
	ОбластьПодвал.Параметры.Вес = ДокументОбъект.Товары.Итог("Вес");
	ТабДок.Вывести(ОбластьПодвал);
	
	// Разрыв страницы
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Настройки
	ТабДок.ЭкземпляровНаСтранице = Константы.Реализация_КоличествоЭкземпляровНаОднойСтранице.Получить();
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
КонецПроцедуры

Процедура СформироватьАктСверкиДляТары(Знач ДокументОбъект, ТабДок) Экспорт
	Макет = ПолучитьОбщийМакет("АктСверкиПоТаре");
	
	// Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ДанныеДокумента = "Акт-сверки по таре по контрагенту " + ДокументОбъект.Контрагент;
	ОбластьЗаголовок.Параметры.Дата = Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	НомерСтроки = 0;
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ОписаниеЧисла = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0));
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Тара");
	ТЗ.Колонки.Добавить("КоличествоНачальныйОстаток", ОписаниеЧисла);
	ТЗ.Колонки.Добавить("Количество", ОписаниеЧисла);
	ТЗ.Колонки.Добавить("КоличествоКонечныйОстаток", ОписаниеЧисла);
	
	// Запрос
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СальдоПоТаре.Товар КАК Тара,
		|	СУММА(СальдоПоТаре.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
		|	СУММА(СальдоПоТаре.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.СальдоПоТаре.ОстаткиИОбороты(&Дата, &Дата, День, ДвиженияИГраницыПериода, Контрагент = &Контрагент) КАК СальдоПоТаре
		|ГДЕ
		|	ИСТИНА
		|СГРУППИРОВАТЬ ПО
		|	СальдоПоТаре.Товар
		|УПОРЯДОЧИТЬ ПО
		|	СальдоПоТаре.Товар.Наименование"
	);

	Запрос.УстановитьПараметр("Дата", ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Контрагент", ДокументОбъект.Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТара = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТара.Следующий() Цикл
		Строка = ТЗ.Добавить();
		Строка.Тара = ВыборкаТара.Тара;
		Строка.КоличествоНачальныйОстаток = -ВыборкаТара.КоличествоНачальныйОстаток;
		Строка.КоличествоКонечныйОстаток = -ВыборкаТара.КоличествоКонечныйОстаток;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ДокументОбъект.Товары Цикл
		Если ТекСтрока.Товар.Тара.Пустая() = Ложь Тогда
			Строка = ТЗ.Добавить();
			Строка.Тара = ТекСтрока.Товар.Тара;
			Строка.Количество = ТекСтрока.Количество;
		КонецЕсли;
	КонецЦикла;
	
	ТЗ.Свернуть("Тара", "КоличествоНачальныйОстаток,Количество,КоличествоКонечныйОстаток");
	
	Для Каждого Строка Из ТЗ Цикл
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.Наименование = Строка.Тара.Наименование;
		ОбластьСтрока.Параметры.Количество = ?(Строка.Количество > 0, Строка.Количество, "0");
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Тара.ЕдиницаИзмерения.Сокращение;
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;

	// Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОбластьПодвал);
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.КоличествоЭкземпляров = Константы.Реализация_КоличествоЭкземпляровВсего.Получить();
	ТабДок.ЭкземпляровНаСтранице = Константы.Реализация_КоличествоЭкземпляровНаОднойСтранице.Получить();
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСправа = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСлева = 2;
	
	Если ДокументОбъект.ВидРеализации.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Безнал Тогда
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Иначе
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьТТНПоТаре(Знач ДокументОбъект, ТабДок) Экспорт
	УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(ДокументОбъект.Дата, ДокументОбъект.Организация);
	
	Макет = ПолучитьОбщийМакет("ТТНПоТаре");
	
	// Заголовок
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	Заголовок.Параметры.Дата = Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
	Заголовок.Параметры.Номер = ДокументОбъект.Номер;
	Заголовок.Параметры.Автомашина = ДокументОбъект.Автомашина;
	Заголовок.Параметры.ОрганизацияНаименование = ДокументОбъект.Организация.Наименование;
	Заголовок.Параметры.Водитель = ДокументОбъект.Водитель;
	Заголовок.Параметры.КонтрагентНаименование = ДокументОбъект.Контрагент.Наименование;
	Заголовок.Параметры.СкладАдрес = ДокументОбъект.Склад.Адрес;
	Заголовок.Параметры.КонтрагентАдрес = ДокументОбъект.Контрагент.Адрес;
	Заголовок.Параметры.Перевозчик = ДокументОбъект.Перевозчик;
	ТабДок.Вывести(Заголовок);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для Каждого Строка Из ДокументОбъект.Товары Цикл
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.КодПоставщика = "";
		ОбластьСтрока.Параметры.Наименование = Строка.Товар.Наименование + ?(Строка.БУ, " (б/у)", "");
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Товар.ЕдиницаИзмерения;
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	Для Каждого Строка Из ДокументОбъект.Тары Цикл
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.КодПоставщика = "";
		ОбластьСтрока.Параметры.Наименование = Строка.Товар.Наименование + ?(Строка.БУ, " (б/у)", "");
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Товар.ЕдиницаИзмерения;
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;

	// Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Руководитель = УчетнаяПолитика.Руководитель;
	ОбластьПодвал.Параметры.Водитель = ДокументОбъект.Водитель;
	ТабДок.Вывести(ОбластьПодвал);
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСправа = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
КонецПроцедуры

Процедура СформироватьАктПППоТаре(Знач ДокументОбъект, ТабДок) Экспорт
	УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(ДокументОбъект.Дата, ДокументОбъект.Организация);
	
	Макет = ПолучитьОбщийМакет("АктПППоТаре");
	
	// Заголовок
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	Заголовок.Параметры.Номер = "№" + ДокументОбъект.Номер;
	Заголовок.Параметры.Дата = "от " + Формат(ДокументОбъект.Дата, "ДФ=dd.MM.yyyy");
	Заголовок.Параметры.Основание = "согласно договору №" + ДокументОбъект.Контрагент.ОсновнойДоговор.Номер + " от " + Формат(ДокументОбъект.Контрагент.ОсновнойДоговор.Дата, "ДФ=dd.MM.yyyy");
	
	Заголовок.Параметры.ОрганизацияНаименование = ДокументОбъект.Организация.Наименование;
	Заголовок.Параметры.ОрганизацияАдрес = ДокументОбъект.Организация.Адрес;
	Заголовок.Параметры.ОрганизацияТелефон = ДокументОбъект.Организация.Телефон;
	Заголовок.Параметры.ОрганизацияБанковскийСчетНомер = ДокументОбъект.Организация.ОсновнойБанковскийСчет.Номер;
	Заголовок.Параметры.ОрганизацияБанковскийСчетБанкНаименование = ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.Наименование;
	Заголовок.Параметры.ОрганизацияБанковскийСчетБанкАдрес = ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.Адрес;
	Заголовок.Параметры.ОрганизацияБанковскийСчетБанкКод = ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.Код;
	Заголовок.Параметры.ОрганизацияИНН = ДокументОбъект.Организация.ИНН;
	
	Заголовок.Параметры.КонтрагентНаименование = ДокументОбъект.Контрагент.Наименование;
	Заголовок.Параметры.КонтрагентАдрес = ДокументОбъект.Контрагент.Адрес;
	Заголовок.Параметры.КонтрагентТелефон = ДокументОбъект.Контрагент.Телефон;
	Заголовок.Параметры.КонтрагентБанковскийСчетНомер = ДокументОбъект.Контрагент.ОсновнойБанковскийСчет.Номер;
	Заголовок.Параметры.КонтрагентБанковскийСчетБанкНаименование = ДокументОбъект.Контрагент.ОсновнойБанковскийСчет.Банк.Наименование;
	Заголовок.Параметры.КонтрагентБанковскийСчетБанкАдрес = ДокументОбъект.Контрагент.ОсновнойБанковскийСчет.Банк.Адрес;
	Заголовок.Параметры.КонтрагентБанковскийСчетБанкКод = ДокументОбъект.Контрагент.ОсновнойБанковскийСчет.Банк.Код;
	Заголовок.Параметры.КонтрагентИНН = ДокументОбъект.Контрагент.ИНН;
	
	ТабДок.Вывести(Заголовок);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для Каждого Строка Из ДокументОбъект.Товары Цикл
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.КодПоставщика = "";
		ОбластьСтрока.Параметры.Наименование = Строка.Товар.Наименование + ?(Строка.БУ, " (б/у)", "");
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Товар.ЕдиницаИзмерения;
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	Для Каждого Строка Из ДокументОбъект.Тары Цикл
		ОбластьСтрока.Параметры.Заполнить(Строка);
		ОбластьСтрока.Параметры.КодПоставщика = "";
		ОбластьСтрока.Параметры.Наименование = Строка.Товар.Наименование + ?(Строка.БУ, " (б/у)", "");
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = Строка.Товар.ЕдиницаИзмерения;
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;

	// Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.Руководитель = УчетнаяПолитика.Руководитель;
	ОбластьПодвал.Параметры.ГлавныйБухгалтер = УчетнаяПолитика.Бухгалтер;
	ОбластьПодвал.Параметры.Количество = ДокументОбъект.Тары.Итог("Количество");
	ТабДок.Вывести(ОбластьПодвал);
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСправа = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
КонецПроцедуры

Процедура СформироватьПриемныйАкт(Знач ДокументОбъект, ТабДок) Экспорт
	УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(ДокументОбъект.Дата, ДокументОбъект.Организация);
	
	Макет = ПолучитьОбщийМакет("ПриемныйАкт");
	
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Заполнить(ДокументОбъект);
	
	Шапка.Параметры.Дата = Формат(ДокументОбъект.Дата, "ДЛФ=DD");
	Шапка.Параметры.ПредставлениеОрганизации = ДокументОбъект.Организация.Наименование;
	Шапка.Параметры.Руководитель = УчетнаяПолитика.Руководитель;
	Шапка.Параметры.Поставщик = СокрЛП(ДокументОбъект.Контрагент.Наименование) + ", ИНН: " + СокрЛП(ДокументОбъект.Контрагент.ИНН) + ", Код НДС: " + СокрЛП(ДокументОбъект.Контрагент.КодПНДС);
	Шапка.Параметры.Автомашина = ДокументОбъект.Автомашина;
	Шапка.Параметры.Экспедитор = ДокументОбъект.Экспедитор;
	Шапка.Параметры.Доверенность = "Доверенность №" + ДокументОбъект.НомерДоверенности + " от " + ?(ЗначениеЗаполнено(ДокументОбъект.ДатаДоверенности), ДокументОбъект.ДатаДоверенности, "");
	Шапка.Параметры.Склад = СокрЛП(ДокументОбъект.Склад.Наименование) + ", " + СокрЛП(ДокументОбъект.Склад.Адрес);
	Шапка.Параметры.ДокументПоставщика = "Счет-фактура №" + ДокументОбъект.НомерВходящегоДокумента + " от " + ?(ЗначениеЗаполнено(ДокументОбъект.ДатаВходящегоДокумента), ДокументОбъект.ДатаВходящегоДокумента, "");
	ТабДок.Вывести(Шапка);
	
	// Заголовок
	Заголовок = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Заголовок);
	
	НомерСтроки = 0;
	
	// Товары
	Если ДокументОбъект.Товары.Количество() > 0 Тогда
		ОбластьТовар = Макет.ПолучитьОбласть("Товар");
		Для Каждого ТекСтрокаТовары Из ДокументОбъект.Товары Цикл
			Если ТекСтрокаТовары.Количество > 0 Тогда
				НомерСтроки = НомерСтроки + 1;
				ОбластьТовар.Параметры.НомерСтроки = НомерСтроки;
				ОбластьТовар.Параметры.Наименование = ТекСтрокаТовары.Товар.Наименование;
				ОбластьТовар.Параметры.ЕдиницаИзмерения = ТекСтрокаТовары.Товар.ЕдиницаИзмерения;
				ОбластьТовар.Параметры.Количество = ТекСтрокаТовары.Количество;
				ОбластьТовар.Параметры.СтавкаНДС = ТекСтрокаТовары.СтавкаНДС;
				ОбластьТовар.Параметры.Цена = ТекСтрокаТовары.ЦенаБазовая;
				ОбластьТовар.Параметры.Сумма = ТекСтрокаТовары.СуммаБазовая;
				ОбластьТовар.Параметры.СуммаНДС = ТекСтрокаТовары.СуммаНДС;
				ОбластьТовар.Параметры.ЦенаПриходная = ТекСтрокаТовары.ЦенаПриходная;
				ОбластьТовар.Параметры.СуммаПриходная = ТекСтрокаТовары.СуммаПриходная;
				ТабДок.Вывести(ОбластьТовар);
			КонецЕсли;
		КонецЦикла;
		
		// Итоги товара
		ИтогоТовар = Макет.ПолучитьОбласть("Итого");
		ИтогоТовар.Параметры.Название = "Всего товара:";
		ИтогоТовар.Параметры.Количество = ДокументОбъект.Товары.Итог("Количество");
		ИтогоТовар.Параметры.Сумма = Формат(ДокументОбъект.Товары.Итог("СуммаБазовая"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
		ИтогоТовар.Параметры.СуммаНДС = Формат(ДокументОбъект.Товары.Итог("СуммаНДС"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
		ИтогоТовар.Параметры.СуммаПриходная = Формат(ДокументОбъект.Товары.Итог("СуммаБазовая") + ДокументОбъект.Товары.Итог("СуммаНДС"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
		ТабДок.Вывести(ИтогоТовар);
	КонецЕсли;
	
	//// Тары
	//Если ДокументОбъект.Товары.Количество() > 0 Тогда
	//	ОбластьТара = Макет.ПолучитьОбласть("Тара");
	//	Для Каждого ТекСтрокаТары Из ДокументОбъект.Товары Цикл
	//		Если ТекСтрокаТары.Сумма > 0 Тогда
	//			НомерСтроки = НомерСтроки + 1;
	//			ОбластьТара.Параметры.НомерСтроки = НомерСтроки;
	//			ОбластьТара.Параметры.Наименование = ТекСтрокаТары.Товар.Тара.Наименование;
	//			ОбластьТара.Параметры.ЕдиницаИзмерения = ТекСтрокаТары.Товар.Тара.ЕдиницаИзмерения;
	//			ОбластьТара.Параметры.Количество = ТекСтрокаТары.Количество;
	//			ОбластьТара.Параметры.Цена = 0;
	//			ОбластьТара.Параметры.Сумма = 0;
	//			ОбластьТара.Параметры.ЦенаПриходная = 0;
	//			ОбластьТара.Параметры.СуммаПриходная = 0;
	//			ТабДок.Вывести(ОбластьТара);
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	// Итоги тары
	//	ИтогоТара = Макет.ПолучитьОбласть("Итого");
	//	ИтогоТара.Параметры.Название = "Всего Тары:";
	//	ИтогоТара.Параметры.Количество = ДокументОбъект.Тары.Итог("Количество");
	//	ИтогоТара.Параметры.Сумма = Формат(ДокументОбъект.Тары.Итог("Сумма"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
	//	ИтогоТара.Параметры.СуммаНДС = Формат(ДокументОбъект.Тары.Итог("СуммаНДС"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
	//	ИтогоТара.Параметры.СуммаПриходная = Формат(ДокументОбъект.Тары.Итог("Сумма") + ДокументОбъект.Тары.Итог("СуммаНДС"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
	//	ТабДок.Вывести(ИтогоТара);
	//КонецЕсли;
	
	// Итоги
	ОбластьИтогоКОплате = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоКОплате.Параметры.Название = "Всего к оплате:";
	ОбластьИтогоКОплате.Параметры.Количество = "";
	ОбластьИтогоКОплате.Параметры.Сумма = Формат(ДокументОбъект.Товары.Итог("СуммаБазовая"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
	ОбластьИтогоКОплате.Параметры.СуммаНДС = Формат(ДокументОбъект.Товары.Итог("СуммаНДС"), "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
	ОбластьИтогоКОплате.Параметры.СуммаПриходная = Формат(ДокументОбъект.Сумма, "ЧДЦ=2; ЧРД=.; ЧРГ=' '");
	ТабДок.Вывести(ОбластьИтогоКОплате);
	
	// Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОбластьПодвал);
	
	// Показать
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
КонецПроцедуры

Процедура СформироватьЭкспорт(Знач ДокументСсылка, ТабДок) Экспорт
	УчетнаяПолитика = УчетныеПолитики.ПолучитьНаДату(ДокументСсылка.Дата, ДокументСсылка.Организация);
	
	// Настройка макета
	Макет = ПолучитьОбщийМакет("Экспорт");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьДопРасходы = Макет.ПолучитьОбласть("ДопРасходы");
	
	// Шапка
	ТабДок.Вывести(ОбластьЗаголовок);
	
	Для Каждого Строка Из ДокументСсылка.Товары Цикл
		ОбластьСтрока.Параметры.НомерСтроки = Строка.НомерСтроки;
		ОбластьСтрока.Параметры.Количество = Строка.Количество;
		
		Если ТипЗнч(ДокументСсылка.Ссылка) = Тип("ДокументСсылка.РеализацияТМЦ") И ДокументСсылка.ВидРеализации.ТипВзаиморасчета = Перечисления.ТипыВзаиморасчета.Безнал Тогда
			ОбластьСтрока.Параметры.Товар = Строка.Товар.Наименование;
			ОбластьСтрока.Параметры.КодИКПУ = СокрЛП(?(ЗначениеЗаполнено(Строка.Товар.КодИКПУ), Строка.Товар.КодИКПУ, Строка.Товар.ВидТовара.КодИКПУ));
			ОбластьСтрока.Параметры.ШтрихКод = СокрЛП(Строка.Товар.ШтрихКод);
			ОбластьСтрока.Параметры.ЕдиницаИзмерения = СокрЛП(Строка.Товар.ЕдиницаИзмерения.Код);
			ОбластьСтрока.Параметры.ЦенаБазовая = Строка.ЦенаБазовая;
			ОбластьСтрока.Параметры.Наценка = АрифметическиеФункции.ОпределитьНаценку(Строка.ЦенаСНаценкой, Строка.ЦенаБазовая);
			ОбластьСтрока.Параметры.СтавкаНДС = Строка.СтавкаНДС.Ставка;
			
			ОбластьСтрока.Параметры.ЦенаБезНДС = Строка.ЦенаСНаценкой;
			ОбластьСтрока.Параметры.СуммаБезНДС = Строка.СуммаСНАценкой;
			ОбластьСтрока.Параметры.СуммаНДС = Строка.СуммаНДС;
			ОбластьСтрока.Параметры.СуммаПродажная = Строка.СуммаПродажная;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;

	//Если ДокументСсылка.Округление > 0 Тогда
	//	ОбластьДопРасходы.Параметры.НомерСтроки = Строка.НомерСтроки + 1;
	//	ОбластьДопРасходы.Параметры.КодИКПУ = Константы.ИдентификаторНакладныхРасходов.Получить();
	//	ОбластьДопРасходы.Параметры.ЦенаБазовая = АрифметическиеФункции.ВычитатьНаценку(ДокументСсылка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
	//	ОбластьДопРасходы.Параметры.ЦенаБезНДС = АрифметическиеФункции.ВычитатьНаценку(ДокументСсылка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
	//	ОбластьДопРасходы.Параметры.СуммаБезНДС = АрифметическиеФункции.ВычитатьНаценку(ДокументСсылка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
	//	ОбластьДопРасходы.Параметры.СтавкаНДС = УчетнаяПолитика.СтавкаНДС.Ставка;
	//	ОбластьДопРасходы.Параметры.СуммаНДС = АрифметическиеФункции.ВыделитьНаценку(ДокументСсылка.Округление, УчетнаяПолитика.СтавкаНДС.Ставка);
	//	ОбластьДопРасходы.Параметры.СуммаПродажная = ДокументСсылка.Округление;
	//	ТабДок.Вывести(ОбластьДопРасходы);
	//КонецЕсли;
	
	// Вывод заполненной формы
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.АвтоМасштаб = Истина;
КонецПроцедуры

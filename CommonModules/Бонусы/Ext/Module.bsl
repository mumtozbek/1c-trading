
&НаСервере
Процедура Пересчитать(Объект, ЗНАЧ ИдентификаторТекущейСтроки = Неопределено) Экспорт
	ТаблицаТоваров = Объект.Товары.Выгрузить();
	
	// Получаем текущую строку
	Если ИдентификаторТекущейСтроки <> Неопределено Тогда
		Строка = Объект.Товары.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	ИначеЕсли Объект.Товары.Количество() > 0 Тогда
		Строка = Объект.Товары.Получить(0);
	КонецЕсли;
	
	// Создаем переменных
	НакопленноеБонусноеКоличество = 0;
	НакопленноеУсловноеКоличество = 0;
	
	ИсключаемыеБонусныеТовары = Новый ТаблицаЗначений;
	ИсключаемыеБонусныеТовары.Колонки.Добавить("Акция");
	ИсключаемыеБонусныеТовары.Колонки.Добавить("Товар");
	
	ИсключаемыеТриггерныеТовары = Новый ТаблицаЗначений;
	ИсключаемыеТриггерныеТовары.Колонки.Добавить("Акция");
	ИсключаемыеТриггерныеТовары.Колонки.Добавить("Товар");
	
	// Создаем запрос к справочнику акций
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Акции.Ссылка КАК Акция
		|ИЗ
		|	Справочник.Акции КАК Акции
		|ГДЕ
		|	Акции.Активный
		|	И Акции.ДатаНачала <= &Дата
		|	И Акции.ДатаОкончания >= &Дата
		|	И (Акции.Каналы.Канал В ИЕРАРХИИ (&Канал) ИЛИ Акции.Каналы.Канал = ЗНАЧЕНИЕ(Справочник.Каналы.Все))
		|	И Акции.Триггеры.Товар В ИЕРАРХИИ (&Триггеры)
		|	И Акции.Бонусы.Товар В ИЕРАРХИИ (&Бонусы)
		|"
	);
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Канал", Объект.Контрагент.Канал);
	Запрос.УстановитьПараметр("Триггеры", СписокТриггерныхТоваров(ТаблицаТоваров));
	Запрос.УстановитьПараметр("Бонусы", ТаблицаТоваров.ВыгрузитьКолонку("Товар"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НакопленноеУсловноеКоличество = НакопленноеУсловноеКоличество + КоличествоВыбранныхТоваров(ТаблицаТоваров, Выборка.Акция.Триггеры.ВыгрузитьКолонку("Товар"));
		
		// Калькуляция доступных бонусов
		Для Каждого Условие Из Выборка.Акция.Условия Цикл
			Если Условие.УсловноеКоличество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если НакопленноеУсловноеКоличество >= Условие.УсловноеКоличество Тогда
				Если Выборка.Акция.Триггеры.Найти(Строка.Товар, "Товар") <> Неопределено И Выборка.Акция.Бонусы.Найти(Строка.Товар, "Товар") <> Неопределено Тогда
					КратноеКоличество = Цел(НакопленноеУсловноеКоличество / (Условие.УсловноеКоличество + 1));
				Иначе
					КратноеКоличество = Цел(НакопленноеУсловноеКоличество / (Условие.УсловноеКоличество));
				КонецЕсли;
				
				НакопленноеБонусноеКоличество = НакопленноеБонусноеКоличество + КратноеКоличество * Условие.БонусноеКоличество;
				
				Если Выборка.Акция.Триггеры.Найти(Строка.Товар, "Товар") <> Неопределено И Выборка.Акция.Бонусы.Найти(Строка.Товар, "Товар") <> Неопределено Тогда
					НакопленноеУсловноеКоличество = НакопленноеУсловноеКоличество - КратноеКоличество * Условие.УсловноеКоличество - НакопленноеБонусноеКоличество;
				Иначе
					НакопленноеУсловноеКоличество = НакопленноеУсловноеКоличество - КратноеКоличество * Условие.УсловноеКоличество;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Триггер Из Выборка.Акция.Триггеры Цикл
			ТриггерСтрока = ИсключаемыеТриггерныеТовары.Добавить();
			ТриггерСтрока.Акция = Выборка.Акция;
			ТриггерСтрока.Товар = Триггер.Товар;
		КонецЦикла;
		
		Для Каждого Бонус Из Выборка.Акция.Бонусы Цикл
			БонусСтрока = ИсключаемыеБонусныеТовары.Добавить();
			БонусСтрока.Акция = Выборка.Акция;
			БонусСтрока.Товар = Бонус.Товар;
		КонецЦикла;
		
		//// Проверяем, если ассортимент для бонуса состоит из одной позиции
		//Если Выборка.Акция.Бонусы.Количество() = 1 Тогда
		//	НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Товар", Выборка.Акция.Бонусы[0].Товар));
		//	Если НайденныеСтроки.Количество() = 0 Тогда
		//		НоваяСтрока = Объект.Товары.Добавить();
		//		НоваяСтрока.Товар = Выборка.Акция.Бонусы[0].Товар;
		//	КонецЕсли;
		//КонецЕсли;
	КонецЦикла;
	
	//// Обнуляем количество бонусов для каждой строки
	//Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
	//	ТекущаяСтрока.БонусКоличество = 0;
	//	ТекущаяСтрока.БонусСумма = 0;
	//КонецЦикла;
	
	Если Выборка.Количество() > 0 Тогда
		// Проверяем и усталавливаем количество бонусов для текущей строки
		Если ЗначениеЗаполнено(ИдентификаторТекущейСтроки) Тогда
			Если ИсключаемыеБонусныеТовары.Найти(Строка.Товар, "Товар") <> Неопределено Тогда
				Строка.БонусКоличество = Мин(Строка.Количество, НакопленноеБонусноеКоличество);
				Строка.БонусСумма = Строка.ЦенаОтпускная * Строка.БонусКоличество;
				
	            НакопленноеБонусноеКоличество = НакопленноеБонусноеКоличество - Строка.БонусКоличество;
			КонецЕсли;
		КонецЕсли;
		
		// Проверяем и усталавливаем количество бонусов для каждой строки (кроме текущей)
		Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
			Если ТекущаяСтрока.ПолучитьИдентификатор() = ИдентификаторТекущейСтроки Тогда
				Продолжить;
			КонецЕсли;
			
			Если ИсключаемыеБонусныеТовары.Найти(ТекущаяСтрока.Товар, "Товар") = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ТекущаяСтрока.БонусКоличество = Мин(ТекущаяСтрока.Количество, НакопленноеБонусноеКоличество);
			ТекущаяСтрока.БонусСумма = ТекущаяСтрока.ЦенаОтпускная * ТекущаяСтрока.БонусКоличество;
			
			НакопленноеБонусноеКоличество = НакопленноеБонусноеКоличество - ТекущаяСтрока.БонусКоличество;
		КонецЦикла;
		
		//// Остаточное количество бонуса прибавляем к текущей строке
		//Если ИсключаемыеБонусныеТовары.Найти(Строка.Товар, "Товар") <> Неопределено Тогда
		//	Строка.БонусКоличество = Строка.БонусКоличество + НакопленноеБонусноеКоличество;
		//	Строка.БонусСумма = Строка.ЦенаОтпускная * Строка.БонусКоличество;
		//	
		//	НакопленноеБонусноеКоличество = НакопленноеБонусноеКоличество - Строка.БонусКоличество;
		//КонецЕсли;
	КонецЕсли;
	
	Если Строка <> Неопределено Тогда
		Строка.БонусСумма = Строка.ЦенаОтпускная * Строка.БонусКоличество;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция КоличествоВыбранныхТоваров(ТаблицаТоваров, СписокТоваров)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	&Таблица КАК Данные
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Товары.Количество) КАК Количество
	|ИЗ
	|	Данные КАК Товары
	|ГДЕ
	|	Товары.Товар В (&Список)
	|"
	);
	
	Запрос.УстановитьПараметр("Таблица", ТаблицаТоваров);
	Запрос.УстановитьПараметр("Список", СписокТоваров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Данные = РезультатЗапроса.Выгрузить();
	
	Возврат Данные.Итог("Количество");
КонецФункции

&НаСервере
Функция СуммаВыбранныхТоваров(ТаблицаТоваров, СписокТоваров)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	&Таблица КАК Данные
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Товары.СуммаПродажная) КАК Сумма
	|ИЗ
	|	Данные КАК Товары
	|ГДЕ
	|	Товары.Товар В (&Список)
	|"
	);
	
	Запрос.УстановитьПараметр("Таблица", ТаблицаТоваров);
	Запрос.УстановитьПараметр("Список", СписокТоваров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Данные = РезультатЗапроса.Выгрузить();
	
	Возврат Данные.Итог("Сумма");
КонецФункции

&НаСервере
Функция СписокТриггерныхТоваров(ТаблицаТоваров)
	Результат = Новый Массив;
	
	Для Каждого Строка Из ТаблицаТоваров Цикл
		Если Строка.Количество > 0 Тогда
			Результат.Добавить(Строка.Товар);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

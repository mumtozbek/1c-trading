
Функция Десериализовать(XMLСтрока, КакСтруктуру = Ложь) Экспорт
	ЧтениеXML = Новый ЧтениеXML;
	
	Если СтрНачинаетсяС(НРег(СокрЛП(Лев(XMLСтрока, 1024))), "<") ИЛИ НРег(Лев(XMLСтрока, 5)) = "<html" ИЛИ НРег(Лев(XMLСтрока, 14)) = "<!doctype html" Тогда
		ЧтениеXML.УстановитьСтроку(XMLСтрока);
	ИначеЕсли НайтиФайлы(Лев(СокрЛП(XMLСтрока), 260)).Количество() > 0 Тогда 
		Файл = Новый Файл(XMLСтрока);
		Если Не Файл.Существует() Тогда
			ВызватьИсключение "Файл """ + XMLСтрока + """ не существует!";
		КонецЕсли;
		Файл = "";
		ЧтениеXML.ОткрытьФайл(XMLСтрока);
	КонецЕсли;
	
	Если КакСтруктуру Тогда
    	Корень = ЧитатьКакСтруктуру(ЧтениеXML);
	Иначе
    	Корень = ЧитатьКакСоответствие(ЧтениеXML);
	КонецЕсли;
	
	ЧтениеXML = "";
	
	Возврат Корень;
КонецФункции

Функция СериализоватьXDTO(ОбъектСериализации) Экспорт
	ДеревоВОбъектеXDTO = СериализаторXDTO.ЗаписатьXDTO(ОбъектСериализации); 
	ЗаписьXML = Новый ЗаписьXML; 
	ЗаписьXML.УстановитьСтроку();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ДеревоВОбъектеXDTO); 
	Возврат ЗаписьXML.Закрыть();
КонецФункции

Функция ДесериализоватьXDTO(XMLСтрока) Экспорт
    ЧтениеXMLДанных = Новый ЧтениеXML; 
    ЧтениеXMLДанных.УстановитьСтроку(XMLСтрока); 
    Параметр = СериализаторXDTO.ПрочитатьXML(ЧтениеXMLДанных); 
    ЧтениеXMLДанных.Закрыть(); 
    Возврат Параметр; 
КонецФункции

Функция ЧитатьКакСтруктуру(ЧтениеXML, ТипПоследнегоЭлемента = Неопределено)
	Ветка = Новый Структура;
	Значение = "";
	
	Пока ЧтениеXML.Прочитать() Цикл
		ТипУзла = ЧтениеXML.ТипУзла;
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ТипПоследнегоЭлемента = ТипУзлаXML.НачалоЭлемента;
			Временно = "";
			Если Ветка.Свойство(ЧтениеXML.Имя, Временно) Тогда
				Если ТипЗнч(Временно) <> Тип("Массив") Тогда
					ЭнЗэ = Новый Массив;
					ЭнЗэ.Добавить(Временно);
					Временно = ЭнЗэ;
					ЭнЗэ = "";
					Ветка.Удалить(ЧтениеXML.Имя);
					Ветка.Вставить(ЧтениеXML.Имя, Временно);
				КонецЕсли;
				Временно.Добавить(ЧитатьКакСтруктуру(ЧтениеXML, ТипПоследнегоЭлемента));
			Иначе
				Ветка.Вставить(ЧтениеXML.Имя, ЧитатьКакСтруктуру(ЧтениеXML, ТипПоследнегоЭлемента));
			КонецЕсли;
		ИначеЕсли ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			ТипПоследнегоЭлемента = ТипУзлаXML.КонецЭлемента;
			Возврат ?(ЗначениеЗаполнено(Ветка), Ветка, Значение);
		ИначеЕсли ТипУзла = ТипУзлаXML.Текст И Не ТипПоследнегоЭлемента = ТипУзлаXML.Текст Тогда
			ТипПоследнегоЭлемента = ТипУзлаXML.Текст;
			Значение = ЧтениеXML.Значение;
			ЧтениеXML.Прочитать(); //Вычитка закрывающего тега
			Возврат Значение;
		Иначе
			// игнорируем текст вне узлов
			// можем также добавлять текст вне узлов в текст, находящийся в предыдущем узле через какой нибудь спецсимвол
			// например через Таб, код ниже:
			//Временно[Временно.ВГраница()] = Временно[Временно.ВГраница()] + Символы.Таб + ЧтениеXML.Значение
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ветка;
КонецФункции

Функция ЧитатьКакСоответствие(ЧтениеXML, ТипПоследнегоЭлемента = Неопределено)	
	Ветка = Новый Соответствие;
	Значение = "";
	
	Пока ЧтениеXML.Прочитать() Цикл
		ТипУзла = ЧтениеXML.ТипУзла;
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ТипПоследнегоЭлемента = ТипУзлаXML.НачалоЭлемента; 
			Имя = ЧтениеXML.Имя;
			Временно = Ветка.Получить(Имя);
			Если Временно = Неопределено Тогда
				Ветка.Вставить(Имя, ЧитатьКакСоответствие(ЧтениеXML, ТипПоследнегоЭлемента));
			Иначе
				Если ТипЗнч(Временно) <> Тип("Массив") Тогда
					ЭнЗэ = Новый Массив;
					ЭнЗэ.Добавить(Временно);
					Временно = ЭнЗэ;
					ЭнЗэ = "";
					Ветка.Удалить(Имя);
					Ветка.Вставить(Имя, Временно);
				КонецЕсли;
				Временно.Добавить(ЧитатьКакСоответствие(ЧтениеXML, ТипПоследнегоЭлемента));
			КонецЕсли;
		ИначеЕсли ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			ТипПоследнегоЭлемента = ТипУзлаXML.КонецЭлемента;
			Возврат ?(ЗначениеЗаполнено(Ветка), Ветка, Значение);
		ИначеЕсли ТипУзла = ТипУзлаXML.Текст И Не ТипПоследнегоЭлемента = ТипУзлаXML.Текст Тогда
			ТипПоследнегоЭлемента = ТипУзлаXML.Текст;
			Значение = Значение + ЧтениеXML.Значение;
			ЧтениеXML.Прочитать(); //Вычитка закрывающего тега
			Возврат Значение;
		Иначе
			// игнорируем текст вне узлов
			// можем также добавлять текст вне узлов в текст, находящийся в предыдущем узле через какой нибудь спецсимвол
			// например через Таб, код ниже:
			//Временно[Временно.ВГраница()] = Временно[Временно.ВГраница()] + Символы.Таб + ЧтениеXML.Значение   						
		КонецЕсли
	КонецЦикла;
	
	Возврат Ветка;
КонецФункции
         
Функция Получить(Документ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЭлектронныеДокументы.Оператор КАК Оператор,
	|	ЭлектронныеДокументы.Идентификатор КАК Идентификатор,
	|	ЭлектронныеДокументы.ИдентификаторОператора КАК ИдентификаторОператора,
	|	ЭлектронныеДокументы.Сигнатура КАК Сигнатура,
	|	ЭлектронныеДокументы.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.ЭлектронныеДокументы КАК ЭлектронныеДокументы
	|ГДЕ
	|	Документ = &Документ");
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("Оператор,Идентификатор,Сигнатура,Статус,ИдентификаторОператора", Выборка.Оператор, Выборка.Идентификатор, Выборка.Сигнатура, Выборка.Статус, Выборка.ИдентификаторОператора);
	КонецЕсли;
КонецФункции
         
Функция ПолучитьПоИдентификатору(Идентификатор) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЭлектронныеДокументы.Документ КАК Документ,
	|	ЭлектронныеДокументы.Идентификатор КАК Идентификатор,
	|	ЭлектронныеДокументы.ИдентификаторОператора КАК ИдентификаторОператора,
	|	ЭлектронныеДокументы.Сигнатура КАК Сигнатура,
	|	ЭлектронныеДокументы.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.ЭлектронныеДокументы КАК ЭлектронныеДокументы
	|ГДЕ
	|	Идентификатор = &Идентификатор");
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("Документ,Идентификатор,Сигнатура,Статус,ИдентификаторОператора", Выборка.Документ, Выборка.Идентификатор, Выборка.Сигнатура, Выборка.Статус, Выборка.ИдентификаторОператора);
	КонецЕсли;
КонецФункции
         
Функция ПолучитьПоИдентификаторуОператора(ИдентификаторОператора) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЭлектронныеДокументы.Документ КАК Документ,
	|	ЭлектронныеДокументы.Идентификатор КАК Идентификатор,
	|	ЭлектронныеДокументы.ИдентификаторОператора КАК ИдентификаторОператора,
	|	ЭлектронныеДокументы.Сигнатура КАК Сигнатура,
	|	ЭлектронныеДокументы.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.ЭлектронныеДокументы КАК ЭлектронныеДокументы
	|ГДЕ
	|	ИдентификаторОператора = &ИдентификаторОператора");
	
	Запрос.УстановитьПараметр("ИдентификаторОператора", ИдентификаторОператора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Новый Структура("Документ,Идентификатор,Сигнатура,Статус,ИдентификаторОператора", Выборка.Документ, Выборка.Идентификатор, Выборка.Сигнатура, Выборка.Статус, Выборка.ИдентификаторОператора);
	КонецЕсли;
КонецФункции

Функция Установить(Оператор, Документ, Идентификатор, Сигнатура, Статус, ИдентификаторОператора = Неопределено) Экспорт
	Если ЗначениеЗаполнено(ИдентификаторОператора) = Ложь Тогда
		ИдентификаторОператора = Идентификатор;
	КонецЕсли;
	
	Запись = РегистрыСведений.ЭлектронныеДокументы.СоздатьМенеджерЗаписи();
	Запись.Оператор = Оператор;
	Запись.Документ = Документ;
	Запись.Идентификатор = Идентификатор;
	Запись.Сигнатура = Сигнатура;
	Запись.Статус = Статус;
	Запись.ИдентификаторОператора = ИдентификаторОператора;
	Запись.Записать(Истина);
КонецФункции

Функция ПолучитьИдентификатор(Элемент = Неопределено) Экспорт
	Если ЗначениеЗаполнено(Элемент) Тогда
		ГУИД = XMLСтрока(Элемент.УникальныйИдентификатор());
	Иначе
		ГУИД = XMLСтрока(Новый УникальныйИдентификатор);
	КонецЕсли;
	
	ЧастиГУИД = СтрРазделить(ГУИД, "-");
	
	Возврат Лев(СтрСоединить(ЧастиГУИД, ""), 24);
КонецФункции

Функция ПолучитьНаименованиеКонтрагента(Наименование) Экспорт
	Наименование = СокрЛП(Наименование);
	
	Соответствия = Новый Массив;
	Соответствия.Добавить(Новый Структура("Полное,Короткое", "MAS'ULIYATI CHEKLANGAN JAMIYATI","MCHJ"));
	Соответствия.Добавить(Новый Структура("Полное,Короткое", "MAS`ULIYATI CHEKLANGAN JAMIYATI","MCHJ"));
	Соответствия.Добавить(Новый Структура("Полное,Короткое", "MAS'ULIYATI CHEKLANGAN JAMIYAT","MCHJ"));
	Соответствия.Добавить(Новый Структура("Полное,Короткое", "MAS`ULIYATI CHEKLANGAN JAMIYAT","MCHJ"));
	Соответствия.Добавить(Новый Структура("Полное,Короткое", "OILAVIY KORXONA","OK"));
	Соответствия.Добавить(Новый Структура("Полное,Короткое", "XUSUSIY KORXONA","XK"));
	
	Для Каждого Соответствие Из Соответствия Цикл
		Наименование = СтрЗаменить(Наименование, Соответствие.Полное, Соответствие.Короткое);
	КонецЦикла;
	
	Возврат Наименование;
КонецФункции

Функция Удалить(Документ) Экспорт
	Набор = РегистрыСведений.ЭлектронныеДокументы.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Документ);
	Набор.Прочитать();
	
	Для Индекс = 1 - Набор.Количество() По 0 Цикл
		Набор.Удалить(-Индекс);
	КонецЦикла;
	
	Набор.Записать();
КонецФункции

Функция УдалитьИдентификатор(Идентификатор) Экспорт
	Набор = РегистрыСведений.ЭлектронныеДокументы.СоздатьНаборЗаписей();
	Набор.Отбор.Идентификатор.Установить(Идентификатор);
	Набор.Прочитать();
	
	Для Индекс = 1 - Набор.Количество() По 0 Цикл
		Набор.Удалить(-Индекс);
	КонецЦикла;
	
	Набор.Записать();
КонецФункции

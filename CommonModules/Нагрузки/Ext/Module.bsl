
&НаСервере
Процедура Обновить(Объект, ИдентификаторСтроки = Неопределено, Колонка = Неопределено) Экспорт
	Момент = ОбщийМодульСервер.ПолучитьМоментВремениДокумента(Объект);
	
	ТаблицаНагрузок = Новый ТаблицаЗначений;
	ТаблицаНагрузок.Колонки.Добавить("Товар", Новый ОписаниеТипов("СправочникСсылка.Товары"));
	ТаблицаНагрузок.Колонки.Добавить("Остаток", Новый ОписаниеТипов("Число"));
	ТаблицаНагрузок.Колонки.Добавить("ЦенаПродажная", Новый ОписаниеТипов("Число"));
	ТаблицаНагрузок.Колонки.Добавить("Скидка", Новый ОписаниеТипов("Число"));
	ТаблицаНагрузок.Колонки.Добавить("ЦенаОтпускная", Новый ОписаниеТипов("Число"));
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Нагрузки.Товар КАК Товар,
		|	ЕСТЬNULL(РегОстатки.КоличествоОстаток, 0) КАК Остаток,
		|	ЕСТЬNULL(РегЦенаПродажная.Цена, 0) КАК ЦенаПродажная,
		|	ЕСТЬNULL(РегСкидкиТоваров.Скидка, 0) КАК Скидка,
		|	ЕСТЬNULL(РегЦенаПродажная.Цена, 0) * (100 - ЕСТЬNULL(РегСкидкиТоваров.Скидка, 0)) / 100 КАК ЦенаОтпускная
		|ИЗ
		|	Справочник.Нагрузки.Товары КАК Нагрузки
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Остатки.Остатки(&Момент, Склад В (&Склад) И Порожняя = Ложь И Бронь = Ложь) КАК РегОстатки ПО (РегОстатки.Товар = Нагрузки.Товар)
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних(&Момент, Тип = ""ЦенаПродажная"") КАК РегЦенаПродажная ПО (РегЦенаПродажная.Товар = Нагрузки.Товар)
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкидкиТоваров.СрезПоследних(&Момент, Контрагент = &Контрагент ИЛИ Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК РегСкидкиТоваров ПО (РегСкидкиТоваров.Товар = Нагрузки.Товар)
		|ГДЕ
		|	Нагрузки.Ссылка.Активный
		|	И Нагрузки.Ссылка.ДатаНачала <= &Дата
		|	И Нагрузки.Ссылка.ДатаОкончания >= &Дата
		|УПОРЯДОЧИТЬ ПО
		|	Нагрузки.Ссылка.Приоритет
		|"
	);
	
	Запрос.УстановитьПараметр("Момент", Момент);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаНагрузок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ТаблицаНагрузок.Свернуть("Товар,Остаток,ЦенаПродажная,Скидка,ЦенаОтпускная");
	ТаблицаНагрузок.Сортировать("ЦенаОтпускная УБЫВ");
	
	НакопленнаяСумма = РассчитатьСуммуНакоплений(Объект.Товары.Выгрузить(), ТаблицаНагрузок.ВыгрузитьКолонку("Товар"));
	
	Для Каждого СтрокаНагрузки Из ТаблицаНагрузок Цикл
		Если НакопленнаяСумма > СтрокаНагрузки.ЦенаОтпускная Тогда
			Количество = Цел(НакопленнаяСумма / СтрокаНагрузки.ЦенаОтпускная);
			Если Количество > 0 Тогда
				НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Товар", СтрокаНагрузки.Товар));
				Если НайденныеСтроки.Количество() > 0 Тогда
					Строка = НайденныеСтроки[0];
					Строка.Количество = Макс(Количество, Строка.Количество);
				Иначе
					Строка = Объект.Товары.Добавить();
					Строка.Товар = СтрокаНагрузки.Товар;
					Строка.Количество = Количество;
				КонецЕсли;
				
				Если Объект.Товары.Выгрузить().Колонки.Найти("Остаток") <> Неопределено Тогда
					Строка.Остаток = СтрокаНагрузки.Остаток;
				ИначеЕсли Объект.Товары.Выгрузить().Колонки.Найти("ОстатокДо") <> Неопределено Тогда
					Строка.ОстатокДо = СтрокаНагрузки.Остаток;
				КонецЕсли;
				
				Строка.Количество = Мин(СтрокаНагрузки.Остаток, Строка.Количество);
				
				Строка.ЦенаПродажная = СтрокаНагрузки.ЦенаПродажная;
				Строка.СуммаПродажная = Строка.ЦенаПродажная * Строка.Количество;
				
				Строка.Скидка = СтрокаНагрузки.Скидка;
				
				Строка.ЦенаОтпускная = СтрокаНагрузки.ЦенаОтпускная;
				Строка.СуммаОтпускная = Строка.ЦенаОтпускная * Строка.Количество;
				
				НакопленнаяСумма = НакопленнаяСумма - Строка.СуммаОтпускная;
			КонецЕсли;
		ИначеЕсли Колонка <> "ТоварыКоличество" Тогда
			НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Товар", СтрокаНагрузки.Товар));
			Если НайденныеСтроки.Количество() > 0 Тогда
				Для Каждого Строка Из НайденныеСтроки Цикл
					Если Строка.ПолучитьИдентификатор() <> ИдентификаторСтроки Тогда
						Строка = НайденныеСтроки[0];
						Строка.Количество = 0;
						Строка.СуммаПродажная = 0;
						Строка.СуммаОтпускная = 0;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция РассчитатьСуммуНакоплений(ТаблицаТоваров, СписокТоваров)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	&Таблица КАК Данные
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Товары.СуммаПродажная) - СУММА(Товары.СуммаОтпускная) КАК Сумма
	|ИЗ
	|	Данные КАК Товары
	|ГДЕ
	|	Товары.Товар НЕ В (&Список)
	|"
	);
	
	Запрос.УстановитьПараметр("Таблица", ТаблицаТоваров);
	Запрос.УстановитьПараметр("Список", СписокТоваров);
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	Возврат Данные.Итог("Сумма");
КонецФункции

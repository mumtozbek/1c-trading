
&НаСервере
Функция Установить(Источник, Элемент, Идентификатор, Замещать = Истина) Экспорт
	Запись = РегистрыСведений.ВнешниеИдентификаторы.СоздатьМенеджерЗаписи();
	Запись.Источник = Источник;
	Запись.Элемент = Элемент;
	Запись.Идентификатор = Идентификатор;
	Запись.Записать(Замещать);
КонецФункции

&НаСервере
Функция УдалитьСвязиЭлемента(Источник, Элемент) Экспорт
	Набор = РегистрыСведений.ВнешниеИдентификаторы.СоздатьНаборЗаписей();
	Набор.Отбор.Источник.Установить(Источник);
	Набор.Отбор.Элемент.Установить(Элемент);
	Набор.Прочитать();
	
	Для Индекс = 1 - Набор.Количество() По 0 Цикл
		Набор.Удалить(-Индекс);
	КонецЦикла;
	
	Набор.Записать();
КонецФункции

&НаСервере
Функция УдалитьСвязиЭлементаПоИдентификатору(Источник, Элемент, Идентификатор) Экспорт
	Набор = РегистрыСведений.ВнешниеИдентификаторы.СоздатьНаборЗаписей();
	Набор.Отбор.Источник.Установить(Источник);
	Набор.Отбор.Элемент.Установить(Элемент);
	Набор.Отбор.Идентификатор.Установить(Идентификатор);
	Набор.Прочитать();
	
	Для Индекс = 1 - Набор.Количество() По 0 Цикл
		Набор.Удалить(-Индекс);
	КонецЦикла;
	
	Набор.Записать();
КонецФункции

&НаСервере
Функция УдалитьКонфликтныеСвязи(Источник, Элемент, Идентификатор) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВнешниеИдентификаторы.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.ВнешниеИдентификаторы КАК ВнешниеИдентификаторы
	|ГДЕ
	|	Источник = &Источник И Идентификатор = &Идентификатор И Элемент <> &Элемент И ТИПЗНАЧЕНИЯ(Элемент) = &Тип");
	
	Запрос.УстановитьПараметр("Источник", Источник);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Запрос.УстановитьПараметр("Элемент", Элемент);
	Запрос.УстановитьПараметр("Тип", ТипЗнч(Элемент));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ВнешниеИдентификаторы.УдалитьСвязиЭлементаПоИдентификатору(Источник, Выборка.Элемент, Идентификатор);
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьВнешниеИдентификаторыПоЭлементу(Источник, Элемент) Экспорт
	Результат = Новый Массив;
	
	Набор = РегистрыСведений.ВнешниеИдентификаторы.СоздатьНаборЗаписей();
	Набор.Отбор.Источник.Установить(Источник);
	Набор.Отбор.Элемент.Установить(Элемент);
	Набор.Прочитать();
	
	Для Каждого Запись Из Набор Цикл
		Результат.Добавить(Запись.Идентификатор);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьЭлементПоВнешнемуИдентификатору(Источник, Идентификатор, Прототип) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВнешниеИдентификаторы.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.ВнешниеИдентификаторы КАК ВнешниеИдентификаторы
	|ГДЕ
	|	Источник = &Источник И Идентификатор = &Идентификатор И ТИПЗНАЧЕНИЯ(Элемент) = &Тип");
	
	Запрос.УстановитьПараметр("Источник", Источник);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Запрос.УстановитьПараметр("Тип", ТипЗнч(Прототип));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Элемент;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьСправочник(Вид, Источник, Идентификатор, Реквизиты, Обновление = Ложь) Экспорт
	Элемент = ВнешниеИдентификаторы.ПолучитьЭлементПоВнешнемуИдентификатору(Источник, Идентификатор, Справочники[Вид].ПустаяСсылка());
	
	Если (Обновление ИЛИ Элемент = Неопределено) И ЗначениеЗаполнено(Реквизиты) Тогда
		Если Элемент = Неопределено Тогда
			ЭлементОбъект = Справочники[Вид].СоздатьЭлемент();
		Иначе
			ЭлементОбъект = Элемент.ПолучитьОбъект();
		КонецЕсли;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Если Реквизит.Значение <> Неопределено Тогда
				Если Метаданные.ОбщиеРеквизиты.Найти(Реквизит.Ключ) <> Неопределено И Метаданные.ОбщиеРеквизиты[Реквизит.Ключ].Состав.Содержит(ЭлементОбъект.Метаданные()) Тогда
					ОбщийРеквизит = Метаданные.ОбщиеРеквизиты[Реквизит.Ключ].Состав.Найти(ЭлементОбъект.Метаданные());
					Если ОбщийРеквизит <> Неопределено Тогда
						Если ОбщийРеквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда
							ЭлементОбъект[Реквизит.Ключ] = Реквизит.Значение;
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли (Реквизит.Ключ = "Код" ИЛИ Реквизит.Ключ = "Наименование" ИЛИ Реквизит.Ключ = "Владелец" ИЛИ Реквизит.Ключ = "Родитель") ИЛИ Метаданные.Справочники[Вид].Реквизиты.Найти(Реквизит.Ключ) <> Неопределено Тогда
					ЭлементОбъект[Реквизит.Ключ] = Реквизит.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементОбъект.ДополнительныеСвойства.Вставить("Источник", Источник);
		ЭлементОбъект.ДополнительныеСвойства.Вставить("Идентификатор", Идентификатор);
		ЭлементОбъект.Записать();
		
		Возврат ЭлементОбъект.Ссылка;
	КонецЕсли;
	
	Возврат Элемент;
КонецФункции

&НаСервере
Функция ПолучитьДокумент(Вид, Источник, Идентификатор, Реквизиты, Обновление = Ложь) Экспорт
	Элемент = ВнешниеИдентификаторы.ПолучитьЭлементПоВнешнемуИдентификатору(Источник, Идентификатор, Документы[Вид].ПустаяСсылка());
	
	Если (Обновление ИЛИ Элемент = Неопределено) И ЗначениеЗаполнено(Реквизиты) Тогда
		Если Элемент = Неопределено Тогда
			ЭлементОбъект = Документы[Вид].СоздатьДокумент();
		Иначе
			ЭлементОбъект = Элемент.ПолучитьОбъект();
		КонецЕсли;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Если Реквизит.Значение <> Неопределено Тогда
				Если Метаданные.ОбщиеРеквизиты.Найти(Реквизит.Ключ) <> Неопределено И Метаданные.ОбщиеРеквизиты[Реквизит.Ключ].Состав.Содержит(ЭлементОбъект.Метаданные()) Тогда
					ОбщийРеквизит = Метаданные.ОбщиеРеквизиты[Реквизит.Ключ].Состав.Найти(ЭлементОбъект.Метаданные());
					Если ОбщийРеквизит <> Неопределено Тогда
						Если ОбщийРеквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда
							ЭлементОбъект[Реквизит.Ключ] = Реквизит.Значение;
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли Реквизит.Ключ = "Номер" ИЛИ Реквизит.Ключ = "Дата" ИЛИ Метаданные.Документы[Вид].Реквизиты.Найти(Реквизит.Ключ) <> Неопределено Тогда
					ЭлементОбъект[Реквизит.Ключ] = Реквизит.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементОбъект.ДополнительныеСвойства.Вставить("Источник", Источник);
		ЭлементОбъект.ДополнительныеСвойства.Вставить("Идентификатор", Идентификатор);
		ЭлементОбъект.Записать();
		
		Возврат ЭлементОбъект.Ссылка;
	КонецЕсли;
	
	Возврат Элемент;
КонецФункции
